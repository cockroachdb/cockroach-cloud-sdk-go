/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListAvailableRegionsResponse struct for ListAvailableRegionsResponse
type ListAvailableRegionsResponse struct {
	Regions []CloudProviderRegion `json:"regions"`
	Pagination *PaginationResponse `json:"pagination,omitempty"`
}

// NewListAvailableRegionsResponse instantiates a new ListAvailableRegionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAvailableRegionsResponse(regions []CloudProviderRegion) *ListAvailableRegionsResponse {
	this := ListAvailableRegionsResponse{}
	this.Regions = regions
	return &this
}

// NewListAvailableRegionsResponseWithDefaults instantiates a new ListAvailableRegionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAvailableRegionsResponseWithDefaults() *ListAvailableRegionsResponse {
	this := ListAvailableRegionsResponse{}
	return &this
}

// GetRegions returns the Regions field value
func (o *ListAvailableRegionsResponse) GetRegions() []CloudProviderRegion {
	if o == nil {
		var ret []CloudProviderRegion
		return ret
	}

	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value
// and a boolean to check if the value has been set.
func (o *ListAvailableRegionsResponse) GetRegionsOk() ([]CloudProviderRegion, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Regions, true
}

// SetRegions sets field value
func (o *ListAvailableRegionsResponse) SetRegions(v []CloudProviderRegion) {
	o.Regions = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ListAvailableRegionsResponse) GetPagination() PaginationResponse {
	if o == nil || o.Pagination == nil {
		var ret PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAvailableRegionsResponse) GetPaginationOk() (*PaginationResponse, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ListAvailableRegionsResponse) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PaginationResponse and assigns it to the Pagination field.
func (o *ListAvailableRegionsResponse) SetPagination(v PaginationResponse) {
	o.Pagination = &v
}

func (o ListAvailableRegionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["regions"] = o.Regions
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableListAvailableRegionsResponse struct {
	value *ListAvailableRegionsResponse
	isSet bool
}

func (v NullableListAvailableRegionsResponse) Get() *ListAvailableRegionsResponse {
	return v.value
}

func (v *NullableListAvailableRegionsResponse) Set(val *ListAvailableRegionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAvailableRegionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAvailableRegionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAvailableRegionsResponse(val *ListAvailableRegionsResponse) *NullableListAvailableRegionsResponse {
	return &NullableListAvailableRegionsResponse{value: val, isSet: true}
}

func (v NullableListAvailableRegionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAvailableRegionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


