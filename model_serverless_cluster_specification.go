/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerlessClusterSpecification struct for ServerlessClusterSpecification
type ServerlessClusterSpecification struct {
	// Region values should match the cloud provider's zone code. For example, for Oregon, set region_name to \"us-west2\" for GCP and \"us-west-2\" for AWS.
	Regions []string `json:"regions"`
	SpendLimit int32 `json:"spend_limit"`
}

// NewServerlessClusterSpecification instantiates a new ServerlessClusterSpecification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerlessClusterSpecification(regions []string, spendLimit int32) *ServerlessClusterSpecification {
	this := ServerlessClusterSpecification{}
	this.Regions = regions
	this.SpendLimit = spendLimit
	return &this
}

// NewServerlessClusterSpecificationWithDefaults instantiates a new ServerlessClusterSpecification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerlessClusterSpecificationWithDefaults() *ServerlessClusterSpecification {
	this := ServerlessClusterSpecification{}
	return &this
}

// GetRegions returns the Regions field value
func (o *ServerlessClusterSpecification) GetRegions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value
// and a boolean to check if the value has been set.
func (o *ServerlessClusterSpecification) GetRegionsOk() ([]string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Regions, true
}

// SetRegions sets field value
func (o *ServerlessClusterSpecification) SetRegions(v []string) {
	o.Regions = v
}

// GetSpendLimit returns the SpendLimit field value
func (o *ServerlessClusterSpecification) GetSpendLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SpendLimit
}

// GetSpendLimitOk returns a tuple with the SpendLimit field value
// and a boolean to check if the value has been set.
func (o *ServerlessClusterSpecification) GetSpendLimitOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SpendLimit, true
}

// SetSpendLimit sets field value
func (o *ServerlessClusterSpecification) SetSpendLimit(v int32) {
	o.SpendLimit = v
}

func (o ServerlessClusterSpecification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["regions"] = o.Regions
	}
	if true {
		toSerialize["spend_limit"] = o.SpendLimit
	}
	return json.Marshal(toSerialize)
}

type NullableServerlessClusterSpecification struct {
	value *ServerlessClusterSpecification
	isSet bool
}

func (v NullableServerlessClusterSpecification) Get() *ServerlessClusterSpecification {
	return v.value
}

func (v *NullableServerlessClusterSpecification) Set(val *ServerlessClusterSpecification) {
	v.value = val
	v.isSet = true
}

func (v NullableServerlessClusterSpecification) IsSet() bool {
	return v.isSet
}

func (v *NullableServerlessClusterSpecification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerlessClusterSpecification(val *ServerlessClusterSpecification) *NullableServerlessClusterSpecification {
	return &NullableServerlessClusterSpecification{value: val, isSet: true}
}

func (v NullableServerlessClusterSpecification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerlessClusterSpecification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


