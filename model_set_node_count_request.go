/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SetNodeCountRequest struct for SetNodeCountRequest
type SetNodeCountRequest struct {
	Regions map[string]int32 `json:"regions"`
}

// NewSetNodeCountRequest instantiates a new SetNodeCountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetNodeCountRequest(regions map[string]int32) *SetNodeCountRequest {
	this := SetNodeCountRequest{}
	this.Regions = regions
	return &this
}

// NewSetNodeCountRequestWithDefaults instantiates a new SetNodeCountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetNodeCountRequestWithDefaults() *SetNodeCountRequest {
	this := SetNodeCountRequest{}
	return &this
}

// GetRegions returns the Regions field value
func (o *SetNodeCountRequest) GetRegions() map[string]int32 {
	if o == nil {
		var ret map[string]int32
		return ret
	}

	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value
// and a boolean to check if the value has been set.
func (o *SetNodeCountRequest) GetRegionsOk() (*map[string]int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Regions, true
}

// SetRegions sets field value
func (o *SetNodeCountRequest) SetRegions(v map[string]int32) {
	o.Regions = v
}

func (o SetNodeCountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["regions"] = o.Regions
	}
	return json.Marshal(toSerialize)
}

type NullableSetNodeCountRequest struct {
	value *SetNodeCountRequest
	isSet bool
}

func (v NullableSetNodeCountRequest) Get() *SetNodeCountRequest {
	return v.value
}

func (v *NullableSetNodeCountRequest) Set(val *SetNodeCountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetNodeCountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetNodeCountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetNodeCountRequest(val *SetNodeCountRequest) *NullableSetNodeCountRequest {
	return &NullableSetNodeCountRequest{value: val, isSet: true}
}

func (v NullableSetNodeCountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetNodeCountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


