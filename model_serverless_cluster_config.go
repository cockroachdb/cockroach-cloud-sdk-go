/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerlessClusterConfig struct for ServerlessClusterConfig
type ServerlessClusterConfig struct {
	// Spend limit in US cents.
	SpendLimit int32 `json:"spend_limit"`
	// Used to build a connection string.
	RoutingId string `json:"routing_id"`
}

// NewServerlessClusterConfig instantiates a new ServerlessClusterConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerlessClusterConfig(spendLimit int32, routingId string) *ServerlessClusterConfig {
	this := ServerlessClusterConfig{}
	this.SpendLimit = spendLimit
	this.RoutingId = routingId
	return &this
}

// NewServerlessClusterConfigWithDefaults instantiates a new ServerlessClusterConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerlessClusterConfigWithDefaults() *ServerlessClusterConfig {
	this := ServerlessClusterConfig{}
	return &this
}

// GetSpendLimit returns the SpendLimit field value
func (o *ServerlessClusterConfig) GetSpendLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SpendLimit
}

// GetSpendLimitOk returns a tuple with the SpendLimit field value
// and a boolean to check if the value has been set.
func (o *ServerlessClusterConfig) GetSpendLimitOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SpendLimit, true
}

// SetSpendLimit sets field value
func (o *ServerlessClusterConfig) SetSpendLimit(v int32) {
	o.SpendLimit = v
}

// GetRoutingId returns the RoutingId field value
func (o *ServerlessClusterConfig) GetRoutingId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutingId
}

// GetRoutingIdOk returns a tuple with the RoutingId field value
// and a boolean to check if the value has been set.
func (o *ServerlessClusterConfig) GetRoutingIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoutingId, true
}

// SetRoutingId sets field value
func (o *ServerlessClusterConfig) SetRoutingId(v string) {
	o.RoutingId = v
}

func (o ServerlessClusterConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["spend_limit"] = o.SpendLimit
	}
	if true {
		toSerialize["routing_id"] = o.RoutingId
	}
	return json.Marshal(toSerialize)
}

type NullableServerlessClusterConfig struct {
	value *ServerlessClusterConfig
	isSet bool
}

func (v NullableServerlessClusterConfig) Get() *ServerlessClusterConfig {
	return v.value
}

func (v *NullableServerlessClusterConfig) Set(val *ServerlessClusterConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableServerlessClusterConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableServerlessClusterConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerlessClusterConfig(val *ServerlessClusterConfig) *NullableServerlessClusterConfig {
	return &NullableServerlessClusterConfig{value: val, isSet: true}
}

func (v NullableServerlessClusterConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerlessClusterConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


