/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DedicatedHardwareCreateSpecification struct for DedicatedHardwareCreateSpecification
type DedicatedHardwareCreateSpecification struct {
	MachineSpec DedicatedMachineTypeSpecification `json:"machine_spec"`
	// StorageGiB is the number of storage GiB per node in the cluster.
	StorageGib int32 `json:"storage_gib"`
	// DiskIOPs is the number of disk I/O operations per second that are permitted on each node in the cluster. Zero indicates the cloud provider-specific default. Only available for AWS clusters.
	DiskIops *int32 `json:"disk_iops,omitempty"`
}

// NewDedicatedHardwareCreateSpecification instantiates a new DedicatedHardwareCreateSpecification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDedicatedHardwareCreateSpecification(machineSpec DedicatedMachineTypeSpecification, storageGib int32) *DedicatedHardwareCreateSpecification {
	this := DedicatedHardwareCreateSpecification{}
	this.MachineSpec = machineSpec
	this.StorageGib = storageGib
	return &this
}

// NewDedicatedHardwareCreateSpecificationWithDefaults instantiates a new DedicatedHardwareCreateSpecification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDedicatedHardwareCreateSpecificationWithDefaults() *DedicatedHardwareCreateSpecification {
	this := DedicatedHardwareCreateSpecification{}
	return &this
}

// GetMachineSpec returns the MachineSpec field value
func (o *DedicatedHardwareCreateSpecification) GetMachineSpec() DedicatedMachineTypeSpecification {
	if o == nil {
		var ret DedicatedMachineTypeSpecification
		return ret
	}

	return o.MachineSpec
}

// GetMachineSpecOk returns a tuple with the MachineSpec field value
// and a boolean to check if the value has been set.
func (o *DedicatedHardwareCreateSpecification) GetMachineSpecOk() (*DedicatedMachineTypeSpecification, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MachineSpec, true
}

// SetMachineSpec sets field value
func (o *DedicatedHardwareCreateSpecification) SetMachineSpec(v DedicatedMachineTypeSpecification) {
	o.MachineSpec = v
}

// GetStorageGib returns the StorageGib field value
func (o *DedicatedHardwareCreateSpecification) GetStorageGib() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageGib
}

// GetStorageGibOk returns a tuple with the StorageGib field value
// and a boolean to check if the value has been set.
func (o *DedicatedHardwareCreateSpecification) GetStorageGibOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StorageGib, true
}

// SetStorageGib sets field value
func (o *DedicatedHardwareCreateSpecification) SetStorageGib(v int32) {
	o.StorageGib = v
}

// GetDiskIops returns the DiskIops field value if set, zero value otherwise.
func (o *DedicatedHardwareCreateSpecification) GetDiskIops() int32 {
	if o == nil || o.DiskIops == nil {
		var ret int32
		return ret
	}
	return *o.DiskIops
}

// GetDiskIopsOk returns a tuple with the DiskIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DedicatedHardwareCreateSpecification) GetDiskIopsOk() (*int32, bool) {
	if o == nil || o.DiskIops == nil {
		return nil, false
	}
	return o.DiskIops, true
}

// HasDiskIops returns a boolean if a field has been set.
func (o *DedicatedHardwareCreateSpecification) HasDiskIops() bool {
	if o != nil && o.DiskIops != nil {
		return true
	}

	return false
}

// SetDiskIops gets a reference to the given int32 and assigns it to the DiskIops field.
func (o *DedicatedHardwareCreateSpecification) SetDiskIops(v int32) {
	o.DiskIops = &v
}

func (o DedicatedHardwareCreateSpecification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["machine_spec"] = o.MachineSpec
	}
	if true {
		toSerialize["storage_gib"] = o.StorageGib
	}
	if o.DiskIops != nil {
		toSerialize["disk_iops"] = o.DiskIops
	}
	return json.Marshal(toSerialize)
}

type NullableDedicatedHardwareCreateSpecification struct {
	value *DedicatedHardwareCreateSpecification
	isSet bool
}

func (v NullableDedicatedHardwareCreateSpecification) Get() *DedicatedHardwareCreateSpecification {
	return v.value
}

func (v *NullableDedicatedHardwareCreateSpecification) Set(val *DedicatedHardwareCreateSpecification) {
	v.value = val
	v.isSet = true
}

func (v NullableDedicatedHardwareCreateSpecification) IsSet() bool {
	return v.isSet
}

func (v *NullableDedicatedHardwareCreateSpecification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDedicatedHardwareCreateSpecification(val *DedicatedHardwareCreateSpecification) *NullableDedicatedHardwareCreateSpecification {
	return &NullableDedicatedHardwareCreateSpecification{value: val, isSet: true}
}

func (v NullableDedicatedHardwareCreateSpecification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDedicatedHardwareCreateSpecification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


