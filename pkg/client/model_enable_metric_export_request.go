// Copyright 2022 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-09-20

package client

import (
	"encoding/json"
)

// EnableMetricExportRequest struct for EnableMetricExportRequest.
type EnableMetricExportRequest struct {
	Cloudwatch *CloudWatchConfig `json:"cloudwatch,omitempty"`
	Datadog    *DatadogConfig    `json:"datadog,omitempty"`
}

// NewEnableMetricExportRequest instantiates a new EnableMetricExportRequest object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableMetricExportRequest() *EnableMetricExportRequest {
	p := EnableMetricExportRequest{}
	return &p
}

// GetCloudwatch returns the Cloudwatch field value if set, zero value otherwise.
func (o *EnableMetricExportRequest) GetCloudwatch() CloudWatchConfig {
	if o == nil || o.Cloudwatch == nil {
		var ret CloudWatchConfig
		return ret
	}
	return *o.Cloudwatch
}

// SetCloudwatch gets a reference to the given CloudWatchConfig and assigns it to the Cloudwatch field.
func (o *EnableMetricExportRequest) SetCloudwatch(v CloudWatchConfig) {
	o.Cloudwatch = &v
}

// GetDatadog returns the Datadog field value if set, zero value otherwise.
func (o *EnableMetricExportRequest) GetDatadog() DatadogConfig {
	if o == nil || o.Datadog == nil {
		var ret DatadogConfig
		return ret
	}
	return *o.Datadog
}

// SetDatadog gets a reference to the given DatadogConfig and assigns it to the Datadog field.
func (o *EnableMetricExportRequest) SetDatadog(v DatadogConfig) {
	o.Datadog = &v
}

func (o EnableMetricExportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cloudwatch != nil {
		toSerialize["cloudwatch"] = o.Cloudwatch
	}
	if o.Datadog != nil {
		toSerialize["datadog"] = o.Datadog
	}
	return json.Marshal(toSerialize)
}
