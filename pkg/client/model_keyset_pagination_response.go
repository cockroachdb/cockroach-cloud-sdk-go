// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-07-12T00:00:00.000Z

package client

import (
	"encoding/json"
)

// KeysetPaginationResponse struct for KeysetPaginationResponse.
type KeysetPaginationResponse struct {
	NextPage             *string `json:"next_page,omitempty"`
	PreviousPage         *string `json:"previous_page,omitempty"`
	AdditionalProperties map[string]interface{}
}

type keysetPaginationResponse KeysetPaginationResponse

// NewKeysetPaginationResponse instantiates a new KeysetPaginationResponse object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeysetPaginationResponse() *KeysetPaginationResponse {
	p := KeysetPaginationResponse{}
	return &p
}

// GetNextPage returns the NextPage field value if set, zero value otherwise.
func (o *KeysetPaginationResponse) GetNextPage() string {
	if o == nil || o.NextPage == nil {
		var ret string
		return ret
	}
	return *o.NextPage
}

// SetNextPage gets a reference to the given string and assigns it to the NextPage field.
func (o *KeysetPaginationResponse) SetNextPage(v string) {
	o.NextPage = &v
}

// GetPreviousPage returns the PreviousPage field value if set, zero value otherwise.
func (o *KeysetPaginationResponse) GetPreviousPage() string {
	if o == nil || o.PreviousPage == nil {
		var ret string
		return ret
	}
	return *o.PreviousPage
}

// SetPreviousPage gets a reference to the given string and assigns it to the PreviousPage field.
func (o *KeysetPaginationResponse) SetPreviousPage(v string) {
	o.PreviousPage = &v
}

func (o KeysetPaginationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NextPage != nil {
		toSerialize["next_page"] = o.NextPage
	}
	if o.PreviousPage != nil {
		toSerialize["previous_page"] = o.PreviousPage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *KeysetPaginationResponse) UnmarshalJSON(bytes []byte) (err error) {
	varKeysetPaginationResponse := keysetPaginationResponse{}

	if err = json.Unmarshal(bytes, &varKeysetPaginationResponse); err == nil {
		*o = KeysetPaginationResponse(varKeysetPaginationResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "next_page")
		delete(additionalProperties, "previous_page")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
