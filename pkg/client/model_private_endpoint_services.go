// Copyright 2022 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-09-20

package client

import (
	"encoding/json"
)

// PrivateEndpointServices struct for PrivateEndpointServices.
type PrivateEndpointServices struct {
	// Services contains a list of all cluster related services.
	Services             []PrivateEndpointService `json:"services"`
	AdditionalProperties map[string]interface{}
}

type privateEndpointServices PrivateEndpointServices

// NewPrivateEndpointServices instantiates a new PrivateEndpointServices object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateEndpointServices(services []PrivateEndpointService) *PrivateEndpointServices {
	p := PrivateEndpointServices{}
	p.Services = services
	return &p
}

// NewPrivateEndpointServicesWithDefaults instantiates a new PrivateEndpointServices object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateEndpointServicesWithDefaults() *PrivateEndpointServices {
	p := PrivateEndpointServices{}
	return &p
}

// GetServices returns the Services field value.
func (o *PrivateEndpointServices) GetServices() []PrivateEndpointService {
	if o == nil {
		var ret []PrivateEndpointService
		return ret
	}

	return o.Services
}

// SetServices sets field value.
func (o *PrivateEndpointServices) SetServices(v []PrivateEndpointService) {
	o.Services = v
}

func (o PrivateEndpointServices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["services"] = o.Services
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PrivateEndpointServices) UnmarshalJSON(bytes []byte) (err error) {
	varPrivateEndpointServices := privateEndpointServices{}

	if err = json.Unmarshal(bytes, &varPrivateEndpointServices); err == nil {
		*o = PrivateEndpointServices(varPrivateEndpointServices)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "services")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
