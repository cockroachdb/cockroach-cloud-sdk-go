// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-07-12T00:00:00.000Z

package client

import (
	"encoding/json"
)

// InvoiceItem struct for InvoiceItem.
type InvoiceItem struct {
	Cluster Cluster `json:"cluster"`
	// Totals is a list of the total amounts of line items per currency.
	Totals []CurrencyAmount `json:"totals"`
	// LineItems contain all the relevant line items from the Metronome invoice.
	LineItems            []LineItem `json:"line_items"`
	AdditionalProperties map[string]interface{}
}

type invoiceItem InvoiceItem

// NewInvoiceItem instantiates a new InvoiceItem object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceItem(cluster Cluster, totals []CurrencyAmount, lineItems []LineItem) *InvoiceItem {
	p := InvoiceItem{}
	p.Cluster = cluster
	p.Totals = totals
	p.LineItems = lineItems
	return &p
}

// NewInvoiceItemWithDefaults instantiates a new InvoiceItem object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceItemWithDefaults() *InvoiceItem {
	p := InvoiceItem{}
	return &p
}

// GetCluster returns the Cluster field value.
func (o *InvoiceItem) GetCluster() Cluster {
	if o == nil {
		var ret Cluster
		return ret
	}

	return o.Cluster
}

// SetCluster sets field value.
func (o *InvoiceItem) SetCluster(v Cluster) {
	o.Cluster = v
}

// GetTotals returns the Totals field value.
func (o *InvoiceItem) GetTotals() []CurrencyAmount {
	if o == nil {
		var ret []CurrencyAmount
		return ret
	}

	return o.Totals
}

// SetTotals sets field value.
func (o *InvoiceItem) SetTotals(v []CurrencyAmount) {
	o.Totals = v
}

// GetLineItems returns the LineItems field value.
func (o *InvoiceItem) GetLineItems() []LineItem {
	if o == nil {
		var ret []LineItem
		return ret
	}

	return o.LineItems
}

// SetLineItems sets field value.
func (o *InvoiceItem) SetLineItems(v []LineItem) {
	o.LineItems = v
}

func (o InvoiceItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cluster"] = o.Cluster
	}
	if true {
		toSerialize["totals"] = o.Totals
	}
	if true {
		toSerialize["line_items"] = o.LineItems
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *InvoiceItem) UnmarshalJSON(bytes []byte) (err error) {
	varInvoiceItem := invoiceItem{}

	if err = json.Unmarshal(bytes, &varInvoiceItem); err == nil {
		*o = InvoiceItem(varInvoiceItem)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "totals")
		delete(additionalProperties, "line_items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
