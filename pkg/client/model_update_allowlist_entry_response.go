// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-03-31

package client

import (
	"encoding/json"
)

// UpdateAllowlistEntryResponse struct for UpdateAllowlistEntryResponse.
type UpdateAllowlistEntryResponse struct {
	Entry                AllowlistEntry `json:"entry"`
	AdditionalProperties map[string]interface{}
}

type updateAllowlistEntryResponse UpdateAllowlistEntryResponse

// NewUpdateAllowlistEntryResponse instantiates a new UpdateAllowlistEntryResponse object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAllowlistEntryResponse(entry AllowlistEntry) *UpdateAllowlistEntryResponse {
	p := UpdateAllowlistEntryResponse{}
	p.Entry = entry
	return &p
}

// NewUpdateAllowlistEntryResponseWithDefaults instantiates a new UpdateAllowlistEntryResponse object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAllowlistEntryResponseWithDefaults() *UpdateAllowlistEntryResponse {
	p := UpdateAllowlistEntryResponse{}
	return &p
}

// GetEntry returns the Entry field value.
func (o *UpdateAllowlistEntryResponse) GetEntry() AllowlistEntry {
	if o == nil {
		var ret AllowlistEntry
		return ret
	}

	return o.Entry
}

// SetEntry sets field value.
func (o *UpdateAllowlistEntryResponse) SetEntry(v AllowlistEntry) {
	o.Entry = v
}

func (o UpdateAllowlistEntryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entry"] = o.Entry
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UpdateAllowlistEntryResponse) UnmarshalJSON(bytes []byte) (err error) {
	varUpdateAllowlistEntryResponse := updateAllowlistEntryResponse{}

	if err = json.Unmarshal(bytes, &varUpdateAllowlistEntryResponse); err == nil {
		*o = UpdateAllowlistEntryResponse(varUpdateAllowlistEntryResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "entry")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
