// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-07-12T00:00:00.000Z

package client

import (
	"encoding/json"
)

// ListInvoicesResponse struct for ListInvoicesResponse.
type ListInvoicesResponse struct {
	// Invoices are sorted by PeriodStart time.
	Invoices             []Invoice `json:"invoices"`
	AdditionalProperties map[string]interface{}
}

type listInvoicesResponse ListInvoicesResponse

// NewListInvoicesResponse instantiates a new ListInvoicesResponse object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInvoicesResponse(invoices []Invoice) *ListInvoicesResponse {
	p := ListInvoicesResponse{}
	p.Invoices = invoices
	return &p
}

// NewListInvoicesResponseWithDefaults instantiates a new ListInvoicesResponse object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInvoicesResponseWithDefaults() *ListInvoicesResponse {
	p := ListInvoicesResponse{}
	return &p
}

// GetInvoices returns the Invoices field value.
func (o *ListInvoicesResponse) GetInvoices() []Invoice {
	if o == nil {
		var ret []Invoice
		return ret
	}

	return o.Invoices
}

// SetInvoices sets field value.
func (o *ListInvoicesResponse) SetInvoices(v []Invoice) {
	o.Invoices = v
}

func (o ListInvoicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["invoices"] = o.Invoices
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ListInvoicesResponse) UnmarshalJSON(bytes []byte) (err error) {
	varListInvoicesResponse := listInvoicesResponse{}

	if err = json.Unmarshal(bytes, &varListInvoicesResponse); err == nil {
		*o = ListInvoicesResponse(varListInvoicesResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "invoices")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
