// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-07-12T00:00:00.000Z

package client

import (
	"encoding/json"
)

// EnableLogExportRequest struct for EnableLogExportRequest.
type EnableLogExportRequest struct {
	ClusterSpec          *LogExportClusterSpecification `json:"cluster_spec,omitempty"`
	AdditionalProperties map[string]interface{}
}

type enableLogExportRequest EnableLogExportRequest

// NewEnableLogExportRequest instantiates a new EnableLogExportRequest object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableLogExportRequest() *EnableLogExportRequest {
	p := EnableLogExportRequest{}
	return &p
}

// GetClusterSpec returns the ClusterSpec field value if set, zero value otherwise.
func (o *EnableLogExportRequest) GetClusterSpec() LogExportClusterSpecification {
	if o == nil || o.ClusterSpec == nil {
		var ret LogExportClusterSpecification
		return ret
	}
	return *o.ClusterSpec
}

// SetClusterSpec gets a reference to the given LogExportClusterSpecification and assigns it to the ClusterSpec field.
func (o *EnableLogExportRequest) SetClusterSpec(v LogExportClusterSpecification) {
	o.ClusterSpec = &v
}

func (o EnableLogExportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterSpec != nil {
		toSerialize["cluster_spec"] = o.ClusterSpec
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *EnableLogExportRequest) UnmarshalJSON(bytes []byte) (err error) {
	varEnableLogExportRequest := enableLogExportRequest{}

	if err = json.Unmarshal(bytes, &varEnableLogExportRequest); err == nil {
		*o = EnableLogExportRequest(varEnableLogExportRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "cluster_spec")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
