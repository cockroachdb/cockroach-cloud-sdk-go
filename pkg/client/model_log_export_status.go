// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-07-12T00:00:00.000Z

package client

import (
	"encoding/json"
	"fmt"
)

// LogExportStatus LogExportStatus encodes the possible states that a configuration can be in as it is created, deployed, and disabled.
type LogExportStatus string

// List of LogExportStatus.
const (
	LOGEXPORTSTATUS_DISABLED       LogExportStatus = "DISABLED"
	LOGEXPORTSTATUS_DISABLING      LogExportStatus = "DISABLING"
	LOGEXPORTSTATUS_DISABLE_FAILED LogExportStatus = "DISABLE_FAILED"
	LOGEXPORTSTATUS_ENABLED        LogExportStatus = "ENABLED"
	LOGEXPORTSTATUS_ENABLING       LogExportStatus = "ENABLING"
	LOGEXPORTSTATUS_ENABLE_FAILED  LogExportStatus = "ENABLE_FAILED"
)

// All allowed values of LogExportStatus enum.
var AllowedLogExportStatusEnumValues = []LogExportStatus{
	"DISABLED",
	"DISABLING",
	"DISABLE_FAILED",
	"ENABLED",
	"ENABLING",
	"ENABLE_FAILED",
}

func (v *LogExportStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LogExportStatus(value)
	for _, existing := range AllowedLogExportStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LogExportStatus", value)
}

// NewLogExportStatusFromValue returns a pointer to a valid LogExportStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewLogExportStatusFromValue(v string) (*LogExportStatus, error) {
	ev := LogExportStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for LogExportStatus: valid values are %v", v, AllowedLogExportStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v LogExportStatus) IsValid() bool {
	for _, existing := range AllowedLogExportStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LogExportStatus value.
func (v LogExportStatus) Ptr() *LogExportStatus {
	return &v
}
