// Copyright 2022 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-09-20

package client

import (
	"encoding/json"
)

// MetricExportInfo struct for MetricExportInfo.
type MetricExportInfo struct {
	ClusterId   *string                        `json:"cluster_id,omitempty"`
	Integration *[]MetricExportIntegrationInfo `json:"integration,omitempty"`
}

// NewMetricExportInfo instantiates a new MetricExportInfo object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricExportInfo() *MetricExportInfo {
	p := MetricExportInfo{}
	return &p
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *MetricExportInfo) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *MetricExportInfo) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetIntegration returns the Integration field value if set, zero value otherwise.
func (o *MetricExportInfo) GetIntegration() []MetricExportIntegrationInfo {
	if o == nil || o.Integration == nil {
		var ret []MetricExportIntegrationInfo
		return ret
	}
	return *o.Integration
}

// SetIntegration gets a reference to the given []MetricExportIntegrationInfo and assigns it to the Integration field.
func (o *MetricExportInfo) SetIntegration(v []MetricExportIntegrationInfo) {
	o.Integration = &v
}

func (o MetricExportInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.Integration != nil {
		toSerialize["integration"] = o.Integration
	}
	return json.Marshal(toSerialize)
}
