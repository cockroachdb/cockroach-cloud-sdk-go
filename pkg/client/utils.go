// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2023-04-10

package client

import (
	"encoding/json"
)

// Optional can be passed as an argument to any optional Update*
// method argument to force the JSON marshaler to include
// the field as "null", selectively overriding the "omitempty" tag.
type Optional[T any] struct {
	inner       *T
	marshalNull bool
}

func (t Optional[T]) MarshalJSON() ([]byte, error) {
	if t.marshalNull && t.inner == (*T)(nil) {
		return []byte("null"), nil
	}
	return json.Marshal(t.inner)
}

func (t Optional[T]) UnmarshalJSON(in []byte) error {
	return json.Unmarshal(in, t.inner)
}

func (t Optional[T]) GetValue() T {
	if t.inner == nil {
		var n T
		return n
	}
	return *(t.inner)
}
