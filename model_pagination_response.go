/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PaginationResponse struct for PaginationResponse
type PaginationResponse struct {
	Next *int32 `json:"next,omitempty"`
	Last *int32 `json:"last,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	TotalResults *int32 `json:"total_results,omitempty"`
	Time *time.Time `json:"time,omitempty"`
	Order *SortOrder `json:"order,omitempty"`
}

// NewPaginationResponse instantiates a new PaginationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationResponse() *PaginationResponse {
	this := PaginationResponse{}
	var order SortOrder = ASC
	this.Order = &order
	return &this
}

// NewPaginationResponseWithDefaults instantiates a new PaginationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationResponseWithDefaults() *PaginationResponse {
	this := PaginationResponse{}
	var order SortOrder = ASC
	this.Order = &order
	return &this
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PaginationResponse) GetNext() int32 {
	if o == nil || o.Next == nil {
		var ret int32
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetNextOk() (*int32, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PaginationResponse) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given int32 and assigns it to the Next field.
func (o *PaginationResponse) SetNext(v int32) {
	o.Next = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *PaginationResponse) GetLast() int32 {
	if o == nil || o.Last == nil {
		var ret int32
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetLastOk() (*int32, bool) {
	if o == nil || o.Last == nil {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *PaginationResponse) HasLast() bool {
	if o != nil && o.Last != nil {
		return true
	}

	return false
}

// SetLast gets a reference to the given int32 and assigns it to the Last field.
func (o *PaginationResponse) SetLast(v int32) {
	o.Last = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *PaginationResponse) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *PaginationResponse) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *PaginationResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *PaginationResponse) GetTotalResults() int32 {
	if o == nil || o.TotalResults == nil {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetTotalResultsOk() (*int32, bool) {
	if o == nil || o.TotalResults == nil {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *PaginationResponse) HasTotalResults() bool {
	if o != nil && o.TotalResults != nil {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *PaginationResponse) SetTotalResults(v int32) {
	o.TotalResults = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *PaginationResponse) GetTime() time.Time {
	if o == nil || o.Time == nil {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetTimeOk() (*time.Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *PaginationResponse) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *PaginationResponse) SetTime(v time.Time) {
	o.Time = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *PaginationResponse) GetOrder() SortOrder {
	if o == nil || o.Order == nil {
		var ret SortOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetOrderOk() (*SortOrder, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *PaginationResponse) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given SortOrder and assigns it to the Order field.
func (o *PaginationResponse) SetOrder(v SortOrder) {
	o.Order = &v
}

func (o PaginationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if o.Last != nil {
		toSerialize["last"] = o.Last
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.TotalResults != nil {
		toSerialize["total_results"] = o.TotalResults
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}

type NullablePaginationResponse struct {
	value *PaginationResponse
	isSet bool
}

func (v NullablePaginationResponse) Get() *PaginationResponse {
	return v.value
}

func (v *NullablePaginationResponse) Set(val *PaginationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationResponse(val *PaginationResponse) *NullablePaginationResponse {
	return &NullablePaginationResponse{value: val, isSet: true}
}

func (v NullablePaginationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


