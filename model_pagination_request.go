/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PaginationRequest struct for PaginationRequest
type PaginationRequest struct {
	Start *int32 `json:"start,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	// Optional timestamp of the original request, for consistency. In a future release, the server will use it in an `AS OF SYSTEM TIME` clause. Currently non-functional.
	Time *time.Time `json:"time,omitempty"`
	Order *SortOrder `json:"order,omitempty"`
}

// NewPaginationRequest instantiates a new PaginationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationRequest() *PaginationRequest {
	this := PaginationRequest{}
	var order SortOrder = ASC
	this.Order = &order
	return &this
}

// NewPaginationRequestWithDefaults instantiates a new PaginationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationRequestWithDefaults() *PaginationRequest {
	this := PaginationRequest{}
	var order SortOrder = ASC
	this.Order = &order
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *PaginationRequest) GetStart() int32 {
	if o == nil || o.Start == nil {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationRequest) GetStartOk() (*int32, bool) {
	if o == nil || o.Start == nil {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *PaginationRequest) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *PaginationRequest) SetStart(v int32) {
	o.Start = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *PaginationRequest) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationRequest) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *PaginationRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *PaginationRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *PaginationRequest) GetTime() time.Time {
	if o == nil || o.Time == nil {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationRequest) GetTimeOk() (*time.Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *PaginationRequest) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *PaginationRequest) SetTime(v time.Time) {
	o.Time = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *PaginationRequest) GetOrder() SortOrder {
	if o == nil || o.Order == nil {
		var ret SortOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationRequest) GetOrderOk() (*SortOrder, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *PaginationRequest) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given SortOrder and assigns it to the Order field.
func (o *PaginationRequest) SetOrder(v SortOrder) {
	o.Order = &v
}

func (o PaginationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Start != nil {
		toSerialize["start"] = o.Start
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}

type NullablePaginationRequest struct {
	value *PaginationRequest
	isSet bool
}

func (v NullablePaginationRequest) Get() *PaginationRequest {
	return v.value
}

func (v *NullablePaginationRequest) Set(val *PaginationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationRequest(val *PaginationRequest) *NullablePaginationRequest {
	return &NullablePaginationRequest{value: val, isSet: true}
}

func (v NullablePaginationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


