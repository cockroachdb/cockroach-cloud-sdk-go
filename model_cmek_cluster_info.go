/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CMEKClusterInfo CMEKClusterInfo contains the status of CMEK across an entire cluster, including within each one its regions.
type CMEKClusterInfo struct {
	Status *CMEKStatus `json:"status,omitempty"`
	RegionInfos []CMEKRegionInfo `json:"region_infos,omitempty"`
}

// NewCMEKClusterInfo instantiates a new CMEKClusterInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCMEKClusterInfo() *CMEKClusterInfo {
	this := CMEKClusterInfo{}
	var status CMEKStatus = UNKNOWN_STATUS
	this.Status = &status
	return &this
}

// NewCMEKClusterInfoWithDefaults instantiates a new CMEKClusterInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCMEKClusterInfoWithDefaults() *CMEKClusterInfo {
	this := CMEKClusterInfo{}
	var status CMEKStatus = UNKNOWN_STATUS
	this.Status = &status
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CMEKClusterInfo) GetStatus() CMEKStatus {
	if o == nil || o.Status == nil {
		var ret CMEKStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CMEKClusterInfo) GetStatusOk() (*CMEKStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CMEKClusterInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CMEKStatus and assigns it to the Status field.
func (o *CMEKClusterInfo) SetStatus(v CMEKStatus) {
	o.Status = &v
}

// GetRegionInfos returns the RegionInfos field value if set, zero value otherwise.
func (o *CMEKClusterInfo) GetRegionInfos() []CMEKRegionInfo {
	if o == nil || o.RegionInfos == nil {
		var ret []CMEKRegionInfo
		return ret
	}
	return o.RegionInfos
}

// GetRegionInfosOk returns a tuple with the RegionInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CMEKClusterInfo) GetRegionInfosOk() ([]CMEKRegionInfo, bool) {
	if o == nil || o.RegionInfos == nil {
		return nil, false
	}
	return o.RegionInfos, true
}

// HasRegionInfos returns a boolean if a field has been set.
func (o *CMEKClusterInfo) HasRegionInfos() bool {
	if o != nil && o.RegionInfos != nil {
		return true
	}

	return false
}

// SetRegionInfos gets a reference to the given []CMEKRegionInfo and assigns it to the RegionInfos field.
func (o *CMEKClusterInfo) SetRegionInfos(v []CMEKRegionInfo) {
	o.RegionInfos = v
}

func (o CMEKClusterInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.RegionInfos != nil {
		toSerialize["region_infos"] = o.RegionInfos
	}
	return json.Marshal(toSerialize)
}

type NullableCMEKClusterInfo struct {
	value *CMEKClusterInfo
	isSet bool
}

func (v NullableCMEKClusterInfo) Get() *CMEKClusterInfo {
	return v.value
}

func (v *NullableCMEKClusterInfo) Set(val *CMEKClusterInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCMEKClusterInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCMEKClusterInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCMEKClusterInfo(val *CMEKClusterInfo) *NullableCMEKClusterInfo {
	return &NullableCMEKClusterInfo{value: val, isSet: true}
}

func (v NullableCMEKClusterInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCMEKClusterInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


