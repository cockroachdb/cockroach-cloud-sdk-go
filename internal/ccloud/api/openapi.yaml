openapi: 3.0.1
info:
  contact:
    email: support@cockroachlabs.com
    name: Cockroach Labs Support
    url: https://support.cockroachlabs.com
  description: This is an early access, experimental version of the Cloud API. The
    interface and output is subject to change, and there may be bugs.
  title: CockroachDB Cloud API
  version: 2022-07-12T00:00:00.000Z
externalDocs:
  description: Use the CockroachDB Cloud API
  url: https://www.cockroachlabs.com/docs/cockroachcloud/cloud-api.html
servers:
- url: https://cockroachlabs.cloud/
security:
- Bearer: []
tags:
- name: CockroachCloud
paths:
  /api/v1/clusters:
    get:
      description: 'Sort order: Cluster name'
      operationId: CockroachCloud_ListClusters
      parameters:
      - description: If `true`, show clusters that have been deleted or failed to
          initialize.
        explode: true
        in: query
        name: show_inactive
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: ' - DESC: Sort in descending order. The default order is ascending.'
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List clusters owned by an organization.
      tags:
      - CockroachCloud
    post:
      operationId: CockroachCloud_CreateCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create and initialize a new cluster.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
  /api/v1/clusters/available-regions:
    get:
      description: 'Sort order: Distance (based on client IP address)'
      operationId: CockroachCloud_ListAvailableRegions
      parameters:
      - description: |-
          Optional CloudProvider for filtering.

           - GCP: The Google Cloud Platform cloud provider.
           - AWS: The Amazon Web Services cloud provider.
        explode: true
        in: query
        name: provider
        required: false
        schema:
          enum:
          - GCP
          - AWS
          type: string
        style: form
      - description: Optional filter to only show regions available for serverless
          clusters.
        explode: true
        in: query
        name: serverless
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: ' - DESC: Sort in descending order. The default order is ascending.'
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAvailableRegionsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List the regions available for new clusters and nodes.
      tags:
      - CockroachCloud
  /api/v1/clusters/{cluster_id}:
    delete:
      operationId: CockroachCloud_DeleteCluster
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a cluster and all of its data.
      tags:
      - CockroachCloud
    get:
      operationId: CockroachCloud_GetCluster
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get extended information about a cluster.
      tags:
      - CockroachCloud
    patch:
      operationId: CockroachCloud_UpdateCluster
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: field_mask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Scale or edit a cluster.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
  /api/v1/clusters/{cluster_id}/cmek:
    get:
      operationId: CockroachCloud_GetCMEKClusterInfo
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMEKClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get CMEK-related information for a cluster.
      tags:
      - CockroachCloud
    patch:
      operationId: CockroachCloud_UpdateCMEKStatus
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateCMEKStatusRequest'
        content:
          application/json:
            schema:
              example:
                action: REVOKE
              properties:
                action:
                  $ref: '#/components/schemas/CMEKCustomerAction'
              required:
              - action
              title: UpdateCMEKStatusRequest
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMEKClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update the CMEK-related status for a cluster.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
    post:
      operationId: CockroachCloud_EnableCMEKSpec
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CMEKClusterSpecification_1'
        content:
          application/json:
            schema:
              example:
                region_specs:
                - region: us-central1
                  key_spec:
                    type: AWS_KMS
                    uri: arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key
                    auth_principal: arn:aws:iam::account:role/role-name-with-path
              properties:
                region_specs:
                  items:
                    $ref: '#/components/schemas/CMEKRegionSpecification'
                  type: array
              required:
              - region_specs
              title: CMEKClusterSpecification
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMEKClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Enable CMEK for a cluster.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
    put:
      operationId: CockroachCloud_UpdateCMEKSpec
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CMEKClusterSpecification'
        content:
          application/json:
            schema:
              example:
                region_specs:
                - region: us-central1
                  key_spec:
                    type: AWS_KMS
                    uri: arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key
                    auth_principal: arn:aws:iam::account:role/role-name-with-path
              properties:
                region_specs:
                  items:
                    $ref: '#/components/schemas/CMEKRegionSpecification'
                  type: array
              required:
              - region_specs
              title: CMEKClusterSpecification
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMEKClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Enable or update the CMEK spec for a cluster.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
  /api/v1/clusters/{cluster_id}/logexport:
    delete:
      operationId: CockroachCloud_DeleteLogExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExportClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - CockroachCloud
    get:
      operationId: CockroachCloud_GetLogExportInfo
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExportClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - CockroachCloud
    post:
      operationId: CockroachCloud_EnableLogExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EnableLogExportRequest'
        content:
          application/json:
            schema:
              example:
                cluster_spec:
                  log_name: log_name
                  auth_principal: auth_principal
              properties:
                cluster_spec:
                  $ref: '#/components/schemas/LogExportClusterSpecification'
              title: EnableLogExportRequest
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExportClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
  /api/v1/clusters/{cluster_id}/networking/allowlist:
    get:
      description: 'Sort order: CIDR address'
      operationId: CockroachCloud_ListAllowlistEntries
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: ' - DESC: Sort in descending order. The default order is ascending.'
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllowlistEntriesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the IP allowlist and propagation status for a cluster.
      tags:
      - CockroachCloud
    post:
      operationId: CockroachCloud_AddAllowlistEntry
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowlistEntry'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistEntry'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add a new CIDR address to the IP allowlist.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
  /api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask}:
    delete:
      operationId: CockroachCloud_DeleteAllowlistEntry
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cidr_ip
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cidr_mask
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistEntry'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete an IP allowlist entry.
      tags:
      - CockroachCloud
  /api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}:
    patch:
      operationId: CockroachCloud_UpdateAllowlistEntry
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: entry.cidr_ip
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: entry.cidr_mask
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: field_mask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowlistEntry'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistEntry'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update an IP allowlist entry.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
    put:
      operationId: CockroachCloud_AddAllowlistEntry2
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: entry.cidr_ip
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: entry.cidr_mask
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowlistEntry'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistEntry'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add a new CIDR address to the IP allowlist.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
  /api/v1/clusters/{cluster_id}/nodes:
    get:
      description: 'Sort order: Region name, node name'
      operationId: CockroachCloud_ListClusterNodes
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: Optional filter to limit response to a single region.
        explode: true
        in: query
        name: region_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: ' - DESC: Sort in descending order. The default order is ascending.'
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterNodesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List nodes for a cluster.
      tags:
      - CockroachCloud
  /api/v1/clusters/{cluster_id}/sql-users:
    get:
      description: 'Sort order: Username'
      operationId: CockroachCloud_ListSQLUsers
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: ' - DESC: Sort in descending order. The default order is ascending.'
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSQLUsersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List SQL users for a cluster.
      tags:
      - CockroachCloud
    post:
      operationId: CockroachCloud_CreateSQLUser
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateSQLUserRequest'
        content:
          application/json:
            schema:
              example:
                name: example_username
                password: example_password
              properties:
                name:
                  type: string
                password:
                  type: string
              required:
              - name
              - password
              title: CreateSQLUserRequest
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SQLUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a new SQL user.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
  /api/v1/clusters/{cluster_id}/sql-users/{name}:
    delete:
      operationId: CockroachCloud_DeleteSQLUser
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SQLUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a SQL user.
      tags:
      - CockroachCloud
  /api/v1/clusters/{cluster_id}/sql-users/{name}/password:
    put:
      operationId: CockroachCloud_UpdateSQLUserPassword
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateSQLUserPasswordRequest'
        content:
          application/json:
            schema:
              example:
                password: example_new_password
              properties:
                password:
                  type: string
              required:
              - password
              title: UpdateSQLUserPasswordRequest
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SQLUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a SQL user's password.
      tags:
      - CockroachCloud
      x-codegen-request-body-name: body
  /api/v1/invoices:
    get:
      description: 'Sort order: invoice start date ascending'
      operationId: CockroachCloud_ListInvoices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvoicesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: |-
        Billing
        List invoices for a given organization.
      tags:
      - CockroachCloud
  /api/v1/invoices/{invoice_id}:
    get:
      operationId: CockroachCloud_GetInvoice
      parameters:
      - description: |-
          InvoiceID is the unique ID representing the invoice.
          InvoiceID is used to retrieve a specific
          billing period's invoice.
        explode: false
        in: path
        name: invoice_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the resource does not exist.
        "5XX":
          content:
            application/json:
              schema:
                type: object
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Gets a specific invoice for an organization.
      tags:
      - CockroachCloud
components:
  requestBodies:
    CMEKClusterSpecification_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CMEKClusterSpecification_1'
      required: true
    CMEKClusterSpecification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CMEKClusterSpecification'
      required: true
    CreateSQLUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSQLUserRequest'
      required: true
    EnableLogExportRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnableLogExportRequest'
      required: true
    UpdateCMEKStatusRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCMEKStatusRequest'
      required: true
    UpdateSQLUserPasswordRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSQLUserPasswordRequest'
      required: true
  schemas:
    AllowlistEntry:
      example:
        cidr_ip: 192.168.1.1
        cidr_mask: 32
        ui: true
        sql: true
        name: Example
      properties:
        cidr_ip:
          type: string
        cidr_mask:
          format: int32
          type: integer
        ui:
          type: boolean
        sql:
          type: boolean
        name:
          type: string
      required:
      - cidr_ip
      - cidr_mask
      - sql
      - ui
      title: AllowlistEntry
      type: object
    Any:
      additionalProperties:
        type: object
      properties:
        '@type':
          type: string
      type: object
    CMEKClusterInfo:
      description: |-
        CMEKClusterInfo contains the status of CMEK across an entire cluster,
        including within each one its regions.
      example:
        region_infos:
        - region: region
          key_infos:
          - updated_at: 2000-01-23T04:56:07.000+00:00
            user_message: user_message
            created_at: 2000-01-23T04:56:07.000+00:00
            spec:
              auth_principal: auth_principal
              uri: uri
          - updated_at: 2000-01-23T04:56:07.000+00:00
            user_message: user_message
            created_at: 2000-01-23T04:56:07.000+00:00
            spec:
              auth_principal: auth_principal
              uri: uri
        - region: region
          key_infos:
          - updated_at: 2000-01-23T04:56:07.000+00:00
            user_message: user_message
            created_at: 2000-01-23T04:56:07.000+00:00
            spec:
              auth_principal: auth_principal
              uri: uri
          - updated_at: 2000-01-23T04:56:07.000+00:00
            user_message: user_message
            created_at: 2000-01-23T04:56:07.000+00:00
            spec:
              auth_principal: auth_principal
              uri: uri
      properties:
        status:
          $ref: '#/components/schemas/CMEKStatus'
        region_infos:
          items:
            $ref: '#/components/schemas/CMEKRegionInfo'
          type: array
      type: object
    CMEKCustomerAction:
      description: |-
        CMEKCustomerAction enumerates the actions a customer can take on a cluster
        that has been enabled for CMEK.
      enum:
      - REVOKE
      type: string
    CMEKKeyInfo:
      description: |-
        CMEKKeyInfo contains the status of a customer-provided key alongside the
        specification.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_message: user_message
        created_at: 2000-01-23T04:56:07.000+00:00
        spec:
          auth_principal: auth_principal
          uri: uri
      properties:
        status:
          $ref: '#/components/schemas/CMEKStatus'
        user_message:
          type: string
        spec:
          $ref: '#/components/schemas/CMEKKeySpecification'
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    CMEKKeySpecification:
      description: |-
        CMEKKeySpecification contains all the details necessary to use a customer-provided
        encryption key. This involves the type/location of the key and the principal
        to authenticate as when accessing it.
      example:
        auth_principal: auth_principal
        uri: uri
      properties:
        type:
          $ref: '#/components/schemas/CMEKKeyType'
        uri:
          type: string
        auth_principal:
          type: string
      type: object
    CMEKKeyType:
      description: |-
        CMEKKeyType enumerates types of customer-managed keys.

         - UNKNOWN_KEY_TYPE: UNKNOWN should never be used; if it is used, it indicates a bug.
      enum:
      - AWS_KMS
      - GCP_CLOUD_KMS
      type: string
    CMEKRegionInfo:
      description: |-
        CMEKRegionInfo contains the status of CMEK within a region. This includes
        current and past key specifications used within the region, as well as the
        status of those specifications.
      example:
        region: region
        key_infos:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          user_message: user_message
          created_at: 2000-01-23T04:56:07.000+00:00
          spec:
            auth_principal: auth_principal
            uri: uri
        - updated_at: 2000-01-23T04:56:07.000+00:00
          user_message: user_message
          created_at: 2000-01-23T04:56:07.000+00:00
          spec:
            auth_principal: auth_principal
            uri: uri
      properties:
        region:
          type: string
        status:
          $ref: '#/components/schemas/CMEKStatus'
        key_infos:
          items:
            $ref: '#/components/schemas/CMEKKeyInfo'
          type: array
      type: object
    CMEKRegionSpecification:
      description: |-
        CMEKRegionSpecification declares the customer-provided key specification that
        should be used in a given region.
      properties:
        region:
          type: string
        key_spec:
          $ref: '#/components/schemas/CMEKKeySpecification'
      type: object
    CMEKStatus:
      description: |-
        CMEKStatus describes the current status of CMEK for an entire CRDB cluster
        or a CMEK key within a region.

         - UNKNOWN_STATUS: UNKNOWN should never be used; if it is used, it indicates a bug.
         - DISABLED: DISABLED corresponds to the state of a cluster or region-level key when
        CMEK has finished being disabled. By default, CMEK will be disabled for
        new clusters.
         - DISABLING: DISABLING corresponds to the state of a cluster or region-level key when
        CMEK is in the process of being disabled.
         - DISABLE_FAILED: DISABLE_FAILED corresponds to the state of a cluster or region-level key
        when CMEK has failed to be disabled.
         - ENABLED: ENABLED corresponds to the state of a cluster or region-level key when
        CMEK is enabled.
         - ENABLING: ENABLING corresponds to the state of a cluster or region-level key when
        CMEK is in the process of being enabled.
         - ENABLE_FAILED: ENABLE_FAILED corresponds to the state of a cluster or region-level key
        when CMEK has failed to be enabled.
         - ROTATING: ROTATING corresponds to the state of a cluster or region when the a new
        spec is in the process of being enabled while an existing spec is being
        disabled.
         - ROTATE_FAILED: ROTATE_FAILED corresponds to the state of a cluster or region if there was
        a failure to update from one CMEK spec to another.
         - REVOKED: REVOKED corresponds to the state of a cluster or region-level key when the
        customer has revoked CockroachLab's permissions for their key.
         - REVOKING: REVOKING corresponds to the state of a cluster or region-level key when
        CMEK is in the process of being revoked.
         - REVOKE_FAILED: REVOKE_FAILED corresponds to the state of a cluster or region-level key
        when CMEK has failed to be revoked.
      enum:
      - DISABLED
      - DISABLING
      - DISABLE_FAILED
      - ENABLED
      - ENABLING
      - ENABLE_FAILED
      - ROTATING
      - ROTATE_FAILED
      - REVOKED
      - REVOKING
      - REVOKE_FAILED
      type: string
    CloudProviderRegion:
      example:
        distance: 0.8008282
        name: name
        serverless: true
        location: location
      properties:
        name:
          type: string
        location:
          type: string
        provider:
          $ref: '#/components/schemas/api.CloudProvider'
        serverless:
          type: boolean
        distance:
          format: float
          title: Distance in miles, based on client IP address
          type: number
      required:
      - distance
      - location
      - name
      - provider
      - serverless
      type: object
    Cluster:
      example:
        id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
        name: example-cluster
        cockroach_version: v21.2.4
        plan: SERVERLESS
        cloud_provider: GCP
        account_id: ""
        state: CREATED
        creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
        operation_status: CLUSTER_STATUS_UNSPECIFIED
        config:
          serverless:
            spend_limit: 0
            routing_id: example-cluster-1533
        regions:
        - name: us-central1
          sql_dns: free-tier7.gcp-us-central1.crdb.io
          ui_dns: ""
          node_count: 0
        created_at: 2022-03-22T20:23:11.285Z
        updated_at: 2022-03-22T20:23:11.879Z
      properties:
        id:
          type: string
        name:
          type: string
        cockroach_version:
          type: string
        plan:
          $ref: '#/components/schemas/Plan'
        cloud_provider:
          $ref: '#/components/schemas/api.CloudProvider'
        account_id:
          type: string
        state:
          $ref: '#/components/schemas/ClusterStateType'
        creator_id:
          type: string
        operation_status:
          $ref: '#/components/schemas/ClusterStatusType'
        config:
          $ref: '#/components/schemas/ClusterConfig'
        regions:
          items:
            $ref: '#/components/schemas/Region'
          type: array
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          type: string
      required:
      - cloud_provider
      - cockroach_version
      - config
      - creator_id
      - id
      - name
      - operation_status
      - plan
      - regions
      - state
      type: object
    ClusterConfig:
      properties:
        dedicated:
          $ref: '#/components/schemas/DedicatedHardwareConfig'
        serverless:
          $ref: '#/components/schemas/ServerlessClusterConfig'
      type: object
    ClusterStateType:
      description: |2-
         - LOCKED: An exclusive operation is being performed on this cluster.
        Other operations should not proceed if they did not set a cluster into the LOCKED state.
      enum:
      - CREATING
      - CREATED
      - CREATION_FAILED
      - DELETED
      - LOCKED
      type: string
    ClusterStatusType:
      enum:
      - CLUSTER_STATUS_UNSPECIFIED
      - CRDB_MAJOR_UPGRADE_RUNNING
      - CRDB_MAJOR_UPGRADE_FAILED
      - CRDB_MAJOR_ROLLBACK_RUNNING
      - CRDB_MAJOR_ROLLBACK_FAILED
      - CRDB_PATCH_RUNNING
      - CRDB_PATCH_FAILED
      - CRDB_SCALE_RUNNING
      - CRDB_SCALE_FAILED
      - MAINTENANCE_RUNNING
      - CRDB_INSTANCE_UPDATE_RUNNING
      - CRDB_INSTANCE_UPDATE_FAILED
      - CRDB_EDIT_CLUSTER_RUNNING
      - CRDB_EDIT_CLUSTER_FAILED
      - CRDB_CMEK_OPERATION_RUNNING
      - CRDB_CMEK_OPERATION_FAILED
      - TENANT_RESTORE_RUNNING
      - TENANT_RESTORE_FAILED
      type: string
    CreateClusterRequest:
      example:
        name: test-cluster
        provider: GCP
        spec:
          serverless:
            regions:
            - us-central1
            spend_limit: 0
      properties:
        name:
          description: |-
            Name must be 6-20 characters in length and can include numbers,
            lowercase letters, and dashes (but no leading or trailing dashes).
          type: string
        provider:
          $ref: '#/components/schemas/api.CloudProvider'
        spec:
          $ref: '#/components/schemas/CreateClusterSpecification'
      required:
      - name
      - provider
      - spec
      title: CreateClusterRequest
      type: object
    CreateClusterSpecification:
      properties:
        dedicated:
          $ref: '#/components/schemas/DedicatedClusterCreateSpecification'
        serverless:
          $ref: '#/components/schemas/ServerlessClusterCreateSpecification'
      type: object
    Currency:
      description: Currency is the set of currencies supported in CockroachCloud.
      enum:
      - USD
      - CRDB_CLOUD_CREDITS
      type: string
    CurrencyAmount:
      example:
        amount: 0.8008281904610115
      properties:
        amount:
          description: Amount is the quantity of currency.
          format: double
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
      type: object
    DedicatedClusterCreateSpecification:
      properties:
        region_nodes:
          additionalProperties:
            format: int32
            type: integer
          description: |-
            Region keys should match the cloud provider's zone code.
            For example, for Oregon, set region_name to "us-west2" for
            GCP and "us-west-2" for AWS. Values represent the node count.
          type: object
        hardware:
          $ref: '#/components/schemas/DedicatedHardwareCreateSpecification'
        cockroach_version:
          description: |-
            The CockroachDB version for the cluster. The current version
            is used if omitted.
          type: string
      required:
      - hardware
      - region_nodes
      type: object
    DedicatedClusterUpdateSpecification:
      properties:
        region_nodes:
          additionalProperties:
            format: int32
            type: integer
          description: |-
            Region keys should match the cloud provider's zone code.
            For example, for Oregon, set region_name to "us-west2" for
            GCP and "us-west-2" for AWS. Values represent the node count.
          type: object
        hardware:
          $ref: '#/components/schemas/DedicatedHardwareUpdateSpecification'
      type: object
    DedicatedHardwareConfig:
      properties:
        machine_type:
          description: |-
            MachineType is the machine type identifier within the given cloud
            provider, ex. m5.xlarge, n2-standard-4.
          type: string
        num_virtual_cpus:
          description: NumVirtualCPUs is the number of virtual CPUs per node in the
            cluster.
          format: int32
          type: integer
        storage_gib:
          description: StorageGiB is the number of storage GiB per node in the cluster.
          format: int32
          type: integer
        memory_gib:
          description: MemoryGiB is the memory GiB per node in the cluster.
          format: float
          type: number
        disk_iops:
          description: |-
            DiskIOPs is the number of disk I/O operations per second that are
            permitted on each node in the cluster. Zero indicates the cloud
            provider-specific default.
          format: int32
          type: integer
      required:
      - disk_iops
      - machine_type
      - memory_gib
      - num_virtual_cpus
      - storage_gib
      type: object
    DedicatedHardwareCreateSpecification:
      properties:
        machine_spec:
          $ref: '#/components/schemas/DedicatedMachineTypeSpecification'
        storage_gib:
          description: |-
            StorageGiB is the number of storage GiB per node in the cluster.
            Zero indicates default to the lowest storage GiB available given machine specs.
          format: int32
          type: integer
        disk_iops:
          description: |-
            DiskIOPs is the number of disk I/O operations per second that are
            permitted on each node in the cluster. Zero indicates the cloud
            provider-specific default. Only available for AWS clusters.
          format: int32
          type: integer
      required:
      - machine_spec
      - storage_gib
      type: object
    DedicatedHardwareUpdateSpecification:
      properties:
        machine_spec:
          $ref: '#/components/schemas/DedicatedMachineTypeSpecification'
        storage_gib:
          description: StorageGiB is the number of storage GiB per node in the cluster.
          format: int32
          type: integer
        disk_iops:
          description: |-
            DiskIOPs is the number of disk I/O operations per second that are
            permitted on each node in the cluster. Zero indicates the cloud
            provider-specific default. Only available for AWS clusters.
          format: int32
          type: integer
      type: object
    DedicatedMachineTypeSpecification:
      properties:
        machine_type:
          description: |-
            MachineType is the machine type identifier within the given cloud
            provider, ex. m5.xlarge, n2-standard-4.
          type: string
        num_virtual_cpus:
          description: |-
            NumVirtualCPUs may be used to automatically select a machine type
            according to the desired number of vCPUs.
          format: int32
          type: integer
      type: object
    Invoice:
      description: |-
        Invoice message represents the details and the total charges associated with
        one billing period, which starts at the beginning of the month and ends at
        the beginning of the next month. The message also includes details about each
        invoice item.
      example:
        period_end: 2000-01-23T04:56:07.000+00:00
        balances:
        - amount: 0.8008281904610115
        - amount: 0.8008281904610115
        invoice_items:
        - cluster:
            id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
            name: example-cluster
            cockroach_version: v21.2.4
            plan: SERVERLESS
            cloud_provider: GCP
            account_id: ""
            state: CREATED
            creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
            operation_status: CLUSTER_STATUS_UNSPECIFIED
            config:
              serverless:
                spend_limit: 0
                routing_id: example-cluster-1533
            regions:
            - name: us-central1
              sql_dns: free-tier7.gcp-us-central1.crdb.io
              ui_dns: ""
              node_count: 0
            created_at: 2022-03-22T20:23:11.285Z
            updated_at: 2022-03-22T20:23:11.879Z
          totals:
          - amount: 0.8008281904610115
          - amount: 0.8008281904610115
          line_items:
          - total:
              amount: 0.8008281904610115
            quantity: 6.027456183070403
            description: description
            unit_cost: 1.4658129805029452
          - total:
              amount: 0.8008281904610115
            quantity: 6.027456183070403
            description: description
            unit_cost: 1.4658129805029452
        - cluster:
            id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
            name: example-cluster
            cockroach_version: v21.2.4
            plan: SERVERLESS
            cloud_provider: GCP
            account_id: ""
            state: CREATED
            creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
            operation_status: CLUSTER_STATUS_UNSPECIFIED
            config:
              serverless:
                spend_limit: 0
                routing_id: example-cluster-1533
            regions:
            - name: us-central1
              sql_dns: free-tier7.gcp-us-central1.crdb.io
              ui_dns: ""
              node_count: 0
            created_at: 2022-03-22T20:23:11.285Z
            updated_at: 2022-03-22T20:23:11.879Z
          totals:
          - amount: 0.8008281904610115
          - amount: 0.8008281904610115
          line_items:
          - total:
              amount: 0.8008281904610115
            quantity: 6.027456183070403
            description: description
            unit_cost: 1.4658129805029452
          - total:
              amount: 0.8008281904610115
            quantity: 6.027456183070403
            description: description
            unit_cost: 1.4658129805029452
        period_start: 2000-01-23T04:56:07.000+00:00
        invoice_id: invoice_id
        totals:
        - amount: 0.8008281904610115
        - amount: 0.8008281904610115
      properties:
        invoice_id:
          description: InvoiceID is the unique ID representing the invoice.
          type: string
        totals:
          description: Totals is a list of the total amounts per currency.
          items:
            $ref: '#/components/schemas/CurrencyAmount'
          type: array
        period_start:
          description: PeriodStart is the start of the billing period (inclusive).
          format: date-time
          type: string
        period_end:
          description: PeriodEnd is the end of the billing period (exclusive).
          format: date-time
          type: string
        invoice_items:
          description: InvoiceItems are sorted by the cluster name.
          items:
            $ref: '#/components/schemas/InvoiceItem'
          type: array
        balances:
          description: Balances are the amounts of currency left at the time of the
            invoice.
          items:
            $ref: '#/components/schemas/CurrencyAmount'
          type: array
      required:
      - balances
      - invoice_id
      - invoice_items
      - period_end
      - period_start
      - totals
      type: object
    InvoiceItem:
      example:
        cluster:
          id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
          name: example-cluster
          cockroach_version: v21.2.4
          plan: SERVERLESS
          cloud_provider: GCP
          account_id: ""
          state: CREATED
          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
          operation_status: CLUSTER_STATUS_UNSPECIFIED
          config:
            serverless:
              spend_limit: 0
              routing_id: example-cluster-1533
          regions:
          - name: us-central1
            sql_dns: free-tier7.gcp-us-central1.crdb.io
            ui_dns: ""
            node_count: 0
          created_at: 2022-03-22T20:23:11.285Z
          updated_at: 2022-03-22T20:23:11.879Z
        totals:
        - amount: 0.8008281904610115
        - amount: 0.8008281904610115
        line_items:
        - total:
            amount: 0.8008281904610115
          quantity: 6.027456183070403
          description: description
          unit_cost: 1.4658129805029452
        - total:
            amount: 0.8008281904610115
          quantity: 6.027456183070403
          description: description
          unit_cost: 1.4658129805029452
      properties:
        cluster:
          $ref: '#/components/schemas/Cluster'
        totals:
          description: Totals is a list of the total amounts of line items per currency.
          items:
            $ref: '#/components/schemas/CurrencyAmount'
          type: array
        line_items:
          description: LineItems contain all the relevant line items from the Metronome
            invoice.
          items:
            $ref: '#/components/schemas/LineItem'
          type: array
      required:
      - cluster
      - line_items
      - totals
      type: object
    KeysetPaginationRequest:
      properties:
        page:
          type: string
        limit:
          format: int32
          type: integer
        as_of_time:
          format: date-time
          type: string
        sort_order:
          $ref: '#/components/schemas/SortOrder'
      type: object
    KeysetPaginationResponse:
      example:
        next_page: next_page
        previous_page: previous_page
      properties:
        next_page:
          type: string
        previous_page:
          type: string
      type: object
    LineItem:
      example:
        total:
          amount: 0.8008281904610115
        quantity: 6.027456183070403
        description: description
        unit_cost: 1.4658129805029452
      properties:
        description:
          description: Description contains the details of the line item (i.e t3 micro).
          type: string
        quantity:
          description: Quantity is the number of the specific line items used.
          format: double
          type: number
        unit_cost:
          description: UnitCost is the cost per unit of line item.
          format: double
          type: number
        total:
          $ref: '#/components/schemas/CurrencyAmount'
        quantity_unit:
          $ref: '#/components/schemas/QuantityUnitType'
      required:
      - description
      - quantity
      - quantity_unit
      - total
      - unit_cost
      type: object
    ListAllowlistEntriesResponse:
      example:
        allowlist:
        - cidr_ip: 192.168.1.1
          cidr_mask: 32
          ui: true
          sql: true
          name: Example
        - cidr_ip: 192.168.1.1
          cidr_mask: 32
          ui: true
          sql: true
          name: Example
        pagination:
          next_page: next_page
          previous_page: previous_page
        propagating: true
      properties:
        allowlist:
          items:
            $ref: '#/components/schemas/AllowlistEntry'
          type: array
        propagating:
          type: boolean
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - allowlist
      - propagating
      title: ListAllowlistEntriesResponse
      type: object
    ListAvailableRegionsResponse:
      example:
        regions:
        - distance: 0.8008282
          name: name
          serverless: true
          location: location
        - distance: 0.8008282
          name: name
          serverless: true
          location: location
        pagination:
          next_page: next_page
          previous_page: previous_page
      properties:
        regions:
          items:
            $ref: '#/components/schemas/CloudProviderRegion'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - regions
      type: object
    ListClusterNodesResponse:
      example:
        nodes:
        - name: name
          region_name: region_name
        - name: name
          region_name: region_name
        pagination:
          next_page: next_page
          previous_page: previous_page
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/Node'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - nodes
      type: object
    ListClustersResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        clusters:
        - id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
          name: example-cluster
          cockroach_version: v21.2.4
          plan: SERVERLESS
          cloud_provider: GCP
          account_id: ""
          state: CREATED
          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
          operation_status: CLUSTER_STATUS_UNSPECIFIED
          config:
            serverless:
              spend_limit: 0
              routing_id: example-cluster-1533
          regions:
          - name: us-central1
            sql_dns: free-tier7.gcp-us-central1.crdb.io
            ui_dns: ""
            node_count: 0
          created_at: 2022-03-22T20:23:11.285Z
          updated_at: 2022-03-22T20:23:11.879Z
        - id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
          name: example-cluster
          cockroach_version: v21.2.4
          plan: SERVERLESS
          cloud_provider: GCP
          account_id: ""
          state: CREATED
          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
          operation_status: CLUSTER_STATUS_UNSPECIFIED
          config:
            serverless:
              spend_limit: 0
              routing_id: example-cluster-1533
          regions:
          - name: us-central1
            sql_dns: free-tier7.gcp-us-central1.crdb.io
            ui_dns: ""
            node_count: 0
          created_at: 2022-03-22T20:23:11.285Z
          updated_at: 2022-03-22T20:23:11.879Z
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - clusters
      type: object
    ListInvoicesResponse:
      example:
        invoices:
        - period_end: 2000-01-23T04:56:07.000+00:00
          balances:
          - amount: 0.8008281904610115
          - amount: 0.8008281904610115
          invoice_items:
          - cluster:
              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
              name: example-cluster
              cockroach_version: v21.2.4
              plan: SERVERLESS
              cloud_provider: GCP
              account_id: ""
              state: CREATED
              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
              operation_status: CLUSTER_STATUS_UNSPECIFIED
              config:
                serverless:
                  spend_limit: 0
                  routing_id: example-cluster-1533
              regions:
              - name: us-central1
                sql_dns: free-tier7.gcp-us-central1.crdb.io
                ui_dns: ""
                node_count: 0
              created_at: 2022-03-22T20:23:11.285Z
              updated_at: 2022-03-22T20:23:11.879Z
            totals:
            - amount: 0.8008281904610115
            - amount: 0.8008281904610115
            line_items:
            - total:
                amount: 0.8008281904610115
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            - total:
                amount: 0.8008281904610115
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
          - cluster:
              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
              name: example-cluster
              cockroach_version: v21.2.4
              plan: SERVERLESS
              cloud_provider: GCP
              account_id: ""
              state: CREATED
              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
              operation_status: CLUSTER_STATUS_UNSPECIFIED
              config:
                serverless:
                  spend_limit: 0
                  routing_id: example-cluster-1533
              regions:
              - name: us-central1
                sql_dns: free-tier7.gcp-us-central1.crdb.io
                ui_dns: ""
                node_count: 0
              created_at: 2022-03-22T20:23:11.285Z
              updated_at: 2022-03-22T20:23:11.879Z
            totals:
            - amount: 0.8008281904610115
            - amount: 0.8008281904610115
            line_items:
            - total:
                amount: 0.8008281904610115
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            - total:
                amount: 0.8008281904610115
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
          period_start: 2000-01-23T04:56:07.000+00:00
          invoice_id: invoice_id
          totals:
          - amount: 0.8008281904610115
          - amount: 0.8008281904610115
        - period_end: 2000-01-23T04:56:07.000+00:00
          balances:
          - amount: 0.8008281904610115
          - amount: 0.8008281904610115
          invoice_items:
          - cluster:
              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
              name: example-cluster
              cockroach_version: v21.2.4
              plan: SERVERLESS
              cloud_provider: GCP
              account_id: ""
              state: CREATED
              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
              operation_status: CLUSTER_STATUS_UNSPECIFIED
              config:
                serverless:
                  spend_limit: 0
                  routing_id: example-cluster-1533
              regions:
              - name: us-central1
                sql_dns: free-tier7.gcp-us-central1.crdb.io
                ui_dns: ""
                node_count: 0
              created_at: 2022-03-22T20:23:11.285Z
              updated_at: 2022-03-22T20:23:11.879Z
            totals:
            - amount: 0.8008281904610115
            - amount: 0.8008281904610115
            line_items:
            - total:
                amount: 0.8008281904610115
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            - total:
                amount: 0.8008281904610115
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
          - cluster:
              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
              name: example-cluster
              cockroach_version: v21.2.4
              plan: SERVERLESS
              cloud_provider: GCP
              account_id: ""
              state: CREATED
              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
              operation_status: CLUSTER_STATUS_UNSPECIFIED
              config:
                serverless:
                  spend_limit: 0
                  routing_id: example-cluster-1533
              regions:
              - name: us-central1
                sql_dns: free-tier7.gcp-us-central1.crdb.io
                ui_dns: ""
                node_count: 0
              created_at: 2022-03-22T20:23:11.285Z
              updated_at: 2022-03-22T20:23:11.879Z
            totals:
            - amount: 0.8008281904610115
            - amount: 0.8008281904610115
            line_items:
            - total:
                amount: 0.8008281904610115
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            - total:
                amount: 0.8008281904610115
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
          period_start: 2000-01-23T04:56:07.000+00:00
          invoice_id: invoice_id
          totals:
          - amount: 0.8008281904610115
          - amount: 0.8008281904610115
      properties:
        invoices:
          description: Invoices are sorted by PeriodStart time.
          items:
            $ref: '#/components/schemas/Invoice'
          type: array
      required:
      - invoices
      type: object
    ListSQLUsersResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        users:
        - name: name
        - name: name
      properties:
        users:
          items:
            $ref: '#/components/schemas/SQLUser'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - users
      type: object
    LogExportClusterInfo:
      description: |-
        LogExportClusterInfo contains a package of information that fully
        describes both the intended state of the log export configuration for
        a specific cluster but also some metadata around its deployment
        status, any error messages, and some timestamps.
      example:
        cluster_id: cluster_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_message: user_message
        created_at: 2000-01-23T04:56:07.000+00:00
        spec:
          log_name: log_name
          auth_principal: auth_principal
      properties:
        cluster_id:
          type: string
        status:
          $ref: '#/components/schemas/LogExportStatus'
        user_message:
          type: string
        spec:
          $ref: '#/components/schemas/LogExportClusterSpecification'
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    LogExportClusterSpecification:
      description: |-
        LogExportClusterSpecification contains all the data necessary to
        configure log export for an individual cluster. Users would supply
        this data via the API and also receive it back when inspecting the
        state of their log export configuration.
      example:
        log_name: log_name
        auth_principal: auth_principal
      properties:
        type:
          $ref: '#/components/schemas/LogExportType'
        log_name:
          description: log_name is an identifier for the logs in the customer's log
            sink.
          type: string
        auth_principal:
          description: |-
            auth_principal is either the AWS Role ARN that identifies a role
            that the cluster account can assume to write to CloudWatch or the
            GCP Project ID that the cluster service account has permissions to
            write to for cloud logging.
          type: string
      type: object
    LogExportStatus:
      description: |-
        LogExportStatus encodes the possible states that a configuration can
        be in as it is created, deployed, and disabled.
      enum:
      - DISABLED
      - DISABLING
      - DISABLE_FAILED
      - ENABLED
      - ENABLING
      - ENABLE_FAILED
      type: string
    LogExportType:
      description: |-
        LogExportType encodes the cloud selection that we're exporting to
        along with the cloud logging platform. Currently, each cloud has a
        single logging platform.
      enum:
      - AWS_CLOUDWATCH
      - GCP_CLOUD_LOGGING
      type: string
    Node:
      example:
        name: name
        region_name: region_name
      properties:
        name:
          type: string
        region_name:
          type: string
        status:
          $ref: '#/components/schemas/NodeStatus'
      required:
      - name
      - region_name
      - status
      type: object
    NodeStatus:
      enum:
      - LIVE
      - NOT_READY
      type: string
    Plan:
      description: " - DEDICATED: A paid plan that offers dedicated hardware in any\
        \ location.\n - CUSTOM: A plan option that is used for clusters whose machine\
        \ configs are not \nsupported in self-service. All INVOICE clusters are under\
        \ this plan option.\n - SERVERLESS: A paid plan that runs on shared hardware\
        \ and caps the users'\nmaximum monthly spending to a user-specified (possibly\
        \ 0) amount."
      enum:
      - DEDICATED
      - CUSTOM
      - SERVERLESS
      type: string
    QuantityUnitType:
      description: |-
        Billing
        QuantityUnitType is the unit type for a quantity of billing line item.
      enum:
      - HOURS
      - REQUEST_UNITS
      type: string
    Region:
      properties:
        name:
          type: string
        sql_dns:
          type: string
        ui_dns:
          type: string
        node_count:
          description: NodeCount will be 0 for serverless clusters.
          format: int32
          type: integer
      required:
      - name
      - node_count
      - sql_dns
      - ui_dns
      type: object
    SQLUser:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    ServerlessClusterConfig:
      properties:
        spend_limit:
          description: Spend limit in US cents.
          format: int32
          type: integer
        routing_id:
          description: Used to build a connection string.
          type: string
      required:
      - routing_id
      - spend_limit
      type: object
    ServerlessClusterCreateSpecification:
      properties:
        regions:
          description: |-
            Region values should match the cloud provider's zone code.
            For example, for Oregon, set region_name to "us-west2" for
            GCP and "us-west-2" for AWS.
          items:
            type: string
          type: array
        spend_limit:
          format: int32
          title: Spend limit in US cents
          type: integer
      required:
      - regions
      - spend_limit
      type: object
    ServerlessClusterUpdateSpecification:
      properties:
        spend_limit:
          format: int32
          title: Spend limit in US cents
          type: integer
      required:
      - spend_limit
      type: object
    SortOrder:
      description: ' - DESC: Sort in descending order. The default order is ascending.'
      enum:
      - ASC
      - DESC
      type: string
    Status:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/Any'
          type: array
      type: object
    UpdateClusterSpecification:
      example:
        dedicated:
          region_nodes:
            us-west1: 3
            us-central1: 5
          hardware:
            machine_type: n2-standard-8
      properties:
        dedicated:
          $ref: '#/components/schemas/DedicatedClusterUpdateSpecification'
        serverless:
          $ref: '#/components/schemas/ServerlessClusterUpdateSpecification'
      type: object
    api.CloudProvider:
      description: |2-
         - GCP: The Google Cloud Platform cloud provider.
         - AWS: The Amazon Web Services cloud provider.
      enum:
      - GCP
      - AWS
      type: string
    CMEKClusterSpecification:
      example:
        region_specs:
        - region: us-central1
          key_spec:
            type: AWS_KMS
            uri: arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key
            auth_principal: arn:aws:iam::account:role/role-name-with-path
      properties:
        region_specs:
          items:
            $ref: '#/components/schemas/CMEKRegionSpecification'
          type: array
      required:
      - region_specs
      title: CMEKClusterSpecification
      type: object
    CMEKClusterSpecification_1:
      example:
        region_specs:
        - region: us-central1
          key_spec:
            type: AWS_KMS
            uri: arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key
            auth_principal: arn:aws:iam::account:role/role-name-with-path
      properties:
        region_specs:
          items:
            $ref: '#/components/schemas/CMEKRegionSpecification'
          type: array
      required:
      - region_specs
      title: CMEKClusterSpecification
      type: object
    UpdateCMEKStatusRequest:
      example:
        action: REVOKE
      properties:
        action:
          $ref: '#/components/schemas/CMEKCustomerAction'
      required:
      - action
      title: UpdateCMEKStatusRequest
      type: object
    EnableLogExportRequest:
      example:
        cluster_spec:
          log_name: log_name
          auth_principal: auth_principal
      properties:
        cluster_spec:
          $ref: '#/components/schemas/LogExportClusterSpecification'
      title: EnableLogExportRequest
      type: object
    CreateSQLUserRequest:
      example:
        name: example_username
        password: example_password
      properties:
        name:
          type: string
        password:
          type: string
      required:
      - name
      - password
      title: CreateSQLUserRequest
      type: object
    UpdateSQLUserPasswordRequest:
      example:
        password: example_new_password
      properties:
        password:
          type: string
      required:
      - password
      title: UpdateSQLUserPasswordRequest
      type: object
  securitySchemes:
    Bearer:
      in: header
      name: Authorization
      type: apiKey
