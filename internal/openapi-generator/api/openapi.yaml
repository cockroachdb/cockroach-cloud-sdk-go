openapi: 3.0.0
info:
  contact:
    email: support@cockroachlabs.com
    name: Cockroach Labs Support
    url: https://support.cockroachlabs.com
  description: An API for managing CockroachDB Cloud resources
  title: CockroachDB Cloud API
  version: 2024-09-16
externalDocs:
  description: Use the CockroachDB Cloud API
  url: https://www.cockroachlabs.com/docs/cockroachcloud/cloud-api.html
servers:
- url: https://cockroachlabs.cloud
security:
- Bearer: []
tags:
- name: SCIM
- name: Organizations
- name: Clusters
- name: Cluster Disruption
- name: SQL Users
- name: SQL Privilege Grants
- name: Databases
- name: Customer-managed Encryption Keys
- name: Client CA Certificates
- name: Cluster SSO
- name: Log Export
- name: Metric Export
- name: Audit Logs
- name: IP Allowlists
- name: Egress Rules
- name: Billing
- name: Maintenance Windows
- name: Role Management
- name: Service Accounts
- name: API Keys
- name: Folders
- name: Version Deferral
- name: JWT Issuers
- name: OpenID Connect Configuration
- name: Private Endpoint Services
- name: PCI
- name: Physical Cluster Replication
- name: Plan Migrations
- name: Backup/Restore
- name: Egress Private Endpoints
paths:
  /api/scim/v2/Groups:
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetGroups
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The maximum number of resources to return. If omitted, defaults to 20.
          If set to 0, the response will contain no resources but will include metadata such as
          `totalResults`, complying with [RFC 7644, Section 3.4.2.4: Pagination](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.4).
        explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: |-
          The 1-based index of the first resource to return in the response.
          If omitted or less than 1, defaults to 1. This behavior complies with [RFC 7644, Section 3.4.2.4: Pagination](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.4).
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List groups
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/scim/v2/Groups?attributes=SOME_STRING_VALUE&excludedAttributes=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&count=SOME_INTEGER_VALUE&startIndex=SOME_INTEGER_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_CreateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a group
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/scim/v2/Groups \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"displayName":"Test SCIM","members":[],"schemas":["urn:ietf:params:scim:schemas:core:2.0:Group"]}'
  /api/scim/v2/Groups/.search:
    post:
      description: |
        Similar to GetGroups however search parameters are passed via the POST body. See https://www.rfc-editor.org/rfc/rfc7644.html#section-3.4.3 for more details.

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_SearchGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search groups
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/scim/v2/Groups/.search \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"attributes":"string","count":20,"excludedAttributes":"string","filter":"string","startIndex":1}'
    put:
      deprecated: true
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetGroups2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search groups (Deprecated)
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/scim/v2/Groups/.search \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"attributes":"string","count":20,"excludedAttributes":"string","filter":"string","startIndex":1}'
  /api/scim/v2/Groups/{id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_DeleteGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a group based on ID
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/scim/v2/Groups/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a group by ID
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/scim/v2/Groups/{id}?attributes=SOME_STRING_VALUE&excludedAttributes=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Apply a sequence of operations to modify attributes of a SCIM Group resource. Supports 'add', 'remove', and 'replace' operations per RFC 7644 Section 3.5.2. Operations are applied atomically — if any operation fails, no changes are applied. The request body must include the 'schemas' field set to 'urn:ietf:params:scim:api:messages:2.0:PatchOp'.

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_PatchGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Patch a group by supplying partial updates
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/scim/v2/Groups/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"Operations":[{"op":"replace","path":"displayName","value":"Updated Group Name"},{"op":"replace","path":"externalId","value":"ext-123"},{"op":"remove","path":"members"},{"op":"add","path":"externalId","value":"new-external-id"},{"op":"add","path":"members","value":[{"value":"45a35c27-23d3-4d03-c4c5-9043c09e7175"}]}],"schemas":["urn:ietf:params:scim:api:messages:2.0:PatchOp"]}'
    put:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_UpdateGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a group by supplying all values of the user object
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/scim/v2/Groups/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"displayName":"Test SCIM","id":"23a35c27-23d3-4c03-b4c5-6443c09e7173","members":[{"display":"croach@example.com","value":"45a35c27-23d3-4d03-c4c5-9043c09e7175"}],"schemas":["urn:ietf:params:scim:schemas:core:2.0:Group"]}'
  /api/scim/v2/Groups/{id}/.search:
    post:
      description: |
        Similar to GetGroup however search parameters are passed via the POST body. See https://www.rfc-editor.org/rfc/rfc7644.html#section-3.4.3 for more details.

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_SearchGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search a group by ID
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/scim/v2/Groups/{id}/.search \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"attributes":"string","excludedAttributes":"string"}'
    put:
      deprecated: true
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetGroup2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search a group by ID (Deprecated)
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/scim/v2/Groups/{id}/.search \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"attributes":"string","excludedAttributes":"string"}'
  /api/scim/v2/ResourceTypes:
    get:
      description: This endpoint may be used by any member of the organization.
      operationId: CockroachCloud_GetResourceTypes
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceTypesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List the SCIM resource types
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/scim/v2/ResourceTypes?attributes=SOME_STRING_VALUE&excludedAttributes=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/scim/v2/ResourceTypes/{resourceId}:
    get:
      description: This endpoint may be used by any member of the organization.
      operationId: CockroachCloud_GetResourceType
      parameters:
      - explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimResourceType'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a SCIM resource type by ID
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/scim/v2/ResourceTypes/{resourceId}?attributes=SOME_STRING_VALUE&excludedAttributes=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/scim/v2/Schemas:
    get:
      description: This endpoint may be used by any member of the organization.
      operationId: CockroachCloud_GetSchemas
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemasResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List the SCIM schemas
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/scim/v2/Schemas?attributes=SOME_STRING_VALUE&excludedAttributes=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/scim/v2/Schemas/{schemaId}:
    get:
      description: This endpoint may be used by any member of the organization.
      operationId: CockroachCloud_GetSchema
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimSchema'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a SCIM schema by ID
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/scim/v2/Schemas/{schemaId}?attributes=SOME_STRING_VALUE&excludedAttributes=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/scim/v2/ServiceProviderConfig:
    get:
      description: This endpoint may be used by any member of the organization.
      operationId: CockroachCloud_GetServiceProviderConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceProviderConfigResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Return the SCIM Service Provider configuration
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/scim/v2/ServiceProviderConfig \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/scim/v2/Users:
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetUsers
      parameters:
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The maximum number of resources to return. If omitted, defaults to 20.
          If set to 0, the response will contain no resources but will include metadata such as
          `totalResults`, complying with [RFC 7644, Section 3.4.2.4: Pagination](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.4).
        explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: |-
          The 1-based index of the first resource to return in the response.
          If omitted or less than 1, defaults to 1. This behavior complies with [RFC 7644, Section 3.4.2.4: Pagination](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.4).
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Users
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/scim/v2/Users?filter=SOME_STRING_VALUE&attributes=SOME_STRING_VALUE&excludedAttributes=SOME_STRING_VALUE&count=SOME_INTEGER_VALUE&startIndex=SOME_INTEGER_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a user
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/scim/v2/Users \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"active":true,"displayName":"Carl Roach","emails":[{"primary":true,"type":"work","value":"croach@example.com"}],"externalId":"11ujl29u0le5T6Aj10h9","name":{"familyName":"Roach","givenName":"Carl"},"schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],"userName":"croach@example.com"}'
  /api/scim/v2/Users/.search:
    post:
      description: |
        Similar to GetUsers however search parameters are passed via the POST body. See https://www.rfc-editor.org/rfc/rfc7644.html#section-3.4.3 for more details.

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_SearchUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search Users
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/scim/v2/Users/.search \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"attributes":"string","count":20,"excludedAttributes":"string","filter":"string","startIndex":1}'
    put:
      deprecated: true
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetUsers2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search User (Deprecated)
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/scim/v2/Users/.search \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"attributes":"string","count":20,"excludedAttributes":"string","filter":"string","startIndex":1}'
  /api/scim/v2/Users/{id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_DeleteUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a user based on ID
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/scim/v2/Users/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a user by ID
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/scim/v2/Users/{id}?attributes=SOME_STRING_VALUE&excludedAttributes=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Apply a sequence of operations to modify attributes of a SCIM User resource. Supports 'add', 'remove', and 'replace' operations per RFC 7644 Section 3.5.2. Operations are applied atomically — if any operation fails, no changes are applied. The request body must include the 'schemas' field set to 'urn:ietf:params:scim:api:messages:2.0:PatchOp'.

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_PatchUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Patch a user by supplying partial updates
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/scim/v2/Users/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"Operations":[{"op":"replace","path":"userName","value":"newUserName"},{"op":"replace","value":{"displayName":"New Name","emails":[{"primary":true,"value":"new@example.com"}]}},{"op":"remove","path":"externalId"}],"schemas":["urn:ietf:params:scim:api:messages:2.0:PatchOp"]}'
    put:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_UpdateUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a user by supplying all values of the user object
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/scim/v2/Users/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"active":true,"emails":[{"display":"croach@example.com","primary":true,"type":"work","value":"croach@example.com"}],"name":{"familyName":"Roach","givenName":"Carl"},"schemas":["urn:ietf:params:scim:schemas:core:2.0:User"]}'
  /api/scim/v2/Users/{id}/.search:
    post:
      description: |
        Similar to GetUser however search parameters are passed via the POST body. See https://www.rfc-editor.org/rfc/rfc7644.html#section-3.4.3 for more details.

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_SearchUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search for a user by ID
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/scim/v2/Users/{id}/.search \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"attributes":"string","excludedAttributes":"string"}'
    put:
      deprecated: true
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetUser2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search for a user by ID (Deprecated)
      tags:
      - SCIM
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/scim/v2/Users/{id}/.search \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"attributes":"string","excludedAttributes":"string"}'
  /api/v1/api-keys:
    get:
      description: |
        Sort order: created_at

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
      operationId: CockroachCloud_ListApiKeys
      parameters:
      - description: |-
          Optional filter to limit the response to include only api keys for a specific
          service account.
        explode: true
        in: query
        name: service_account_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiKeysResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List API Keys
      tags:
      - API Keys
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/api-keys?service_account_id=SOME_STRING_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_CreateApiKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApiKeyResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a new API Key
      tags:
      - API Keys
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/api-keys \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"example name","service_account_id":"1234abcd-1234-1234-abcd-12345678abcd"}'
  /api/v1/api-keys/{id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_DeleteApiKey
      parameters:
      - description: The ID of the api key.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete an API Key
      tags:
      - API Keys
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/api-keys/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
      operationId: CockroachCloud_GetApiKey
      parameters:
      - description: the ID of the api key.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get an API Key by ID
      tags:
      - API Keys
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/api-keys/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_UpdateApiKey
      parameters:
      - description: The ID of the api key.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeySpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update an API Key
      tags:
      - API Keys
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/api-keys/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"new name"}'
  /api/v1/auditlogevents:
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_ListAuditLogs
      parameters:
      - description: |-
          starting_from is the (exclusive) timestamp from which log entries will be
          returned in the response based on their created_at time, respecting the
          sort order specified in pagination. If unset, the default will be the
          current time if results are returned in descending order and the
          beginning of time if results are in ascending order.
        explode: true
        in: query
        name: starting_from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |-
          sort_order is the direction of pagination, with starting_from as the
          start point. If unset, the default is ascending order.

           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: |-
          limit is the number of entries requested in the response. Note that the
          response may still contain slightly more results, since the response will
          always contain every entry at a particular timestamp.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditLogsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List audit logs
      tags:
      - Audit Logs
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/auditlogevents?starting_from=SOME_STRING_VALUE&sort_order=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/cluster-versions:
    get:
      description: |-
        Sort order: Version number descending

        This endpoint may be used by any member of the organization.
      operationId: CockroachCloud_ListMajorClusterVersions
      parameters:
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMajorClusterVersionsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List available major cluster versions
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/cluster-versions?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters:
    get:
      description: |
        Sort order: Cluster name

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
        - FOLDER_ADMIN
        - FOLDER_MOVER
      operationId: CockroachCloud_ListClusters
      parameters:
      - description: |-
          If `true`, show clusters that have been deleted or failed to initialize.
          Note that inactive clusters will only be included if the requesting user
          has organization-scoped cluster read permissions.
        explode: true
        in: query
        name: show_inactive
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List clusters in the organization
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters?show_inactive=SOME_BOOLEAN_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization or folder scope:
        - CLUSTER_ADMIN
        - CLUSTER_CREATOR
      operationId: CockroachCloud_CreateCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create and initialize a new cluster
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"test-cluster","plan":"STANDARD","provider":"GCP","spec":{"serverless":{"regions":["us-central1"],"usage_limits":{"provisioned_virtual_cpus":"2"}}}}'
  /api/v1/clusters/available-regions:
    get:
      description: |-
        Sort order: Distance (based on client IP address)

        This endpoint may be used by any member of the organization.
      operationId: CockroachCloud_ListAvailableRegions
      parameters:
      - description: |-
          Optional CloudProvider for filtering.

           - GCP: The Google Cloud Platform cloud provider.
           - AWS: The Amazon Web Services cloud provider.
           - AZURE: The Azure cloud provider.
        explode: true
        in: query
        name: provider
        required: false
        schema:
          enum:
          - GCP
          - AWS
          - AZURE
          type: string
        style: form
      - description: Optional filter to only show regions available for serverless
          clusters.
        explode: true
        in: query
        name: serverless
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAvailableRegionsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List the regions available for new clusters and nodes
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/available-regions?provider=SOME_STRING_VALUE&serverless=SOME_BOOLEAN_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
      operationId: CockroachCloud_DeleteCluster
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a cluster and all of its data
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
        - FOLDER_ADMIN
        - FOLDER_MOVER
      operationId: CockroachCloud_GetCluster
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get extended information about a cluster
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        In addition to adding nodes and changing cluster fields, the PATCH Cluster endpoint can be used to upgrade the cluster version. A cluster can be upgraded when its `upgrade_status` field is equal to `UPGRADE_AVAILABLE`. The `/api/v1/cluster-versions` endpoint can be used to enumerate versions which are valid to upgrade to. To begin the upgrade, PATCH the desired version into `cockroach_version`.  For example `{"cockroach_version": "v24.2"}`. Multi-node clusters will undergo a rolling upgrade and will remain available, but single-node clusters will be briefly unavailable while the upgrade takes place. Upgrades will be finalized automatically after 72 hours but can be manually finalized by sending a PATCH containing `{"upgrade_status": "FINALIZED"}` to this endpoint. Before the cluster is finalized, it can be rolled back by either sending a PATCH of the previous version via `cockroach_version` or sending a PATCH containing `{"upgrade_status": "ROLLBACK_RUNNING"}`. Version upgrade operations cannot be performed simultaneously with other update operations. Only one of `upgrade_status` or `cockroach_version` is allowed in the request.

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_UpdateCluster
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: "Scale, edit or upgrade a cluster"
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"dedicated":{"hardware":{"machine_spec":{"num_virtual_cpus":8}},"region_nodes":{"us-central1":5,"us-west1":3}}}'
  /api/v1/clusters/{cluster_id}/backups:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_ListBackups
      parameters:
      - description: The cluster associated with the backups being retrieved.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          The beginning of the time range (inclusive) used to search for backups
          based on their restore point. If this field is provided, end_time must
          also be included in the request.
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |-
          The end of the time range (exclusive) used to search for backups based
          on their restore point. If this field is provided, start_time must also
          be included in the request.
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List cluster backups
      tags:
      - Backup/Restore
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/backups?start_time=SOME_STRING_VALUE&end_time=SOME_STRING_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/backups-config:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetBackupConfiguration
      parameters:
      - description: The UUID of the cluster that this backup configuration belongs
          to.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupConfiguration'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the backup configuration for a cluster
      tags:
      - Backup/Restore
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/backups-config \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_UpdateBackupConfiguration
      parameters:
      - description: The UUID of the cluster that this backup configuration belongs
          to.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackupConfigurationSpec'
        description: |-
          spec contains the information that is being updated for the given
          BackupConfiguration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupConfiguration'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update the backup configuration for a cluster
      tags:
      - Backup/Restore
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/backups-config \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"enabled":true,"frequency_minutes":60,"retention_days":7}'
  /api/v1/clusters/{cluster_id}/client-ca-cert:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteClientCACert
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCACertInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Client CA Cert for a cluster
      tags:
      - Client CA Certificates
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/client-ca-cert \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetClientCACert
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCACertInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get Client CA Cert information for a cluster
      tags:
      - Client CA Certificates
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/client-ca-cert \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_UpdateClientCACert
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientCACertRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCACertInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update Client CA Cert for a cluster
      tags:
      - Client CA Certificates
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/client-ca-cert \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"x509_pem_cert":"-----BEGIN CERTIFICATE-----..."}'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_SetClientCACert
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetClientCACertRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCACertInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Set Client CA Cert for a cluster
      tags:
      - Client CA Certificates
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/client-ca-cert \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"x509_pem_cert":"-----BEGIN CERTIFICATE-----..."}'
  /api/v1/clusters/{cluster_id}/cmek:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetCMEKClusterInfo
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMEKClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get CMEK-related information for a cluster
      tags:
      - Customer-managed Encryption Keys
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_UpdateCMEKStatus
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCMEKStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMEKClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update the CMEK-related status for a cluster
      tags:
      - Customer-managed Encryption Keys
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"action":"REVOKE"}'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_EnableCMEKSpec
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CMEKClusterSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMEKClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Enable CMEK for a cluster
      tags:
      - Customer-managed Encryption Keys
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"region_specs":[{"key_spec":{"auth_principal":"arn:aws:iam::account:role/role-name-with-path","type":"AWS_KMS","uri":"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key"},"region":"us-central1"}]}'
    put:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_UpdateCMEKSpec
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CMEKClusterSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMEKClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Enable or update the CMEK spec for a cluster
      tags:
      - Customer-managed Encryption Keys
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"region_specs":[{"key_spec":{"auth_principal":"arn:aws:iam::account:role/role-name-with-path","type":"AWS_KMS","uri":"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key"},"region":"us-central1"}]}'
  /api/v1/clusters/{cluster_id}/connection-string:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
        - FOLDER_ADMIN
        - FOLDER_MOVER
      operationId: CockroachCloud_GetConnectionString
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: database
        required: false
        schema:
          default: defaultdb
          type: string
        style: form
      - explode: true
        in: query
        name: sql_user
        required: false
        schema:
          type: string
        style: form
      - description: |-
          os indicates the target operating system, used with formatting the default SSL certificate path.
          Required only for dedicated clusters.
        explode: true
        in: query
        name: os
        required: false
        schema:
          enum:
          - MAC
          - LINUX
          - WINDOWS
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionStringResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a formatted generic connection string for a cluster
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/connection-string?database=SOME_STRING_VALUE&sql_user=SOME_STRING_VALUE&os=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/databases:
    get:
      description: |
        Sort order: Database name ascending

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
      operationId: CockroachCloud_ListDatabases
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List databases for a cluster
      tags:
      - Databases
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_EditDatabase2
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatabaseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a database
      tags:
      - Databases
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"example_database_name","new_name":"example_new_database_name"}'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_CreateDatabase
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a new database
      tags:
      - Databases
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"example_database_name"}'
  /api/v1/clusters/{cluster_id}/databases/{name}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteDatabase
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a database
      tags:
      - Databases
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases/{name} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_EditDatabase
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatabaseRequest_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a database
      tags:
      - Databases
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases/{name} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"example_database_name","new_name":"example_new_database_name"}'
  /api/v1/clusters/{cluster_id}/disrupt:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetClusterDisruptionInfo
      parameters:
      - description: cluster_id is the cluster we are requesting disruption information
          for.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterDisruptionInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get disruption specifications for a cluster
      tags:
      - Cluster Disruption
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/disrupt \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_UpdateClusterDisruption
      parameters:
      - description: cluster_id specifies the cluster for this request.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CockroachCloud_UpdateClusterDisruption_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterDisruptionInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update disruption specifications for a cluster
      tags:
      - Cluster Disruption
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/disrupt \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"regional_disruptor_specifications":[{"azs":["string"],"is_whole_region":true,"pods":["string"],"region_code":"string"}]}'
  /api/v1/clusters/{cluster_id}/logexport:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteLogExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExportClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete the Log Export configuration for a cluster
      tags:
      - Log Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetLogExportInfo
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExportClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the Log Export configuration for a cluster
      tags:
      - Log Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_EnableLogExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableLogExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExportClusterInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create or update the Log Export configuration for a cluster
      tags:
      - Log Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"auth_principal":"my-gcp-project-id","groups":[{"channels":["OPS","HEALTH"],"log_name":"devops","min_level":"WARNING"}],"log_name":"default","omitted_channels":["SESSIONS","SQL_PERF"],"redact":true,"shared_key":"shared-key","type":"GCP_CLOUD_LOGGING"}'
  /api/v1/clusters/{cluster_id}/maintenance-window:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteMaintenanceWindow
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete the maintenance window for a cluster
      tags:
      - Maintenance Windows
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/maintenance-window \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetMaintenanceWindow
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the maintenance window for a cluster
      tags:
      - Maintenance Windows
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/maintenance-window \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      description: |
        Maintenance windows are supported for ADVANCED clusters.

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_SetMaintenanceWindow
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Set the maintenance window for a cluster
      tags:
      - Maintenance Windows
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/maintenance-window \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"offset_duration":"172800s","window_duration":"21600s"}'
  /api/v1/clusters/{cluster_id}/metricexport/cloudwatch:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteCloudWatchMetricExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMetricExportResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete the CloudWatch Metric Export configuration for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/cloudwatch \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetCloudWatchMetricExportInfo
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWatchMetricExportInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the CloudWatch Metric Export configuration for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/cloudwatch \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_EnableCloudWatchMetricExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableCloudWatchMetricExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWatchMetricExportInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create or update the CloudWatch Metric Export configuration for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/cloudwatch \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"external_id":"example_external_id","log_group_name":"example","role_arn":"arn:aws:iam::account:role/ExampleRole","target_region":"us-east-1"}'
  /api/v1/clusters/{cluster_id}/metricexport/datadog:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteDatadogMetricExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMetricExportResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete the Datadog Metric Export configuration for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/datadog \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetDatadogMetricExportInfo
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatadogMetricExportInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the Datadog Metric Export configuration for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/datadog \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_EnableDatadogMetricExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableDatadogMetricExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatadogMetricExportInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create or update the Datadog Metric Export configuration for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/datadog \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"api_key":"datadog_api_key","site":"US1"}'
  /api/v1/clusters/{cluster_id}/metricexport/prometheus:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeletePrometheusMetricExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMetricExportResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Disable Prometheus Metric Export for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/prometheus \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetPrometheusMetricExportInfo
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusMetricExportInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the Prometheus Metric Export configuration for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/prometheus \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_EnablePrometheusMetricExport
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusMetricExportInfo'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Enable Prometheus Metric Export for a cluster
      tags:
      - Metric Export
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport/prometheus \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/networking/allowlist:
    get:
      description: |
        Sort order: CIDR address

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
      operationId: CockroachCloud_ListAllowlistEntries
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllowlistEntriesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the IP allowlist and propagation status for a cluster
      tags:
      - IP Allowlists
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_AddAllowlistEntry
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowlistEntry'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistEntry'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add a new CIDR address to the IP allowlist
      tags:
      - IP Allowlists
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"cidr_ip":"192.168.1.1","cidr_mask":32,"name":"Example","sql":true,"ui":true}'
  /api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteAllowlistEntry
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cidr_ip
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cidr_mask
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistEntry'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete an IP allowlist entry
      tags:
      - IP Allowlists
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_UpdateAllowlistEntry
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cidr_ip
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cidr_mask
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowlistEntry_1'
        description: AllowlistEntry
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistEntry'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update an IP allowlist entry
      tags:
      - IP Allowlists
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"cidr_ip":"192.168.1.1","cidr_mask":32,"name":"Example","sql":true,"ui":true}'
    put:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_AddAllowlistEntry2
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cidr_ip
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cidr_mask
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowlistEntry_1'
        description: AllowlistEntry
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistEntry'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add a new CIDR address to the IP allowlist
      tags:
      - IP Allowlists
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"cidr_ip":"192.168.1.1","cidr_mask":32,"name":"Example","sql":true,"ui":true}'
  /api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_ListAwsEndpointConnections
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsEndpointConnections'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List all AwsEndpointConnections for a cluster
      tags:
      - Private Endpoint Services
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections/{endpoint_id}:
    patch:
      description: |
        The "status" in the response does not reflect the latest post-update
        status, but rather the status before the state is transitioned.

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_SetAwsEndpointConnectionState
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: endpoint_id is the ID for the VPC endpoint on the customer's
          side.
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAwsEndpointConnectionStateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsEndpointConnection'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Set the AWS Endpoint Connection state
      tags:
      - Private Endpoint Services
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections/{endpoint_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"status":"AVAILABLE"}'
  /api/v1/clusters/{cluster_id}/networking/egress-private-endpoints:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_ListEgressPrivateEndpoints
      parameters:
      - description: cluster_id identifies the CockroachDB Cloud cluster whose egress
          private endpoints to list.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEgressPrivateEndpointsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List egress private endpoints
      tags:
      - Egress Private Endpoints
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-private-endpoints?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_CreateEgressPrivateEndpoint
      parameters:
      - description: cluster_id identifies the cluster to which this egress private
          endpoint applies.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEgressPrivateEndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EgressPrivateEndpoint'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create an egress private endpoint
      tags:
      - Egress Private Endpoints
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-private-endpoints \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"cluster_id":"example_cluster_id","region":"us-east-1","target_service_identifier":"arn:aws:s3:::example-bucket","target_service_type":"MSK_SASL_IAM"}'
  /api/v1/clusters/{cluster_id}/networking/egress-private-endpoints/{id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteEgressPrivateEndpoint
      parameters:
      - description: cluster_id identifies the CockroachDB Cloud cluster owning the
          egress private endpoint.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: id is the UUID value of the egress private endpoint in CockroachDB
          Cloud.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete an egress private endpoint
      tags:
      - Egress Private Endpoints
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-private-endpoints/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetEgressPrivateEndpoint
      parameters:
      - description: cluster_id identifies the CockroachDB Cloud cluster owning the
          egress private endpoint.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: id is the UUID value of the egress private endpoint in CockroachDB
          Cloud.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEgressPrivateEndpointResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get egress private endpoint
      tags:
      - Egress Private Endpoints
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-private-endpoints/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/networking/egress-private-endpoints/{id}/domain-names:
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_UpdateEgressPrivateEndpointDomainNames
      parameters:
      - description: cluster_id identifies the CockroachDB Cloud cluster owning the
          egress private endpoint.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: id is the UUID value of the egress private endpoint in CockroachDB
          Cloud.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEgressPrivateEndpointDomainNamesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update egress private endpoint domain names
      tags:
      - Egress Private Endpoints
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-private-endpoints/{id}/domain-names \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"cluster_id":"example_cluster_id","domain_names":["example.com","api.example.com"],"id":"example_id"}'
  /api/v1/clusters/{cluster_id}/networking/egress-rules:
    get:
      description: |
        Sort order: Name

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_ListEgressRules
      parameters:
      - description: |-
          cluster_id identifies the CockroachDB cluster owning the set of returned
          egress rules.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEgressRulesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List all egress rules associated with a cluster
      tags:
      - Egress Rules
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_AddEgressRule
      parameters:
      - description: cluster_id identifies the cluster to which this egress rule applies.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEgressRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEgressRuleResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add an egress rule
      tags:
      - Egress Rules
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"cluster_id":"35c4abb2-bb66-46d7-afed-25ebef5ed100","description":"egress for GCP storage buckets","destination":"storage.googleapis.com","name":"roach-buckets","ports":[443,80],"type":"FQDN"}'
  /api/v1/clusters/{cluster_id}/networking/egress-rules/egress-traffic-policy:
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_SetEgressTrafficPolicy
      parameters:
      - description: cluster_id identifies the cluster whose egress policy will be
          updated.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetEgressTrafficPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Outbound traffic management
      tags:
      - Egress Rules
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/egress-traffic-policy \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"allow_all":true,"idempotency_key":"string"}'
  /api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeleteEgressRule
      parameters:
      - description: cluster_id uniquely identifies the cluster owning the egress
          rule.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: rule_id is the UUID of an existing egress rule. This field is
          required.
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          idempotency_key uniquely identifies this request. If not set, it will be
          set by the server.
        explode: true
        in: query
        name: idempotency_key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEgressRuleResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete an existing egress rule
      tags:
      - Egress Rules
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id}?idempotency_key=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetEgressRule
      parameters:
      - description: cluster_id uniquely identifies the cluster owning the egress
          rule.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: rule_id is the UUID of an existing egress rule.
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEgressRuleResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get an existing egress rule
      tags:
      - Egress Rules
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_EditEgressRule
      parameters:
      - description: cluster_id uniquely identifies the cluster owning the egress
          rule.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: rule_id is the UUID of an existing egress rule. This field is
          required.
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditEgressRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditEgressRuleResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Edit an existing egress rule
      tags:
      - Egress Rules
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"cluster_id":"35c4abb2-bb66-46d7-afed-25ebef5ed100","ports":[443,80],"rule_id":"35c4abb2-bb66-46d7-afed-25ebef5ed2aa"}'
  /api/v1/clusters/{cluster_id}/networking/private-endpoint-connections:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_ListPrivateEndpointConnections
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnections'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List all connections to a cluster's private endpoint service.
      tags:
      - Private Endpoint Services
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-connections \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_AddPrivateEndpointConnection
      parameters:
      - description: |-
          cluster_id is the id of the cluster to which the private endpoint
          connection will be added.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPrivateEndpointConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add a connection to a cluster's private endpoint service.
      tags:
      - Private Endpoint Services
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-connections \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"cluster_id":"35c4abb2-bb66-46d7-afed-25ebef5ed2aa","endpoint_id":"e-65de2gf3"}'
  /api/v1/clusters/{cluster_id}/networking/private-endpoint-connections/{endpoint_id}:
    delete:
      description: |
        Remove a private endpoint from a service's trusted endpoints list. Caller should make sure to URL encode the endpoint_id before calling this method.

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_DeletePrivateEndpointConnection
      parameters:
      - description: |-
          cluster_id is the id of the cluster from which the private endpoint
          connection will be removed.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          endpoint_id is the id of the private endpoint associated with a cluster's
          private endpoint service.
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a connection from a cluster's private endpoint service.
      tags:
      - Private Endpoint Services
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-connections/{endpoint_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/networking/private-endpoint-services:
    get:
      description: |
        The internal_dns property from the regions field in the ListClusters response can be used to connect to PrivateEndpointServices.

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_ListPrivateEndpointServices
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointServices'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List all PrivateEndpointServices for a cluster
      tags:
      - Private Endpoint Services
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-services \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_CreatePrivateEndpointServices
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointServices'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create all PrivateEndpointServices for a cluster
      tags:
      - Private Endpoint Services
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-services \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/networking/private-endpoint-trusted-owners:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_ListPrivateEndpointTrustedOwners
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateEndpointTrustedOwnersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List all private endpoint trusted owners for a cluster
      tags:
      - Private Endpoint Services
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-trusted-owners \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
      operationId: CockroachCloud_AddPrivateEndpointTrustedOwner
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPrivateEndpointTrustedOwnerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddPrivateEndpointTrustedOwnerResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add a private endpoint trusted owner to a cluster
      tags:
      - Private Endpoint Services
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-trusted-owners \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"external_owner_id":"012345678901","type":"AWS_ACCOUNT_ID"}'
  /api/v1/clusters/{cluster_id}/networking/private-endpoint-trusted-owners/{owner_id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
      operationId: CockroachCloud_RemovePrivateEndpointTrustedOwner
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          owner_id corresponds to the UUID of the private endpoint trusted owner
          entry.
        explode: false
        in: path
        name: owner_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovePrivateEndpointTrustedOwnerResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Remove a private endpoint trusted owner from a cluster
      tags:
      - Private Endpoint Services
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-trusted-owners/{owner_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetPrivateEndpointTrustedOwner
      parameters:
      - description: cluster_id is the ID for the cluster.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          owner_id corresponds to the UUID of the private endpoint trusted owner
          entry.
        explode: false
        in: path
        name: owner_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPrivateEndpointTrustedOwnerResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a private endpoint trusted owner entry for a cluster
      tags:
      - Private Endpoint Services
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-trusted-owners/{owner_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/nodes:
    get:
      description: |
        Sort order: Region name, node name

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
      operationId: CockroachCloud_ListClusterNodes
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: Optional filter to limit response to a single region.
        explode: true
        in: query
        name: region_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterNodesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List nodes for a cluster
      tags:
      - Clusters
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/nodes?region_name=SOME_STRING_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/restores:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_ListRestores
      parameters:
      - description: The ID of the cluster where the restores ran or are currently
          running.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The beginning of the time range (inclusive) used to search for
          restores.
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The end of the time range (exclusive) used to search for restores.
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestoresResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List restore operations
      tags:
      - Backup/Restore
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/restores?start_time=SOME_STRING_VALUE&end_time=SOME_STRING_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/restores/{restore_id}:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetRestore
      parameters:
      - description: The ID of the cluster where the restore ran or is currently running.
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the restore.
        explode: false
        in: path
        name: restore_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restore'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: View a restore job
      tags:
      - Backup/Restore
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/restores/{restore_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/sql-users:
    get:
      description: |
        Sort order: Username

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
      operationId: CockroachCloud_ListSQLUsers
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSQLUsersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List SQL users for a cluster
      tags:
      - SQL Users
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
      operationId: CockroachCloud_CreateSQLUser
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSQLUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SQLUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a new SQL user
      tags:
      - SQL Users
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"example_username","password":"example_password"}'
  /api/v1/clusters/{cluster_id}/sql-users/{name}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
      operationId: CockroachCloud_DeleteSQLUser
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SQLUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a SQL user
      tags:
      - SQL Users
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users/{name} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/clusters/{cluster_id}/sql-users/{name}/password:
    put:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
      operationId: CockroachCloud_UpdateSQLUserPassword
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSQLUserPasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SQLUser'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a SQL user's password
      tags:
      - SQL Users
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users/{name}/password \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"password":"example_new_password"}'
  /api/v1/clusters/{cluster_id}/version-deferral:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_GetClusterVersionDeferral
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterVersionDeferral'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the version upgrade deferral policy for a cluster.
      tags:
      - Version Deferral
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/version-deferral \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_SetClusterVersionDeferral
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterVersionDeferral'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterVersionDeferral'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Set the version upgrade deferral policy for a cluster
      tags:
      - Version Deferral
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/version-deferral \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"deferral_policy":"FIXED_DEFERRAL"}'
  /api/v1/clusters/{destination_cluster_id}/restores:
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
      operationId: CockroachCloud_CreateRestore
      parameters:
      - description: The ID of the cluster where the backup will be restored.
        explode: false
        in: path
        name: destination_cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CockroachCloud_CreateRestore_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restore'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a restore
      tags:
      - Backup/Restore
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/clusters/{destination_cluster_id}/restores \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"backup_id":"1234abcd-1234-1234-abcd-12345678abcd","destination_cluster_id":"12345678-1234-1234-1234-123456789012","objects":[{"database":"database1","schema":"schema1","table":"table1"},{"database":"database1","schema":"schema1","table":"table2"}],"restore_opts":{"into_db":"database2","schema_only":true},"type":"TABLE"}'
  /api/v1/folders:
    get:
      description: |
        Sort order: Folder name

        Can be used by the following roles assigned at the organization or folder scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
        - CLUSTER_CREATOR
        - FOLDER_ADMIN
        - FOLDER_MOVER
      operationId: CockroachCloud_ListFolders
      parameters:
      - description: |-
          Optional filter to limit the response to include only results that match
          the given absolute path to that folder. Preceding and ending "/" are optional.
          For example /folder1/folder2, /folder1/folder2/, folder1/folder2, and
          folder1/folder2/ are all equivalent. If no matching folder is found, an
          empty list is returned. Because folder paths are passed via the query
          parameters, they must be URL-encoded.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List folders owned by an organization
      tags:
      - Folders
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/folders?path=SOME_STRING_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization or folder scope:
        - FOLDER_ADMIN
      operationId: CockroachCloud_CreateFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResource'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a folder
      tags:
      - Folders
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/folders \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"folder_name","parent_id":"12345678-1234-1234-1234-123456789012"}'
  /api/v1/folders/{folder_id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization or folder scope:
        - FOLDER_ADMIN
      operationId: CockroachCloud_DeleteFolder
      parameters:
      - explode: false
        in: path
        name: folder_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a folder
      tags:
      - Folders
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/folders/{folder_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization or folder scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
        - CLUSTER_CREATOR
        - FOLDER_ADMIN
        - FOLDER_MOVER
      operationId: CockroachCloud_GetFolder
      parameters:
      - explode: false
        in: path
        name: folder_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResource'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get folder info for a folder
      tags:
      - Folders
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/folders/{folder_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization or folder scope:
        - FOLDER_ADMIN
        - FOLDER_MOVER
      operationId: CockroachCloud_UpdateFolder
      parameters:
      - explode: false
        in: path
        name: folder_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResource'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a folder
      tags:
      - Folders
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/folders/{folder_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"name":"folder_name","parent_id":"12345678-1234-1234-1234-123456789012"}'
  /api/v1/folders/{folder_id}/contents:
    get:
      description: |
        Set `folder_id` to 'root' to list root level contents.  Sort order: Folders sorted by name, followed by Clusters sorted by name.

        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
        - FOLDER_ADMIN
        - FOLDER_MOVER
      operationId: CockroachCloud_ListFolderContents
      parameters:
      - explode: false
        in: path
        name: folder_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResourceList'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List contents of a folder
      tags:
      - Folders
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/folders/{folder_id}/contents?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/invoices:
    get:
      description: |
        Sort order: invoice start date ascending

        Can be used by the following roles assigned at the organization scope:
        - BILLING_COORDINATOR
        - CLUSTER_ADMIN
      operationId: CockroachCloud_ListInvoices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvoicesResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List invoices for a given organization
      tags:
      - Billing
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/invoices \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/invoices/{invoice_id}:
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - BILLING_COORDINATOR
        - CLUSTER_ADMIN
      operationId: CockroachCloud_GetInvoice
      parameters:
      - description: |-
          invoice_id is the unique ID representing the invoice.
          invoice_id is used to retrieve a specific
          billing period's invoice.
        explode: false
        in: path
        name: invoice_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a specific invoice for an organization
      tags:
      - Billing
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/invoices/{invoice_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/jwt-issuers:
    get:
      description: |
        Lists all the JWT Issuer configurations registered for the CockroachDB Cloud organization

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_ListJWTIssuers
      parameters:
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJWTIssuersResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List all JWT Issuers
      tags:
      - JWT Issuers
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/jwt-issuers?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Registers a JWT Issuer with the CockroachDB Cloud to allow verifying JWTs during API authentication

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_AddJWTIssuer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJWTIssuerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTIssuer'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add a JWT Issuer
      tags:
      - JWT Issuers
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/jwt-issuers \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"audience":"1234567890abcd","claim":"email","identity_map":[{"cc_identity":"\\1","token_identity":"/^sso_(.*)$"}],"issuer_url":"https://jwt-issuer.example.com","jwks":"{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"alg\":\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\",\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"}'
  /api/v1/jwt-issuers/{id}:
    delete:
      description: |
        Deletes the JWT Issuer configuration

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_DeleteJWTIssuer
      parameters:
      - description: The unique identifier of the JWT Issuer resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTIssuer'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a JWT Issuer
      tags:
      - JWT Issuers
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/jwt-issuers/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Retrieves the JWT Issuer configuration

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_GetJWTIssuer
      parameters:
      - description: The unique identifier of the JWT Issuer resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTIssuer'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a JWT Issuer
      tags:
      - JWT Issuers
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/jwt-issuers/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Updates the JWT Issuer configuration

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_UpdateJWTIssuer
      parameters:
      - description: The unique identifier of the JWT Issuer resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJWTIssuerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTIssuer'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a JWT Issuer
      tags:
      - JWT Issuers
      x-badges:
      - color: red
        label: LIMITED ACCESS
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/jwt-issuers/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"audience":"1234567890abcd","claim":"email","identity_map":[{"cc_identity":"\\1","token_identity":"/^sso_(.*)$"}],"issuer_url":"https://jwt-issuer.example.com","jwks":"{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"alg\":\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\",\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"}'
  /api/v1/organization:
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - ORG_MEMBER
      operationId: CockroachCloud_GetOrganizationInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get information about the caller's organization
      tags:
      - Organizations
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/organization \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/physical-replication-streams:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
      operationId: CockroachCloud_ListPhysicalReplicationStreams
      parameters:
      - description: |-
          primary_cluster_id, if set, will cause only replication streams
          with this cluster as the primary to be returned.
        explode: true
        in: query
        name: primary_cluster_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          standby_cluster_id, if set, will cause only replication streams
          with this cluster as the standby to be returned.
        explode: true
        in: query
        name: standby_cluster_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          cluster_id, if set, will cause replication streams with this
          cluster as the primary or the standby to be returned.
        explode: true
        in: query
        name: cluster_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          show_completed specifies whether or not replication streams in the
          completed state are shown.
        explode: true
        in: query
        name: show_completed
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalReplicationStreamList'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List physical replication streams
      tags:
      - Physical Cluster Replication
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/physical-replication-streams?primary_cluster_id=SOME_STRING_VALUE&standby_cluster_id=SOME_STRING_VALUE&cluster_id=SOME_STRING_VALUE&show_completed=SOME_BOOLEAN_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
      operationId: CockroachCloud_CreatePhysicalReplicationStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePhysicalReplicationStreamRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalReplicationStream'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a physical replication stream
      tags:
      - Physical Cluster Replication
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/physical-replication-streams \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"primary_cluster_id":"string","standby_cluster_id":"string"}'
  /api/v1/physical-replication-streams/{id}:
    get:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
        - CLUSTER_OPERATOR_WRITER
        - CLUSTER_DEVELOPER
      operationId: CockroachCloud_GetPhysicalReplicationStream
      parameters:
      - description: id is the ID of the replication stream to get.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalReplicationStream'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a physical replication stream
      tags:
      - Physical Cluster Replication
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/physical-replication-streams/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        Can be used by the following roles assigned at the organization, folder or cluster scope:
        - CLUSTER_ADMIN
      operationId: CockroachCloud_UpdatePhysicalReplicationStream
      parameters:
      - description: id is the ID of the replication stream to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePhysicalReplicationStreamSpec'
        description: |-
          spec contains the information that is being updated for the given
          replication stream.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalReplicationStream'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a physical replication stream
      tags:
      - Physical Cluster Replication
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/physical-replication-streams/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"failover_at":"2006-01-03T15:04:05Z","status":"FAILING_OVER"}'
  /api/v1/roles:
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - FOLDER_ADMIN
      operationId: CockroachCloud_ListRoleGrants
      parameters:
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoleGrantsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List all RoleGrants
      tags:
      - Role Management
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/roles?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/roles/{user_id}:
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - FOLDER_ADMIN
      operationId: CockroachCloud_GetAllRolesForUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRolesForUserResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get all Role Grants for a user
      tags:
      - Role Management
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/roles/{user_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      description: |-
        Replace the entire role set for a user or service account by providing its user_id or service_account_id.

        Roles that will be removed or added as a result of this call must follow the CC rules for role assignment:
        https://www.cockroachlabs.com/docs/cockroachcloud/authorization#which-roles-grant-the-ability-to-add-remove-and-manage-members-in-in-a-cockroachdb-cloud-organization
      operationId: CockroachCloud_SetRolesForUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CockroachCloud_SetRolesForUser_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRolesForUserResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Replace the roles for a user or service account with exactly those
        provided
      tags:
      - Role Management
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PUT \
            --url https://cockroachlabs.cloud/api/v1/roles/{user_id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"roles":[{"name":"CLUSTER_ADMIN","resource":{"id":"example_cluster_id","type":"CLUSTER"}}],"user_id":"12345678-1234-1234-1234-123456789012"}'
  /api/v1/roles/{user_id}/{resource_type}/{resource_id}/{role_name}:
    delete:
      description: |-
        Remove a single role from a user or service account by providing its user_id or service_account_id.

        Roles that will be removed as a result of this call must follow the CC rules for role assignment:
        https://www.cockroachlabs.com/docs/cockroachcloud/authorization#which-roles-grant-the-ability-to-add-remove-and-manage-members-in-in-a-cockroachdb-cloud-organization
      operationId: CockroachCloud_RemoveUserFromRole
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - ORGANIZATION
          - CLUSTER
          - FOLDER
          type: string
        style: simple
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role_name
        required: true
        schema:
          enum:
          - BILLING_COORDINATOR
          - ORG_ADMIN
          - ORG_MEMBER
          - CLUSTER_ADMIN
          - CLUSTER_OPERATOR_WRITER
          - CLUSTER_DEVELOPER
          - CLUSTER_CREATOR
          - FOLDER_ADMIN
          - FOLDER_MOVER
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRolesForUserResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Remove a role from a user or service account
      tags:
      - Role Management
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/roles/{user_id}/{resource_type}/{resource_id}/{role_name} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |-
        Add a single role to a user or service account by providing its user_id or service_account_id.

        Roles that will be added as a result of this call must follow the CC rules for role assignment:
        https://www.cockroachlabs.com/docs/cockroachcloud/authorization#which-roles-grant-the-ability-to-add-remove-and-manage-members-in-in-a-cockroachdb-cloud-organization
      operationId: CockroachCloud_AddUserToRole
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - ORGANIZATION
          - CLUSTER
          - FOLDER
          type: string
        style: simple
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role_name
        required: true
        schema:
          enum:
          - BILLING_COORDINATOR
          - ORG_ADMIN
          - ORG_MEMBER
          - CLUSTER_ADMIN
          - CLUSTER_OPERATOR_WRITER
          - CLUSTER_DEVELOPER
          - CLUSTER_CREATOR
          - FOLDER_ADMIN
          - FOLDER_MOVER
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRolesForUserResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Add a role to a user or service account
      tags:
      - Role Management
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/roles/{user_id}/{resource_type}/{resource_id}/{role_name} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/service-accounts:
    get:
      description: |
        Sort order: Service account name

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
      operationId: CockroachCloud_ListServiceAccounts
      parameters:
      - explode: true
        in: query
        name: pagination.page
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pagination.limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagination.as_of_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |2-
           - ASC: Sort in ascending order. This is the default unless otherwise specified.
           - DESC: Sort in descending order.
        explode: true
        in: query
        name: pagination.sort_order
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceAccountsResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List service accounts for an organization
      tags:
      - Service Accounts
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/service-accounts?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
      operationId: CockroachCloud_CreateServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create a service account
      tags:
      - Service Accounts
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request POST \
            --url https://cockroachlabs.cloud/api/v1/service-accounts \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"description":"","name":"new name","roles":[{"name":"CLUSTER_ADMIN","resource":{"type":"ORGANIZATION"}}]}'
  /api/v1/service-accounts/{id}:
    delete:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_DeleteServiceAccount
      parameters:
      - description: the ID of the service account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a service account
      tags:
      - Service Accounts
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request DELETE \
            --url https://cockroachlabs.cloud/api/v1/service-accounts/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
      operationId: CockroachCloud_GetServiceAccount
      parameters:
      - description: The ID of the service account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get a service account by ID
      tags:
      - Service Accounts
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url https://cockroachlabs.cloud/api/v1/service-accounts/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
    patch:
      description: |
        To manage roles associated with a service account after creation, pass the service_account_id instead of a user_id to any [Role Management endpoint](#tag--Role-Management).

        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
      operationId: CockroachCloud_UpdateServiceAccount
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceAccountSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update a service account
      tags:
      - Service Accounts
      x-badges:
      - color: blue
        label: PREVIEW
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request PATCH \
            --url https://cockroachlabs.cloud/api/v1/service-accounts/{id} \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
            --json '{"description":"new description","name":"new name"}'
  /api/v1/users/persons-by-email:
    get:
      description: |
        Can be used by the following roles assigned at the organization scope:
        - ORG_ADMIN
        - CLUSTER_ADMIN
        - FOLDER_ADMIN
      operationId: CockroachCloud_GetPersonUsersByEmail
      parameters:
      - description: an email address is required.
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonUsersByEmailResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema: {}
          description: Returned when a request field is invalid.
        "401":
          content:
            application/json:
              schema: {}
          description: Returned when the token bearer cannot be authenticated.
        "403":
          content:
            application/json:
              schema: {}
          description: Returned when the user does not have permission to access the
            resource.
        "404":
          content:
            application/json:
              schema: {}
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema: {}
          description: Server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Search person users by email address
      tags:
      - Role Management
      x-codeSamples:
      - lang: Shell + Curl
        source: |-
          curl --request GET \
            --url 'https://cockroachlabs.cloud/api/v1/users/persons-by-email?email=SOME_STRING_VALUE' \
            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
components:
  requestBodies: {}
  schemas:
    AWSEndpointConnectionStatus.Type:
      enum:
      - PENDING
      - PENDING_ACCEPTANCE
      - AVAILABLE
      - DELETING
      - DELETED
      - REJECTED
      - FAILED
      - EXPIRED
      type: string
    AWSPrivateLinkServiceDetail:
      example:
        availability_zone_ids:
        - availability_zone_ids
        - availability_zone_ids
        service_name: service_name
        service_id: service_id
      properties:
        availability_zone_ids:
          description: |-
            availability_zone_ids are the identifiers for the availability zones
            that the service is available in.
          items:
            type: string
          type: array
        service_id:
          description: |-
            service_id is the server side of the PrivateLink
            connection. This is the same as AWSPrivateLinkEndpoint.service_id.
          type: string
        service_name:
          description: |-
            service_name is the AWS service name customers use to create endpoints
            on their end.
          type: string
      required:
      - availability_zone_ids
      - service_id
      - service_name
      type: object
    AddEgressRuleResponse:
      example:
        Rule:
          crl_managed: true
          cluster_id: cluster_id
          paths:
          - paths
          - paths
          destination: destination
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          state: state
          ports:
          - 0
          - 0
          type: type
      properties:
        Rule:
          $ref: '#/components/schemas/EgressRule'
      required:
      - rule
      title: AddEgressRuleResponse
      type: object
    AddJWTIssuerRequest:
      example:
        audience: 1234567890abcd
        issuer_url: https://jwt-issuer.example.com
        jwks: "{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"alg\"\
          :\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\"\
          ,\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"
        claim: email
        identity_map:
        - token_identity: /^sso_(.*)$
          cc_identity: \1
        - token_identity: /^sso_(.*)$
          cc_identity: \1
      properties:
        audience:
          example: 1234567890abcd
          title: The intended audience for consuming the JWT
          type: string
        claim:
          example: email
          title: Used to identify the user from the external Identity Provider. Defaults
            to "sub"
          type: string
        identity_map:
          description: A list of mappings to map the external token identity into
            CockroachDB Cloud.
          items:
            $ref: '#/components/schemas/JWTIssuerIdentityMapEntry'
          type: array
        issuer_url:
          example: https://jwt-issuer.example.com
          title: The URL of the server issuing JWTs
          type: string
        jwks:
          example: "{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"\
            alg\":\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\"\
            ,\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"
          title: A set of public keys (JWKS) used to verify a JWT
          type: string
      required:
      - audience
      - issuer_url
      title: AddJWTIssuerRequest
      type: object
    AddPrivateEndpointTrustedOwnerResponse:
      example:
        trusted_owner:
          cluster_id: cluster_id
          external_owner_id: external_owner_id
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          type: null
      properties:
        trusted_owner:
          $ref: '#/components/schemas/PrivateEndpointTrustedOwner'
      required:
      - trusted_owner
      type: object
    AllowlistEntry:
      example:
        cidr_ip: 192.168.1.1
        cidr_mask: 32
        name: Example
        sql: true
        ui: true
      properties:
        cidr_ip:
          type: string
        cidr_mask:
          format: int32
          type: integer
        name:
          type: string
        sql:
          type: boolean
        ui:
          type: boolean
      required:
      - cidr_ip
      - cidr_mask
      - sql
      - ui
      title: AllowlistEntry
      type: object
    Any:
      additionalProperties: {}
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      properties:
        '@type':
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com. As of May 2023, there are no widely used type server
            implementations and no plans to implement one.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
      type: object
    ApiKey:
      example:
        created_at: 2022-03-22T20:23:11.285067Z
        id: CCDB1_12345abcdefGHIJKLMnopq
        name: example name
        service_account_id: 1234abcd-1234-1234-abcd-12345678abcd
      properties:
        created_at:
          description: the creation time of the api key.
          example: 2022-03-22T20:23:11.285067Z
          format: date-time
          type: string
        id:
          description: the ID of the api key.
          example: CCDB1_12345abcdefGHIJKLMnopq
          type: string
        name:
          example: api key name
          title: the name of the api key
          type: string
        service_account_id:
          description: the ID of the service account the api key references.
          example: 1234abcd-1234-1234-abcd-12345678abcd
          format: uuid
          type: string
      required:
      - created_at
      - id
      - name
      - service_account_id
      type: object
    AuditLogAction:
      enum:
      - AUDIT_LOG_ACTION_CREATE_CLUSTER
      - AUDIT_LOG_ACTION_DELETE_CLUSTER
      - AUDIT_LOG_ACTION_INVITE_USER_TO_ORGANIZATION
      - AUDIT_LOG_ACTION_EDIT_USER_INVITE
      - AUDIT_LOG_ACTION_REVOKE_USER_INVITE
      - AUDIT_LOG_ACTION_ACCEPT_USER_INVITE
      - AUDIT_LOG_ACTION_ASSIGN_USER_ROLE
      - AUDIT_LOG_ACTION_DELETE_USER_FROM_ORGANIZATION
      - AUDIT_LOG_ACTION_CREATE_SERVICE_ACCOUNT
      - AUDIT_LOG_ACTION_UPDATE_SERVICE_ACCOUNT
      - AUDIT_LOG_ACTION_DELETE_SERVICE_ACCOUNT
      - AUDIT_LOG_ACTION_CREATE_API_KEY
      - AUDIT_LOG_ACTION_UPDATE_API_KEY
      - AUDIT_LOG_ACTION_DELETE_API_KEY
      - AUDIT_LOG_ACTION_UPDATE_CLUSTER
      - AUDIT_LOG_ACTION_CREATE_SQL_USER
      - AUDIT_LOG_ACTION_CHANGE_SQL_USER_PASSWORD
      - AUDIT_LOG_ACTION_DELETE_SQL_USER
      - AUDIT_LOG_ACTION_ADD_IP_ALLOWLIST
      - AUDIT_LOG_ACTION_EDIT_IP_ALLOWLIST
      - AUDIT_LOG_ACTION_DELETE_IP_ALLOWLIST
      - AUDIT_LOG_ACTION_CREATE_VPC_PEERING
      - AUDIT_LOG_ACTION_DELETE_VPC_PEERING
      - AUDIT_LOG_ACTION_CREATE_PRIVATE_LINK
      - AUDIT_LOG_ACTION_ACCEPT_PRIVATE_LINK
      - AUDIT_LOG_ACTION_REJECT_PRIVATE_LINK
      - AUDIT_LOG_ACTION_USER_LOGIN
      - AUDIT_LOG_ACTION_ADD_USER_TO_ROLE
      - AUDIT_LOG_ACTION_REMOVE_USER_FROM_ROLE
      - AUDIT_LOG_ACTION_CREATE_USER
      - AUDIT_LOG_ACTION_DELETE_USER
      - AUDIT_LOG_ACTION_UPDATE_USER
      - AUDIT_LOG_ACTION_CREATE_GROUP
      - AUDIT_LOG_ACTION_DELETE_GROUP
      - AUDIT_LOG_ACTION_UPDATE_GROUP
      - AUDIT_LOG_ACTION_SET_CLIENT_CA_CERT
      - AUDIT_LOG_ACTION_UPDATE_CLIENT_CA_CERT
      - AUDIT_LOG_ACTION_DELETE_CLIENT_CA_CERT
      - AUDIT_LOG_ACTION_CREATE_API_OIDC_CONFIG
      - AUDIT_LOG_ACTION_DELETE_API_OIDC_CONFIG
      - AUDIT_LOG_ACTION_UPDATE_API_OIDC_CONFIG
      - AUDIT_LOG_ACTION_CREATE_FOLDER
      - AUDIT_LOG_ACTION_DELETE_FOLDER
      - AUDIT_LOG_ACTION_UPDATE_FOLDER
      - AUDIT_LOG_ACTION_ADD_PRIVATE_ENDPOINT_TRUSTED_OWNER
      - AUDIT_LOG_ACTION_REMOVE_PRIVATE_ENDPOINT_TRUSTED_OWNER
      - AUDIT_LOG_ACTION_ADD_ALERT_RECIPIENT
      - AUDIT_LOG_ACTION_REMOVE_ALERT_RECIPIENT
      - AUDIT_LOG_ACTION_TOGGLE_ALERTS
      - AUDIT_LOG_ACTION_TEST_ALERT_EMAIL
      - AUDIT_LOG_ACTION_UPDATE_CMEK
      - AUDIT_LOG_ACTION_REVOKE_CMEK
      - AUDIT_LOG_ACTION_UPDATE_CLUSTER_LOG_EXPORT
      - AUDIT_LOG_ACTION_DELETE_CLUSTER_LOG_EXPORT
      - AUDIT_LOG_ACTION_UPDATE_CLUSTER_METRIC_EXPORT
      - AUDIT_LOG_ACTION_DELETE_CLUSTER_METRIC_EXPORT
      - AUDIT_LOG_ACTION_RESTORE_CLUSTER
      - AUDIT_LOG_ACTION_UPDATE_CLUSTER_MAJOR_VERSION
      - AUDIT_LOG_ACTION_ROLLBACK_CLUSTER_MAJOR_VERSION_UPDATE
      - AUDIT_LOG_ACTION_FINALIZE_CLUSTER_MAJOR_VERSION_UPDATE
      - AUDIT_LOG_ACTION_UPDATE_CLUSTER_VERSION_UPGRADE_DEFERRAL
      - AUDIT_LOG_ACTION_SET_CLUSTER_MAINTENANCE_WINDOW
      - AUDIT_LOG_ACTION_DELETE_CLUSTER_MAINTENANCE_WINDOW
      - AUDIT_LOG_ACTION_SET_EGRESS_TRAFFIC_POLICY
      - AUDIT_LOG_ACTION_ADD_EGRESS_RULE
      - AUDIT_LOG_ACTION_EDIT_EGRESS_RULE
      - AUDIT_LOG_ACTION_DELETE_EGRESS_RULE
      - AUDIT_LOG_ACTION_ENABLE_CLOUD_ORG_SSO
      - AUDIT_LOG_ACTION_ADD_AUTHENTICATION_METHOD
      - AUDIT_LOG_ACTION_UPDATE_AUTHENTICATION_METHOD
      - AUDIT_LOG_ACTION_DELETE_AUTHENTICATION_METHOD
      - AUDIT_LOG_ACTION_SET_DELETE_PROTECTION
      - AUDIT_LOG_ACTION_MARKETPLACE_CREATE_SUBSCRIPTION
      - AUDIT_LOG_ACTION_MARKETPLACE_CANCEL_SUBSCRIPTION
      - AUDIT_LOG_ACTION_ADD_JWT_ISSUER
      - AUDIT_LOG_ACTION_DELETE_JWT_ISSUER
      - AUDIT_LOG_ACTION_UPDATE_JWT_ISSUER
      - AUDIT_LOG_ACTION_CREATE_LICENSE
      - AUDIT_LOG_ACTION_UPDATE_ORGANIZATION_NAME
      - AUDIT_LOG_ACTION_CREATE_LICENSES
      - AUDIT_LOG_ACTION_CREATE_PLAN_MIGRATION
      - AUDIT_LOG_ACTION_CANCEL_PLAN_MIGRATION
      - AUDIT_LOG_ACTION_CUTOVER_PLAN_MIGRATION
      - AUDIT_LOG_ACTION_CREATE_EGRESS_PRIVATE_ENDPOINT
      - AUDIT_LOG_ACTION_DELETE_EGRESS_PRIVATE_ENDPOINT
      - AUDIT_LOG_ACTION_UPDATE_EGRESS_PRIVATE_ENDPOINT
      type: string
    AuditLogEntry:
      description: |-
        AuditLogEntry represents an entry in the cloud event log.
        Note that this message definition should always match exactly with the
        corresponding `AuditLogEntry` message in `console/consolepb/console.proto`.
      example:
        service_account_name: service_account_name
        cluster_name: cluster_name
        metadata:
          ip_address: ip_address
        trace_id: trace_id
        user_email: user_email
        created_at: 2000-01-23T04:56:07.000+00:00
        session_id: session_id
        source: null
        error: error
        cluster_id: cluster_id
        payload: payload
        action: null
        id: id
      properties:
        action:
          $ref: '#/components/schemas/AuditLogAction'
        cluster_id:
          description: |-
            ClusterId is the ID of the cluster to which this log entry applies, if it
            applies to a single cluster.
          type: string
        cluster_name:
          description: |-
            ClusterName is the name of the cluster to which this log entry applies, if
            it applies to a single cluster.
          type: string
        created_at:
          description: CreatedAt is the time that this log entry was recorded.
          format: date-time
          type: string
        error:
          description: Error is the error that applies to this entry if it represents
            a failure.
          type: string
        id:
          description: Id uniquely identifies this entry.
          type: string
        metadata:
          $ref: '#/components/schemas/AuditLogMetadata'
        payload:
          description: |-
            Payload is a representation of the essential details relating to this
            log entry.
          type: string
        service_account_name:
          description: |-
            ServiceAccountName is the name of the service account that triggered this
            log entry. If it was not a service account, it will be empty.
          type: string
        session_id:
          description: |-
            SessionId is an ID that can be used to correlate this log entry with
            others that are emitted as part of the same user session, typically for
            users interacting through the UI. It should be treated as an opaque string
            with no guaranteed structure.
          type: string
        source:
          $ref: '#/components/schemas/AuditLogSource'
        trace_id:
          description: |-
            TraceId is an ID that can be used to correlate this log entry with others
            that are emitted as part of the same process. It should be treated as an
            opaque string with no guaranteed structure.
          type: string
        user_email:
          description: |-
            UserEmail is the email address of the user that triggered this log entry.
            If it was not a human user, it will be empty.
          type: string
      type: object
    AuditLogMetadata:
      example:
        ip_address: ip_address
      properties:
        ip_address:
          type: string
      type: object
    AuditLogSource:
      enum:
      - AUDIT_LOG_SOURCE_CC_API
      - AUDIT_LOG_SOURCE_CLI
      - AUDIT_LOG_SOURCE_UI
      - AUDIT_LOG_SOURCE_INTERNAL
      type: string
    AwsEndpointConnection:
      example:
        external_owner_id: external_owner_id
        service_id: service_id
        endpoint_id: endpoint_id
        cloud_provider: null
        region_name: region_name
        status: null
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProvider.Type'
        endpoint_id:
          description: endpoint_id is the client side of the PrivateLink connection.
          type: string
        external_owner_id:
          description: |-
            external_owner_id represents the ID of the AWS account that owns the
            PrivateLink connection.
          type: string
        region_name:
          description: region_name is the cloud provider region name (i.e. us-east-1).
          type: string
        service_id:
          description: |-
            service_id is the server side of the PrivateLink
            connection. This is the same as AWSPrivateLinkEndpoint.service_id.
          type: string
        status:
          $ref: '#/components/schemas/AWSEndpointConnectionStatus.Type'
      required:
      - cloud_provider
      - endpoint_id
      - region_name
      - service_id
      - status
      type: object
    AwsEndpointConnections:
      example:
        connections:
        - external_owner_id: external_owner_id
          service_id: service_id
          endpoint_id: endpoint_id
          cloud_provider: null
          region_name: region_name
          status: null
        - external_owner_id: external_owner_id
          service_id: service_id
          endpoint_id: endpoint_id
          cloud_provider: null
          region_name: region_name
          status: null
      properties:
        connections:
          description: Connections is a list of private endpoints.
          items:
            $ref: '#/components/schemas/AwsEndpointConnection'
          type: array
      required:
      - connections
      type: object
    BackupConfiguration:
      example:
        enabled: true
        frequency_minutes: 60
        retention_days: 7
      properties:
        enabled:
          description: Indicates whether backups are enabled.
          type: boolean
        frequency_minutes:
          description: |-
            How frequently in minutes that backups are taken, which will determine the
            [RPO](https://www.cockroachlabs.com/docs/stable/disaster-recovery-overview#resilience-strategy)
            of the cluster.
          format: int32
          type: integer
        retention_days:
          description: The number of days backups are retained for.
          format: int32
          type: integer
      required:
      - enabled
      - frequency_minutes
      - retention_days
      title: BackupConfiguration
      type: object
    BackupSummary:
      example:
        id: id
        as_of_time: 2000-01-23T04:56:07.000+00:00
      properties:
        as_of_time:
          description: The point in time (in UTC) the backup restores to.
          format: date-time
          type: string
        id:
          description: The unique identifier associated with the backup.
          type: string
      required:
      - as_of_time
      - id
      type: object
    BuiltInFromGroups:
      example:
        role:
          resource:
            id: id
            type: null
          name: null
        group_names:
        - group_names
        - group_names
      properties:
        group_names:
          items:
            type: string
          type: array
        role:
          $ref: '#/components/schemas/BuiltInRole'
      type: object
    BuiltInRole:
      example:
        resource:
          id: id
          type: null
        name: null
      properties:
        name:
          $ref: '#/components/schemas/OrganizationUserRole.Type'
        resource:
          $ref: '#/components/schemas/Resource'
      required:
      - name
      - resource
      type: object
    CMEKClusterInfo:
      description: |-
        CMEKClusterInfo contains the status of CMEK across an entire cluster,
        including within each one its regions.
      example:
        region_infos:
        - region: region
          key_infos:
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            user_message: user_message
            spec:
              auth_principal: auth_principal
              type: null
              uri: uri
            status: null
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            user_message: user_message
            spec:
              auth_principal: auth_principal
              type: null
              uri: uri
            status: null
          status: null
        - region: region
          key_infos:
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            user_message: user_message
            spec:
              auth_principal: auth_principal
              type: null
              uri: uri
            status: null
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            user_message: user_message
            spec:
              auth_principal: auth_principal
              type: null
              uri: uri
            status: null
          status: null
        status: null
      properties:
        region_infos:
          items:
            $ref: '#/components/schemas/CMEKRegionInfo'
          type: array
        status:
          $ref: '#/components/schemas/CMEKStatus'
      type: object
    CMEKCustomerAction:
      description: |-
        CMEKCustomerAction enumerates the actions a customer can take on a cluster
        that has been enabled for CMEK.
      enum:
      - REVOKE
      type: string
    CMEKKeyInfo:
      description: |-
        CMEKKeyInfo contains the status of a customer-provided key alongside the
        specification.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        user_message: user_message
        spec:
          auth_principal: auth_principal
          type: null
          uri: uri
        status: null
      properties:
        created_at:
          format: date-time
          type: string
        spec:
          $ref: '#/components/schemas/CMEKKeySpecification'
        status:
          $ref: '#/components/schemas/CMEKStatus'
        updated_at:
          format: date-time
          type: string
        user_message:
          type: string
      type: object
    CMEKKeySpecification:
      description: "CMEKKeySpecification contains all the details necessary to use\
        \ a customer-provided\nencryption key.\n\nThis involves the type/location\
        \ of the key and the principal to authenticate as \nwhen accessing it."
      example:
        auth_principal: auth_principal
        type: null
        uri: uri
      properties:
        auth_principal:
          type: string
        type:
          $ref: '#/components/schemas/CMEKKeyType'
        uri:
          type: string
      type: object
    CMEKKeyType:
      enum:
      - AWS_KMS
      - GCP_CLOUD_KMS
      - NULL_KMS
      - AZURE_KEY_VAULT
      title: CMEKKeyType enumerates types of customer-managed keys
      type: string
    CMEKRegionInfo:
      description: "CMEKRegionInfo contains the status of CMEK within a region.\n\n\
        This includes current and past key specifications used within the region,\
        \ \nas well as the status of those specifications"
      example:
        region: region
        key_infos:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          user_message: user_message
          spec:
            auth_principal: auth_principal
            type: null
            uri: uri
          status: null
        - updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          user_message: user_message
          spec:
            auth_principal: auth_principal
            type: null
            uri: uri
          status: null
        status: null
      properties:
        key_infos:
          items:
            $ref: '#/components/schemas/CMEKKeyInfo'
          type: array
        region:
          type: string
        status:
          $ref: '#/components/schemas/CMEKStatus'
      type: object
    CMEKRegionSpecification:
      description: |-
        CMEKRegionSpecification declares the customer-provided key specification that
        should be used in a given region.
      properties:
        key_spec:
          $ref: '#/components/schemas/CMEKKeySpecification'
        region:
          type: string
      type: object
    CMEKStatus:
      description: |-
        CMEKStatus describes the current status of CMEK for an entire CRDB cluster
        or a CMEK key within a region.

         - DISABLED: DISABLED corresponds to the state of a cluster or region-level key when
        CMEK has finished being disabled. By default, CMEK will be disabled for
        new clusters.
         - DISABLING: DISABLING corresponds to the state of a cluster or region-level key when
        CMEK is in the process of being disabled.
         - DISABLE_FAILED: DISABLE_FAILED corresponds to the state of a cluster or region-level key
        when CMEK has failed to be disabled.
         - ENABLED: ENABLED corresponds to the state of a cluster or region-level key when
        CMEK is enabled.
         - ENABLING: ENABLING corresponds to the state of a cluster or region-level key when
        CMEK is in the process of being enabled.
         - ENABLE_FAILED: ENABLE_FAILED corresponds to the state of a cluster or region-level key
        when CMEK has failed to be enabled.
         - ROTATING: ROTATING corresponds to the state of a cluster or region when the a new
        spec is in the process of being enabled while an existing spec is being
        disabled.
         - ROTATE_FAILED: ROTATE_FAILED corresponds to the state of a cluster or region if there was
        a failure to update from one CMEK spec to another.
         - REVOKED: REVOKED corresponds to the state of a cluster or region-level key when the
        customer has revoked CockroachLab's permissions for their key.
         - REVOKING: REVOKING corresponds to the state of a cluster or region-level key when
        CMEK is in the process of being revoked.
         - REVOKE_FAILED: REVOKE_FAILED corresponds to the state of a cluster or region-level key
        when CMEK has failed to be revoked.
      enum:
      - DISABLED
      - DISABLING
      - DISABLE_FAILED
      - ENABLED
      - ENABLING
      - ENABLE_FAILED
      - ROTATING
      - ROTATE_FAILED
      - REVOKED
      - REVOKING
      - REVOKE_FAILED
      type: string
    ClientCACertInfo:
      example:
        x509_pem_cert: x509_pem_cert
        status: null
      properties:
        status:
          $ref: '#/components/schemas/ClientCACertStatus'
        x509_pem_cert:
          type: string
      type: object
    ClientCACertStatus:
      description: |2-
         - NOT_SET: NOT_SET indicates a client CA cert is not set on the cluster.
        New clusters won't have a client CA cert set.
         - IS_SET: IS_SET indicates a client CA cert is set on the cluster.
         - PENDING: PENDING indicates a client CA cert update is in flight on the cluster.
         - FAILED: FAILED indicates a client CA cert update was attempted, but failed.
      enum:
      - NOT_SET
      - IS_SET
      - PENDING
      - FAILED
      type: string
    CloudProvider.Type:
      description: |2-
         - GCP: The Google Cloud Platform cloud provider.
         - AWS: The Amazon Web Services cloud provider.
         - AZURE: The Azure cloud provider.
      enum:
      - GCP
      - AWS
      - AZURE
      type: string
    CloudProviderRegion:
      example:
        distance: 0.8008282
        provider: null
        name: name
        serverless: true
        location: location
      properties:
        distance:
          description: "Distance in miles, based on client IP address."
          format: float
          type: number
        location:
          type: string
        name:
          type: string
        provider:
          $ref: '#/components/schemas/CloudProvider.Type'
        serverless:
          type: boolean
      required:
      - distance
      - location
      - name
      - provider
      - serverless
      type: object
    CloudWatchMetricExportInfo:
      example:
        target_region: target_region
        log_group_name: log_group_name
        cluster_id: cluster_id
        role_arn: role_arn
        user_message: user_message
        external_id: external_id
        status: null
      properties:
        cluster_id:
          type: string
        external_id:
          description: |-
            external_id, if set, is included when assuming the IAM role. Supported for
            Advanced clusters only.
          type: string
        log_group_name:
          description: log_group_name is the customized log group name.
          type: string
        role_arn:
          description: |-
            role_arn is the IAM role used to upload metric segments to the
            target AWS account.
          type: string
        status:
          $ref: '#/components/schemas/MetricExportStatus.Type'
        target_region:
          description: |-
            target_region specifies the specific AWS region that the metrics will
            be exported to.
          type: string
        user_message:
          type: string
      required:
      - cluster_id
      - role_arn
      title: CloudWatchMetricExportInfo
      type: object
    Cluster:
      example:
        account_id: ""
        cidr_range: 172.28.0.0/14
        cloud_provider: GCP
        cockroach_version: v21.2.4
        config:
          serverless:
            routing_id: example-cluster-1533
            upgrade_type: AUTOMATIC
            usage_limits:
              provisioned_virtual_cpus: "2"
        created_at: 2022-03-22T20:23:11.285067Z
        creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
        id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
        labels:
          cost_center: "12345"
          env: prod
        name: example-cluster
        operation_status: UNSPECIFIED
        plan: STANDARD
        regions:
        - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
          name: us-central1
          node_count: 0
          private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
          sql_dns: free-tier7.gcp-us-central1.crdb.io
          ui_dns: ""
        state: CREATED
        updated_at: 2022-03-22T20:23:11.879593Z
        upgrade_status: UPGRADE_AVAILABLE
      properties:
        account_id:
          description: |-
            account_id is a cloud provider account ID representing the CockroachDB
            cluster. This ID can be used for setting up trust relationships with cloud
            resources. For GCP clusters, this value is a project name that can be used
            to construct principal service account names for authentication.
          type: string
        azure_cluster_identity_client_id:
          description: |-
            The client ID of the Azure cluster identity associated with this cluster.
            This field is only populated for clusters deployed on Azure and is used
            to support customer-managed encryption keys (CMEK).
          type: string
        cidr_range:
          description: |-
            cidr_range is the IPv4 range in CIDR format that will be used by the
            cluster. It is only set on GCP Advanced tier clusters and is otherwise
            empty.
          type: string
        cloud_provider:
          $ref: '#/components/schemas/CloudProvider.Type'
        cockroach_version:
          type: string
        config:
          $ref: '#/components/schemas/ClusterConfig'
        created_at:
          format: date-time
          type: string
        creator_id:
          type: string
        delete_protection:
          $ref: '#/components/schemas/DeleteProtectionState.Type'
        deleted_at:
          format: date-time
          type: string
        egress_traffic_policy:
          $ref: '#/components/schemas/EgressTrafficPolicy.Type'
        id:
          type: string
        labels:
          additionalProperties:
            type: string
          description: labels are key-value pairs used to organize and categorize
            resources.
          type: object
        name:
          type: string
        network_visibility:
          $ref: '#/components/schemas/NetworkVisibility.Type'
        operation_status:
          $ref: '#/components/schemas/ClusterStatus.Type'
        parent_id:
          description: |-
            Preview: The parent ID is a folder ID. A "root" valued parent ID
            refers to a cluster at the root level.
          type: string
        plan:
          $ref: '#/components/schemas/Plan.Type'
        regions:
          items:
            $ref: '#/components/schemas/Region'
          type: array
        sql_dns:
          description: sql_dns is the DNS name of SQL interface of the cluster.
          type: string
        state:
          $ref: '#/components/schemas/ClusterState.Type'
        updated_at:
          format: date-time
          type: string
        upgrade_status:
          $ref: '#/components/schemas/ClusterUpgradeStatus.Type'
      required:
      - cidr_range
      - cloud_provider
      - cockroach_version
      - config
      - creator_id
      - id
      - labels
      - name
      - operation_status
      - plan
      - regions
      - state
      - upgrade_status
      type: object
    ClusterConfig:
      properties:
        dedicated:
          $ref: '#/components/schemas/DedicatedHardwareConfig'
        serverless:
          $ref: '#/components/schemas/ServerlessClusterConfig'
      type: object
    ClusterDisruptionInfo:
      example:
        regional_disruptor_specifications:
        - is_whole_region: true
          pods:
          - pods
          - pods
          azs:
          - azs
          - azs
          region_code: region_code
        - is_whole_region: true
          pods:
          - pods
          - pods
          azs:
          - azs
          - azs
          region_code: region_code
      properties:
        regional_disruptor_specifications:
          description: |-
            regional_disruptor_specifications represents a region that is disrupted.
            If there are no entries, it means the cluster is not disrupted.
          items:
            $ref: '#/components/schemas/RegionalDisruptorSpecification'
          type: array
      required:
      - regional_disruptor_specifications
      type: object
    ClusterMajorVersion:
      description: "For more information about CockroachDB cluster version support,\
        \ see https://www.cockroachlabs.com/docs/releases/release-support-policy.html"
      example:
        support_status: null
        support_end: 2000-01-23T04:56:07.000+00:00
        release_type: null
        allowed_upgrades:
        - allowed_upgrades
        - allowed_upgrades
        version: version
      properties:
        allowed_upgrades:
          items:
            type: string
          type: array
        release_type:
          $ref: '#/components/schemas/ReleaseType.Type'
        support_end:
          format: date-time
          type: string
        support_status:
          $ref: '#/components/schemas/ClusterMajorVersionSupportStatus.Type'
        version:
          type: string
      required:
      - allowed_upgrades
      - release_type
      - support_end
      - support_status
      - version
      type: object
    ClusterMajorVersionSupportStatus.Type:
      enum:
      - UNSUPPORTED
      - SUPPORTED
      - PREVIEW
      type: string
    ClusterState.Type:
      description: |2-
         - LOCKED: An exclusive operation is being performed on this cluster.
        Other operations should not proceed if they did not set a cluster into the LOCKED state.
      enum:
      - CREATING
      - CREATED
      - CREATION_FAILED
      - DELETED
      - LOCKED
      type: string
    ClusterStatus.Type:
      enum:
      - UNSPECIFIED
      - CRDB_MAJOR_UPGRADE_RUNNING
      - CRDB_MAJOR_UPGRADE_FAILED
      - CRDB_MAJOR_ROLLBACK_RUNNING
      - CRDB_MAJOR_ROLLBACK_FAILED
      - CRDB_PATCH_RUNNING
      - CRDB_PATCH_FAILED
      - CRDB_SCALE_RUNNING
      - CRDB_SCALE_FAILED
      - MAINTENANCE_RUNNING
      - CRDB_INSTANCE_UPDATE_RUNNING
      - CRDB_INSTANCE_UPDATE_FAILED
      - CRDB_EDIT_CLUSTER_RUNNING
      - CRDB_EDIT_CLUSTER_FAILED
      - CRDB_CMEK_OPERATION_RUNNING
      - CRDB_CMEK_OPERATION_FAILED
      - TENANT_RESTORE_RUNNING
      - TENANT_RESTORE_FAILED
      - CRDB_LOG_EXPORT_OPERATION_RUNNING
      - CRDB_LOG_EXPORT_OPERATION_FAILED
      - CRDB_CLUSTER_DISRUPTION_RUNNING
      - CRDB_CLUSTER_DISRUPTION_FAILED
      - CRDB_REPAVE_RUNNING
      - CRDB_REPAVE_FAILED
      - CRDB_CUSTOM_CLIENT_CA_RUNNING
      - CRDB_CUSTOM_CLIENT_CA_FAILED
      - DEDICATED_FULL_CLUSTER_RESTORE_RUNNING
      - DEDICATED_FULL_CLUSTER_RESTORE_FAILED
      type: string
    ClusterUpgradeStatus.Type:
      description: |2-
         - FINALIZED: The cluster is running the latest available CockroachDB version, and all upgrades have been finalized.
         - MAJOR_UPGRADE_RUNNING: An major version upgrade is currently in progress.
         - UPGRADE_AVAILABLE: An upgrade is available. If preview builds are enabled for the parent organization, this could indicate that a preview upgrade is available.
         - PENDING_FINALIZATION: An upgrade is complete, but pending finalization. Upgrades are automatically finalized after 72 hours. For more information, see https://www.cockroachlabs.com/docs/stable/upgrade-cockroach-version.html
         - ROLLBACK_RUNNING: A rollback operation is currently in progress.
      enum:
      - FINALIZED
      - MAJOR_UPGRADE_RUNNING
      - UPGRADE_AVAILABLE
      - PENDING_FINALIZATION
      - ROLLBACK_RUNNING
      type: string
    ClusterVersionDeferral:
      description: |-
        ClusterVersionDeferral specifies whether automatic patch version upgrades are applied
        immediately or deferred. If upgrades are deferred, the cluster will be automatically
        upgraded to each patch version 60 days after the version is released to CockroachDB Cloud.
      example:
        deferral_policy: FIXED_DEFERRAL
      properties:
        deferral_policy:
          $ref: '#/components/schemas/ClusterVersionDeferralPolicy.Type'
      required:
      - deferral_policy
      title: ClusterVersionDeferral
      type: object
    ClusterVersionDeferralPolicy.Type:
      enum:
      - NOT_DEFERRED
      - FIXED_DEFERRAL
      type: string
    ConnectionStringParameters:
      description: Individual parameters used to create a connection string.
      example:
        Username: Username
        Port: Port
        Database: Database
        Host: Host
      properties:
        Database:
          type: string
        Host:
          type: string
        Port:
          type: string
        Username:
          type: string
      required:
      - Database
      - Host
      - Port
      type: object
    CreateApiKeyRequest:
      example:
        name: example name
        service_account_id: 1234abcd-1234-1234-abcd-12345678abcd
      properties:
        name:
          description: The name of the api key.
          example: example name
          type: string
        service_account_id:
          description: The ID of the service account to create the api key for.
          example: 1234abcd-1234-1234-abcd-12345678abcd
          format: uuid
          type: string
      required:
      - name
      - service_account_id
      type: object
    CreateApiKeyResponse:
      example:
        api_key:
          created_at: 2022-03-22T20:23:11.285067Z
          id: CCDB1_12345abcdefGHIJKLMnopq
          name: example name
          service_account_id: 1234abcd-1234-1234-abcd-12345678abcd
        secret: CCDB1_12345abcdefGHIJKLMnopq_NkdXLI9d81Mnx3djs45iwPfgtnaRv0XCh0Z9047K
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKey'
        secret:
          description: |-
            The full api key. This is the value that would be passed in the
            Authorization header. It is not stored by the backend and is therefore not
            recoverable if lost.
          example: CCDB1_12345abcdefGHIJKLMnopq_NkdXLI9d81Mnx3djs45iwPfgtnaRv0XCh0Z9047K
          format: password
          type: string
      required:
      - api_key
      - secret
      type: object
    CreateClusterRequest:
      example:
        name: test-cluster
        plan: STANDARD
        provider: GCP
        spec:
          serverless:
            regions:
            - us-central1
            usage_limits:
              provisioned_virtual_cpus: "2"
      properties:
        name:
          description: |-
            Name must be 6-20 characters in length and can include numbers,
            lowercase letters, and dashes (but no leading or trailing dashes).
          type: string
        provider:
          $ref: '#/components/schemas/CloudProvider.Type'
        spec:
          $ref: '#/components/schemas/CreateClusterSpecification'
      required:
      - name
      - provider
      - spec
      title: CreateClusterRequest
      type: object
    CreateClusterSpecification:
      properties:
        dedicated:
          $ref: '#/components/schemas/DedicatedClusterCreateSpecification'
        delete_protection:
          $ref: '#/components/schemas/DeleteProtectionState.Type'
        labels:
          additionalProperties:
            type: string
          description: labels are key-value pairs used to organize and categorize
            resources.
          type: object
        parent_id:
          description: |-
            Preview: The parent ID is a folder ID. An empty string or "root"
            will create a cluster at the root level.
          type: string
        plan:
          $ref: '#/components/schemas/Plan.Type'
        serverless:
          $ref: '#/components/schemas/ServerlessClusterCreateSpecification'
      type: object
    CreateFolderRequest:
      example:
        name: folder_name
        parent_id: 12345678-1234-1234-1234-123456789012
      properties:
        labels:
          additionalProperties:
            type: string
          description: labels are key-value pairs used to organize and categorize
            resources.
          type: object
        name:
          type: string
        parent_id:
          description: |-
            The parent ID is a folder ID. An empty string or "root"
            will create a folder at the root level.
          type: string
      required:
      - name
      title: CreateFolderRequest
      type: object
    CreateGroupRequest:
      example:
        displayName: Test SCIM
        members: []
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:Group
      properties:
        displayName:
          type: string
        externalId:
          type: string
        members:
          items:
            $ref: '#/components/schemas/ScimResource'
          type: array
        schemas:
          items:
            type: string
          type: array
      required:
      - displayName
      - schemas
      title: CreateGroupRequest
      type: object
    CreatePhysicalReplicationStreamRequest:
      example:
        standby_cluster_id: standby_cluster_id
        primary_cluster_id: primary_cluster_id
      properties:
        primary_cluster_id:
          description: |-
            primary_cluster_id is the ID of the cluster that is being
            replicated.
          type: string
        standby_cluster_id:
          description: standby_cluster_id is the ID of the cluster that data is being
            replicated to.
          type: string
      required:
      - primary_cluster_id
      - standby_cluster_id
      type: object
    CreateServiceAccountRequest:
      example:
        description: ""
        name: new name
        roles:
        - name: CLUSTER_ADMIN
          resource:
            type: ORGANIZATION
      properties:
        description:
          description: description of the service account.
          type: string
        name:
          description: name of the service account.
          type: string
        roles:
          description: roles that are assigned to the service account.
          items:
            $ref: '#/components/schemas/BuiltInRole'
          type: array
      required:
      - description
      - name
      - roles
      type: object
    CreateUserRequest:
      example:
        active: true
        displayName: Carl Roach
        emails:
        - primary: true
          type: work
          value: croach@example.com
        externalId: 11ujl29u0le5T6Aj10h9
        name:
          familyName: Roach
          givenName: Carl
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        userName: croach@example.com
      properties:
        active:
          type: boolean
        displayName:
          type: string
        emails:
          items:
            $ref: '#/components/schemas/ScimEmail'
          type: array
        externalId:
          type: string
        name:
          $ref: '#/components/schemas/ScimName'
        schemas:
          items:
            type: string
          type: array
        userName:
          type: string
      required:
      - emails
      - schemas
      title: CreateUserRequest
      type: object
    CreateUserResponse:
      description: Response when creating a new user via SCIM 2.0
      example:
        emails:
        - display: display
          type: type
          value: value
          primary: true
        - display: display
          type: type
          value: value
          primary: true
        displayName: displayName
        meta:
          created: created
          location: location
          lastModified: lastModified
          resourceType: resourceType
        schemas:
        - schemas
        - schemas
        name:
          familyName: familyName
          givenName: givenName
        active: true
        externalId: externalId
        groups:
        - ref: ref
          display: display
          type: type
          value: value
        - ref: ref
          display: display
          type: type
          value: value
        id: id
        userName: userName
      properties:
        active:
          type: boolean
        displayName:
          type: string
        emails:
          items:
            $ref: '#/components/schemas/ScimEmail'
          type: array
        externalId:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/ScimResource'
          type: array
        id:
          type: string
        meta:
          $ref: '#/components/schemas/ScimMetadata'
        name:
          $ref: '#/components/schemas/ScimName'
        schemas:
          items:
            type: string
          type: array
        userName:
          type: string
      required:
      - id
      - schemas
      title: CreateUserResponse
      type: object
    Currency.Type:
      enum:
      - USD
      - CRDB_CLOUD_CREDITS
      type: string
    CurrencyAmount:
      example:
        amount: 0.8008281904610115
        currency: null
      properties:
        amount:
          description: |-
            amount is the quantity of currency. Internally, currency amounts are tracked
            and stored using an arbitrary-precision decimal representation, but are serialized
            as 64-bit floating point numbers. There may be minor rounding discrepancies
            when parsed as a 32-bit float.
          format: double
          type: number
        currency:
          $ref: '#/components/schemas/Currency.Type'
      type: object
    Database:
      example:
        table_count: 0
        name: name
      properties:
        name:
          type: string
        table_count:
          format: int64
          type: integer
      required:
      - name
      title: Database
      type: object
    DatadogMetricExportInfo:
      example:
        cluster_id: cluster_id
        site: null
        api_key: api_key
        user_message: user_message
        status: null
      properties:
        api_key:
          description: api_key is the last 4 digits of a Datadog API key.
          type: string
        cluster_id:
          type: string
        site:
          $ref: '#/components/schemas/DatadogSite.Type'
        status:
          $ref: '#/components/schemas/MetricExportStatus.Type'
        user_message:
          type: string
      required:
      - cluster_id
      - site
      title: DatadogMetricExportInfo
      type: object
    DatadogSite.Type:
      enum:
      - US1
      - US3
      - US5
      - US1_GOV
      - EU1
      type: string
    DedicatedClusterCreateSpecification:
      properties:
        cidr_range:
          description: |-
            cidr_range is the IPv4 range in CIDR format that will be used by the
            cluster. This is supported only on GCP, and must have a subnet mask no larger
            than /19. Defaults to "172.28.0.0/14".
          type: string
        cockroach_version:
          description: |-
            The CockroachDB major version for the cluster. i.e. v24.1  The latest
            version is used if omitted. The version passed must be one of the currently
            supported versions.
          type: string
        hardware:
          $ref: '#/components/schemas/DedicatedHardwareCreateSpecification'
        network_visibility:
          $ref: '#/components/schemas/NetworkVisibility.Type'
        region_nodes:
          additionalProperties:
            format: int32
            type: integer
          description: |-
            Region keys should match the cloud provider's zone code.
            For example, for Oregon, set region_name to "us-west2" for
            GCP and "us-west-2" for AWS. Values represent the node count.
          type: object
        restrict_egress_traffic:
          description: |-
            Preview: restrict_egress_traffic if set, results in an egress traffic policy of
            default-deny at creation time.
          type: boolean
        supports_cluster_virtualization:
          title: |-
            supports_cluster_virtualization specifies whether an Advanced
            cluster is started with a virtual cluster architecture. This field
            is restricted to Limited Access usage; see our documentation for
            details:
            https://www.cockroachlabs.com/docs/stable/cluster-virtualization-overview
          type: boolean
      required:
      - hardware
      - region_nodes
      type: object
    DedicatedClusterUpdateSpecification:
      properties:
        cmek_region_specs:
          description: |-
            This field should contain the CMEK specs for newly added regions. If a
            CMEK spec is provided for an existing region, the request is invalid and
            will fail.
          items:
            $ref: '#/components/schemas/CMEKRegionSpecification'
          type: array
        hardware:
          $ref: '#/components/schemas/DedicatedHardwareUpdateSpecification'
        region_nodes:
          additionalProperties:
            format: int32
            type: integer
          description: |-
            Region keys should match the cloud provider's zone code.
            For example, for Oregon, set region_name to "us-west2" for
            GCP and "us-west-2" for AWS. Values represent the node count.
          type: object
      type: object
    DedicatedHardwareConfig:
      properties:
        disk_iops:
          description: |-
            disk_iops is the number of disk I/O operations per second that are
            permitted on each node in the cluster. Zero indicates the cloud
            provider-specific default.
          format: int32
          type: integer
        machine_type:
          description: |-
            machine_type is the machine type identifier within the given cloud
            provider, ex. m5.xlarge, n2-standard-4.
          type: string
        memory_gib:
          description: memory_gib is the memory GiB per node in the cluster.
          format: float
          type: number
        num_virtual_cpus:
          description: num_virtual_cpus is the number of virtual CPUs per node in
            the cluster.
          format: int32
          type: integer
        storage_gib:
          description: storage_gib is the number of storage GiB per node in the cluster.
          format: int32
          type: integer
      required:
      - disk_iops
      - machine_type
      - memory_gib
      - num_virtual_cpus
      - storage_gib
      type: object
    DedicatedHardwareCreateSpecification:
      properties:
        disk_iops:
          description: |-
            disk_iops is the number of disk I/O operations per second that are
            permitted on each node in the cluster. Zero indicates the cloud
            provider-specific default. Only available for AWS clusters.
          format: int32
          type: integer
        machine_spec:
          $ref: '#/components/schemas/DedicatedMachineTypeSpecification'
        storage_gib:
          description: |-
            storage_gib is the number of storage GiB per node in the cluster.
            Zero indicates default to the lowest storage GiB available given machine specs.
          format: int32
          type: integer
      required:
      - machine_spec
      - storage_gib
      type: object
    DedicatedHardwareUpdateSpecification:
      properties:
        disk_iops:
          description: |-
            disk_iops is the number of disk I/O operations per second that are
            permitted on each node in the cluster. Zero indicates the cloud
            provider-specific default. Only available for AWS clusters.
          format: int32
          type: integer
        machine_spec:
          $ref: '#/components/schemas/DedicatedMachineTypeSpecification'
        storage_gib:
          description: storage_gib is the number of storage GiB per node in the cluster.
          format: int32
          type: integer
      type: object
    DedicatedMachineTypeSpecification:
      properties:
        machine_type:
          description: |-
            machine_type is the machine type identifier within the given cloud
            provider, ex. m5.xlarge, n2-standard-4.
          type: string
        num_virtual_cpus:
          description: |-
            num_virtual_cpus may be used to automatically select a machine type
            according to the desired number of vCPUs.
          format: int32
          type: integer
      type: object
    DeleteEgressRuleResponse:
      example:
        Rule:
          crl_managed: true
          cluster_id: cluster_id
          paths:
          - paths
          - paths
          destination: destination
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          state: state
          ports:
          - 0
          - 0
          type: type
      properties:
        Rule:
          $ref: '#/components/schemas/EgressRule'
      required:
      - rule
      title: DeleteEgressRuleResponse
      type: object
    DeleteMetricExportResponse:
      example:
        cluster_id: cluster_id
        status: null
      properties:
        cluster_id:
          type: string
        status:
          $ref: '#/components/schemas/MetricExportStatus.Type'
      required:
      - cluster_id
      title: DeleteMetricExportResponse
      type: object
    DeleteProtectionState.Type:
      enum:
      - ENABLED
      - DISABLED
      type: string
    EditEgressRuleResponse:
      example:
        Rule:
          crl_managed: true
          cluster_id: cluster_id
          paths:
          - paths
          - paths
          destination: destination
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          state: state
          ports:
          - 0
          - 0
          type: type
      properties:
        Rule:
          $ref: '#/components/schemas/EgressRule'
      required:
      - rule
      title: EditEgressRuleResponse
      type: object
    EgressPrivateEndpoint:
      example:
        target_service_type: null
        id: id
        state: null
        region: region
        target_service_identifier: target_service_identifier
        endpoint_connection_id: endpoint_connection_id
        domain_names:
        - domain_names
        - domain_names
        endpoint_address: endpoint_address
      properties:
        domain_names:
          description: domain_names are the domain names associated with the egress
            private endpoint.
          items:
            type: string
          type: array
        endpoint_address:
          title: |-
            endpoint_address is the cloud-provider generated address (either
            IP address or DNS name) through which the endpoint is accessible
          type: string
        endpoint_connection_id:
          description: |-
            endpoint_connection_id is the cloud-specific id for egress private endpoints.
            This connection ID is visible in CRL and CSP consoles as "VPC endpoint ID" and
            is used to uniquely identify the endpoint in external configurations.
          type: string
        id:
          description: |-
            A generated ID that uniquely identifies the egress_private_endpoint
            for use with the CockroachDB Cloud API. This ID is generic and not specific
            to the cloud provider.
          type: string
        region:
          description: region represents the cloud region that the endpoint was created
            in.
          type: string
        state:
          $ref: '#/components/schemas/EgressPrivateEndpointState.Type'
        target_service_identifier:
          description: |-
            target_service_identifier represents the identifier of the target service.
            User-visible in CRL and CSP consoles as the "thing" the user is telling us to connect to,
            i.e. Service Name for AWS, Service Attachment for GCP, or ARN for AWS MSK.
          type: string
        target_service_type:
          $ref: '#/components/schemas/EgressPrivateEndpointTargetServiceType.Type'
      required:
      - domain_names
      - endpoint_address
      - endpoint_connection_id
      - id
      - region
      - state
      - target_service_identifier
      - target_service_type
      title: EgressPrivateEndpoint
      type: object
    EgressPrivateEndpointState.Type:
      enum:
      - PENDING
      - PENDING_ACCEPTANCE
      - AVAILABLE
      - DELETING
      - DELETED
      - REJECTED
      - FAILED
      - EXPIRED
      type: string
    EgressPrivateEndpointTargetServiceType.Type:
      enum:
      - PRIVATE_SERVICE
      - MSK_SASL_SCRAM
      - MSK_SASL_IAM
      - MSK_TLS
      title: |-
        - UNSPECIFIED: UNSPECIFIED represents an unspecified target service type.
         - PRIVATE_SERVICE: PRIVATE_SERVICE represents any private service, such as a GCP service attachment, or an AWS VPC endpoint service.
         - MSK_SASL_SCRAM: MSK_SASL_SCRAM represents the managed Kafka service in AWS, with SASL/SCRAM auth
         - MSK_SASL_IAM: MSK_SASL_IAM represents the managed Kafka service in AWS, with SASL/IAM auth
         - MSK_TLS: MSK_TLS represents the managed Kafka service in AWS, with TLS auth
      type: string
    EgressRule:
      description: EgressRule represents a network egress rule.
      example:
        crl_managed: true
        cluster_id: cluster_id
        paths:
        - paths
        - paths
        destination: destination
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        state: state
        ports:
        - 0
        - 0
        type: type
      properties:
        cluster_id:
          description: cluster_id identifies the cluster to which this egress rule
            applies.
          type: string
        created_at:
          description: |-
            created_at is the time at which the time at which the egress rule was
            created.
          format: date-time
          type: string
        crl_managed:
          description: |-
            crl_managed indicates this egress rule is managed by CockroachDB Cloud
            services. This field is set by the server.
          type: boolean
        description:
          description: description is a longer that serves to document the rules purpose.
          type: string
        destination:
          description: |-
            destination is the endpoint (or subnetwork if CIDR) to which traffic is
            allowed.
          type: string
        id:
          description: id uniquely identifies this egress rule.
          type: string
        name:
          description: name is the name of the egress rule.
          type: string
        paths:
          description: |-
            Deprecated: This field is ignored and will be removed in the next version.
            paths are the allowed URL paths. Only valid if Type="FQDN".
          items:
            type: string
          type: array
        ports:
          description: |-
            ports are the allowed ports for TCP protocol. If Empty, all ports are
            allowed.
          items:
            format: int32
            type: integer
          type: array
        state:
          description: state indicates the state of the egress rule.
          type: string
        type:
          description: |-
            type classifies the destination field. Valid types include: "FQDN",
            "CIDR".
          type: string
      required:
      - cluster_id
      - crl_managed
      - description
      - destination
      - id
      - name
      - state
      - type
      title: EgressRule
      type: object
    EgressTrafficPolicy.Type:
      description: |2-
         - UNSPECIFIED: UNSPECIFIED signifies the egress traffic policy is unspecified.
         - ERROR: ERROR signifies there has been an internal server error during
        an update to the egress traffic policy.
         - ALLOW_ALL: ALLOW_ALL signifies all outbound connections from CockroachDB are allowed.
         - DEFAULT_DENY: DEFAULT_DENY signifies that CockroachDB can only initiate network
        connections to destinations explicitly allowed by the user or CockroachDB
        Cloud operators.
         - UPDATING: UPDATING signifies the egress traffic policy is updating.
      enum:
      - UNSPECIFIED
      - ERROR
      - ALLOW_ALL
      - DEFAULT_DENY
      - UPDATING
      type: string
    FolderResource:
      description: "FolderResource describes a resource, and includes info about its\
        \ lineage (parent/ancestors)."
      example:
        path:
        - name: name
          id: id
        - name: name
          id: id
        parent_id: parent_id
        organization_id: organization_id
        name: name
        resource_type: null
        resource_id: resource_id
        labels:
          key: labels
      properties:
        labels:
          additionalProperties:
            type: string
          description: labels are key-value pairs used to organize and categorize
            resources.
          type: object
        name:
          description: name is the resource's name.
          type: string
        organization_id:
          description: organization_id is the id of the organization this resource
            belongs to.
          type: string
        parent_id:
          description: |-
            parent_id is the id of the resource's parent folder.
            "root" represents a root level resource.
          type: string
        path:
          description: path contains the ids and names of ancestors that make up the
            resource's lineage.
          items:
            $ref: '#/components/schemas/PathSegment'
          type: array
        resource_id:
          description: resource_id is the resource's id.
          type: string
        resource_type:
          $ref: '#/components/schemas/FolderResourceType.Type'
      required:
      - labels
      - name
      - organization_id
      - parent_id
      - path
      - resource_id
      - resource_type
      title: FolderResource
      type: object
    FolderResourceList:
      description: FolderResourceList contains a list of resources.
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        resources:
        - path:
          - name: name
            id: id
          - name: name
            id: id
          parent_id: parent_id
          organization_id: organization_id
          name: name
          resource_type: null
          resource_id: resource_id
          labels:
            key: labels
        - path:
          - name: name
            id: id
          - name: name
            id: id
          parent_id: parent_id
          organization_id: organization_id
          name: name
          resource_type: null
          resource_id: resource_id
          labels:
            key: labels
      properties:
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        resources:
          items:
            $ref: '#/components/schemas/FolderResource'
          type: array
      type: object
    FolderResourceType.Type:
      enum:
      - FOLDER
      - CLUSTER
      type: string
    GetAllRolesForUserResponse:
      example:
        group_roles:
        - role:
            resource:
              id: id
              type: null
            name: null
          group_names:
          - group_names
          - group_names
        - role:
            resource:
              id: id
              type: null
            name: null
          group_names:
          - group_names
          - group_names
        roles:
        - resource:
            id: id
            type: null
          name: null
        - resource:
            id: id
            type: null
          name: null
      properties:
        group_roles:
          items:
            $ref: '#/components/schemas/BuiltInFromGroups'
          type: array
        roles:
          items:
            $ref: '#/components/schemas/BuiltInRole'
          type: array
      type: object
    GetConnectionStringResponse:
      example:
        params:
          Username: Username
          Port: Port
          Database: Database
          Host: Host
        connection_string: connection_string
      properties:
        connection_string:
          description: connection_string contains the full connection string with
            parameters formatted inline.
          type: string
        params:
          $ref: '#/components/schemas/ConnectionStringParameters'
      required:
      - connection_string
      - params
      type: object
    GetEgressPrivateEndpointResponse:
      example:
        egress_private_endpoint:
          target_service_type: null
          id: id
          state: null
          region: region
          target_service_identifier: target_service_identifier
          endpoint_connection_id: endpoint_connection_id
          domain_names:
          - domain_names
          - domain_names
          endpoint_address: endpoint_address
      properties:
        egress_private_endpoint:
          $ref: '#/components/schemas/EgressPrivateEndpoint'
      required:
      - egress_private_endpoints
      title: GetEgressPrivateEndpointResponse
      type: object
    GetEgressRuleResponse:
      example:
        rule:
          crl_managed: true
          cluster_id: cluster_id
          paths:
          - paths
          - paths
          destination: destination
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          state: state
          ports:
          - 0
          - 0
          type: type
      properties:
        rule:
          $ref: '#/components/schemas/EgressRule'
      required:
      - rule
      title: GetEgressRuleResponse
      type: object
    GetGroupsRequest:
      example:
        filter: filter
        startIndex: 6
        count: 0
        attributes: attributes
        excludedAttributes: excludedAttributes
      properties:
        attributes:
          type: string
        count:
          description: |-
            The maximum number of resources to return. If omitted, defaults to 20.
            If set to 0, the response will contain no resources but will include metadata such as
            `totalResults`, complying with [RFC 7644, Section 3.4.2.4: Pagination](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.4).
          format: int32
          type: integer
        excludedAttributes:
          type: string
        filter:
          type: string
        startIndex:
          description: |-
            The 1-based index of the first resource to return in the response.
            If omitted or less than 1, defaults to 1. This behavior complies with [RFC 7644, Section 3.4.2.4: Pagination](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.4).
          format: int32
          type: integer
      title: GetGroupsRequest
      type: object
    GetGroupsResponse:
      example:
        startIndex: 6
        totalResults: 1
        itemsPerPage: 0
        schemas:
        - schemas
        - schemas
        Resources:
        - displayName: displayName
          meta:
            created: created
            location: location
            lastModified: lastModified
            resourceType: resourceType
          members:
          - ref: ref
            display: display
            type: type
            value: value
          - ref: ref
            display: display
            type: type
            value: value
          schemas:
          - schemas
          - schemas
          externalId: externalId
          id: id
        - displayName: displayName
          meta:
            created: created
            location: location
            lastModified: lastModified
            resourceType: resourceType
          members:
          - ref: ref
            display: display
            type: type
            value: value
          - ref: ref
            display: display
            type: type
            value: value
          schemas:
          - schemas
          - schemas
          externalId: externalId
          id: id
      properties:
        Resources:
          items:
            $ref: '#/components/schemas/ScimGroup'
          type: array
        itemsPerPage:
          format: int32
          type: integer
        schemas:
          items:
            type: string
          type: array
        startIndex:
          format: int32
          type: integer
        totalResults:
          format: int32
          type: integer
      required:
      - schemas
      - totalResults
      title: GetGroupsResponse
      type: object
    GetPersonUsersByEmailResponse:
      example:
        user:
          id: id
          email: email
      properties:
        user:
          $ref: '#/components/schemas/PersonUserInfo'
      required:
      - users
      type: object
    GetPrivateEndpointTrustedOwnerResponse:
      example:
        trusted_owner:
          cluster_id: cluster_id
          external_owner_id: external_owner_id
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          type: null
      properties:
        trusted_owner:
          $ref: '#/components/schemas/PrivateEndpointTrustedOwner'
      required:
      - trusted_owner
      type: object
    GetResourceTypesResponse:
      example:
        startIndex: 6
        totalResults: 1
        itemsPerPage: 0
        schemas:
        - schemas
        - schemas
        Resources:
        - schema: schema
          endpoint: endpoint
          meta:
            created: created
            location: location
            lastModified: lastModified
            resourceType: resourceType
          schemas:
          - schemas
          - schemas
          name: name
          description: description
          id: id
        - schema: schema
          endpoint: endpoint
          meta:
            created: created
            location: location
            lastModified: lastModified
            resourceType: resourceType
          schemas:
          - schemas
          - schemas
          name: name
          description: description
          id: id
      properties:
        Resources:
          items:
            $ref: '#/components/schemas/ScimResourceType'
          type: array
        itemsPerPage:
          format: int32
          type: integer
        schemas:
          items:
            type: string
          type: array
        startIndex:
          format: int32
          type: integer
        totalResults:
          format: int32
          type: integer
      required:
      - schemas
      - totalResults
      title: GetResourceTypesResponse
      type: object
    GetSchemasResponse:
      example:
        startIndex: 6
        totalResults: 1
        itemsPerPage: 0
        schemas:
        - schemas
        - schemas
        Resources:
        - meta:
            created: created
            location: location
            lastModified: lastModified
            resourceType: resourceType
          name: name
          description: description
          attributes:
          - uniqueness: uniqueness
            name: name
            canonicalValues:
            - canonicalValues
            - canonicalValues
            description: description
            referenceTypes:
            - referenceTypes
            - referenceTypes
            mutability: mutability
            caseExact: true
            multiValued: true
            returned: returned
            type: type
            required: true
            subAttributes:
            - null
            - null
          - uniqueness: uniqueness
            name: name
            canonicalValues:
            - canonicalValues
            - canonicalValues
            description: description
            referenceTypes:
            - referenceTypes
            - referenceTypes
            mutability: mutability
            caseExact: true
            multiValued: true
            returned: returned
            type: type
            required: true
            subAttributes:
            - null
            - null
          id: id
        - meta:
            created: created
            location: location
            lastModified: lastModified
            resourceType: resourceType
          name: name
          description: description
          attributes:
          - uniqueness: uniqueness
            name: name
            canonicalValues:
            - canonicalValues
            - canonicalValues
            description: description
            referenceTypes:
            - referenceTypes
            - referenceTypes
            mutability: mutability
            caseExact: true
            multiValued: true
            returned: returned
            type: type
            required: true
            subAttributes:
            - null
            - null
          - uniqueness: uniqueness
            name: name
            canonicalValues:
            - canonicalValues
            - canonicalValues
            description: description
            referenceTypes:
            - referenceTypes
            - referenceTypes
            mutability: mutability
            caseExact: true
            multiValued: true
            returned: returned
            type: type
            required: true
            subAttributes:
            - null
            - null
          id: id
      properties:
        Resources:
          items:
            $ref: '#/components/schemas/ScimSchema'
          type: array
        itemsPerPage:
          format: int32
          type: integer
        schemas:
          items:
            type: string
          type: array
        startIndex:
          format: int32
          type: integer
        totalResults:
          format: int32
          type: integer
      required:
      - schemas
      - totalResults
      title: GetSchemasResponse
      type: object
    GetServiceProviderConfigResponse:
      example:
        filter:
          maxResults: 5
          supported: true
        authenticationSchemes:
        - documentationUri: documentationUri
          name: name
          description: description
          specUri: specUri
          type: type
          primary: true
        - documentationUri: documentationUri
          name: name
          description: description
          specUri: specUri
          type: type
          primary: true
        meta:
          created: created
          location: location
          lastModified: lastModified
          resourceType: resourceType
        schemas:
        - schemas
        - schemas
        etag:
          maxResults: 1
          supported: true
        sort:
          supported: true
        bulk:
          maxPayloadSize: 6
          maxOperations: 0
          supported: true
        changePassword:
          supported: true
      properties:
        authenticationSchemes:
          items:
            $ref: '#/components/schemas/ScimAuthenticationScheme'
          type: array
        bulk:
          $ref: '#/components/schemas/ScimBulkSupport'
        changePassword:
          $ref: '#/components/schemas/ScimChangePasswordSupport'
        etag:
          $ref: '#/components/schemas/ScimEtagSupport'
        filter:
          $ref: '#/components/schemas/ScimFilterSupport'
        meta:
          $ref: '#/components/schemas/ScimMetadata'
        schemas:
          items:
            type: string
          type: array
        sort:
          $ref: '#/components/schemas/ScimSortSupport'
      required:
      - authenticationSchemes
      - bulk
      - changePassword
      - etag
      - filter
      - schemas
      - sort
      title: GetServiceProviderConfigResponse
      type: object
    GetUsersRequest:
      example:
        filter: filter
        startIndex: 6
        count: 0
        attributes: attributes
        excludedAttributes: excludedAttributes
      properties:
        attributes:
          type: string
        count:
          description: |-
            The maximum number of resources to return. If omitted, defaults to 20.
            If set to 0, the response will contain no resources but will include metadata such as
            `totalResults`, complying with [RFC 7644, Section 3.4.2.4: Pagination](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.4).
          format: int32
          type: integer
        excludedAttributes:
          type: string
        filter:
          type: string
        startIndex:
          description: |-
            The 1-based index of the first resource to return in the response.
            If omitted or less than 1, defaults to 1. This behavior complies with [RFC 7644, Section 3.4.2.4: Pagination](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.4).
          format: int32
          type: integer
      title: GetUsersRequest
      type: object
    GetUsersResponse:
      example:
        startIndex: 6
        totalResults: 1
        itemsPerPage: 0
        schemas:
        - schemas
        - schemas
        Resources:
        - emails:
          - display: display
            type: type
            value: value
            primary: true
          - display: display
            type: type
            value: value
            primary: true
          displayName: displayName
          meta:
            created: created
            location: location
            lastModified: lastModified
            resourceType: resourceType
          schemas:
          - schemas
          - schemas
          name:
            familyName: familyName
            givenName: givenName
          active: true
          externalId: externalId
          groups:
          - ref: ref
            display: display
            type: type
            value: value
          - ref: ref
            display: display
            type: type
            value: value
          id: id
          userName: userName
        - emails:
          - display: display
            type: type
            value: value
            primary: true
          - display: display
            type: type
            value: value
            primary: true
          displayName: displayName
          meta:
            created: created
            location: location
            lastModified: lastModified
            resourceType: resourceType
          schemas:
          - schemas
          - schemas
          name:
            familyName: familyName
            givenName: givenName
          active: true
          externalId: externalId
          groups:
          - ref: ref
            display: display
            type: type
            value: value
          - ref: ref
            display: display
            type: type
            value: value
          id: id
          userName: userName
      properties:
        Resources:
          items:
            $ref: '#/components/schemas/ScimUser'
          type: array
        itemsPerPage:
          format: int32
          type: integer
        schemas:
          items:
            type: string
          type: array
        startIndex:
          format: int32
          type: integer
        totalResults:
          format: int32
          type: integer
      required:
      - schemas
      - totalResults
      title: GetUsersResponse
      type: object
    Invoice:
      description: |-
        Invoice message represents the details and the total charges associated with
        one billing period, which starts at the beginning of the month and ends at
        the beginning of the next month.

        The message also includes details about each invoice item.
      example:
        period_end: 2000-01-23T04:56:07.000+00:00
        balances:
        - amount: 0.8008281904610115
          currency: null
        - amount: 0.8008281904610115
          currency: null
        adjustments:
        - amount:
            amount: 0.8008281904610115
            currency: null
          name: name
        - amount:
            amount: 0.8008281904610115
            currency: null
          name: name
        invoice_items:
        - cluster:
            account_id: ""
            cidr_range: 172.28.0.0/14
            cloud_provider: GCP
            cockroach_version: v21.2.4
            config:
              serverless:
                routing_id: example-cluster-1533
                upgrade_type: AUTOMATIC
                usage_limits:
                  provisioned_virtual_cpus: "2"
            created_at: 2022-03-22T20:23:11.285067Z
            creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
            id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
            labels:
              cost_center: "12345"
              env: prod
            name: example-cluster
            operation_status: UNSPECIFIED
            plan: STANDARD
            regions:
            - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
              name: us-central1
              node_count: 0
              private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
              sql_dns: free-tier7.gcp-us-central1.crdb.io
              ui_dns: ""
            state: CREATED
            updated_at: 2022-03-22T20:23:11.879593Z
            upgrade_status: UPGRADE_AVAILABLE
          line_items:
          - quantity_unit: null
            total:
              amount: 0.8008281904610115
              currency: null
            quantity: 6.027456183070403
            description: description
            unit_cost: 1.4658129805029452
          - quantity_unit: null
            total:
              amount: 0.8008281904610115
              currency: null
            quantity: 6.027456183070403
            description: description
            unit_cost: 1.4658129805029452
          totals:
          - amount: 0.8008281904610115
            currency: null
          - amount: 0.8008281904610115
            currency: null
        - cluster:
            account_id: ""
            cidr_range: 172.28.0.0/14
            cloud_provider: GCP
            cockroach_version: v21.2.4
            config:
              serverless:
                routing_id: example-cluster-1533
                upgrade_type: AUTOMATIC
                usage_limits:
                  provisioned_virtual_cpus: "2"
            created_at: 2022-03-22T20:23:11.285067Z
            creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
            id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
            labels:
              cost_center: "12345"
              env: prod
            name: example-cluster
            operation_status: UNSPECIFIED
            plan: STANDARD
            regions:
            - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
              name: us-central1
              node_count: 0
              private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
              sql_dns: free-tier7.gcp-us-central1.crdb.io
              ui_dns: ""
            state: CREATED
            updated_at: 2022-03-22T20:23:11.879593Z
            upgrade_status: UPGRADE_AVAILABLE
          line_items:
          - quantity_unit: null
            total:
              amount: 0.8008281904610115
              currency: null
            quantity: 6.027456183070403
            description: description
            unit_cost: 1.4658129805029452
          - quantity_unit: null
            total:
              amount: 0.8008281904610115
              currency: null
            quantity: 6.027456183070403
            description: description
            unit_cost: 1.4658129805029452
          totals:
          - amount: 0.8008281904610115
            currency: null
          - amount: 0.8008281904610115
            currency: null
        period_start: 2000-01-23T04:56:07.000+00:00
        folder_resources:
        - path:
          - name: name
            id: id
          - name: name
            id: id
          parent_id: parent_id
          organization_id: organization_id
          name: name
          resource_type: null
          resource_id: resource_id
          labels:
            key: labels
        - path:
          - name: name
            id: id
          - name: name
            id: id
          parent_id: parent_id
          organization_id: organization_id
          name: name
          resource_type: null
          resource_id: resource_id
          labels:
            key: labels
        invoice_id: invoice_id
        totals:
        - amount: 0.8008281904610115
          currency: null
        - amount: 0.8008281904610115
          currency: null
        status: null
      properties:
        adjustments:
          description: |-
            adjustments is a list of credits or costs that adjust the value of the
            invoice (e.g. a Serverless Free Credit or Premium Support adjustment).
            Unlike line items, adjustments are not tied to a particular cluster.
          items:
            $ref: '#/components/schemas/InvoiceAdjustment'
          type: array
        balances:
          description: balances are the amounts of currency left at the time of the
            invoice.
          items:
            $ref: '#/components/schemas/CurrencyAmount'
          type: array
        folder_resources:
          description: |-
            Preview: FolderResources is a list of resources in the organization and their folder
            paths.
          items:
            $ref: '#/components/schemas/FolderResource'
          type: array
        invoice_id:
          description: invoice_id is the unique ID representing the invoice.
          type: string
        invoice_items:
          description: invoice_items are sorted by the cluster name.
          items:
            $ref: '#/components/schemas/InvoiceItem'
          type: array
        period_end:
          description: period_end is the end of the billing period (exclusive).
          format: date-time
          type: string
        period_start:
          description: period_start is the start of the billing period (inclusive).
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/InvoiceStatus.Type'
        totals:
          description: totals is a list of the total amounts per currency.
          items:
            $ref: '#/components/schemas/CurrencyAmount'
          type: array
      required:
      - balances
      - invoice_id
      - invoice_items
      - period_end
      - period_start
      - totals
      type: object
    InvoiceAdjustment:
      example:
        amount:
          amount: 0.8008281904610115
          currency: null
        name: name
      properties:
        amount:
          $ref: '#/components/schemas/CurrencyAmount'
        name:
          description: name identifies the adjustment.
          type: string
      required:
      - amount
      - name
      type: object
    InvoiceItem:
      example:
        cluster:
          account_id: ""
          cidr_range: 172.28.0.0/14
          cloud_provider: GCP
          cockroach_version: v21.2.4
          config:
            serverless:
              routing_id: example-cluster-1533
              upgrade_type: AUTOMATIC
              usage_limits:
                provisioned_virtual_cpus: "2"
          created_at: 2022-03-22T20:23:11.285067Z
          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
          id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
          labels:
            cost_center: "12345"
            env: prod
          name: example-cluster
          operation_status: UNSPECIFIED
          plan: STANDARD
          regions:
          - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
            name: us-central1
            node_count: 0
            private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
            sql_dns: free-tier7.gcp-us-central1.crdb.io
            ui_dns: ""
          state: CREATED
          updated_at: 2022-03-22T20:23:11.879593Z
          upgrade_status: UPGRADE_AVAILABLE
        line_items:
        - quantity_unit: null
          total:
            amount: 0.8008281904610115
            currency: null
          quantity: 6.027456183070403
          description: description
          unit_cost: 1.4658129805029452
        - quantity_unit: null
          total:
            amount: 0.8008281904610115
            currency: null
          quantity: 6.027456183070403
          description: description
          unit_cost: 1.4658129805029452
        totals:
        - amount: 0.8008281904610115
          currency: null
        - amount: 0.8008281904610115
          currency: null
      properties:
        cluster:
          $ref: '#/components/schemas/Cluster'
        line_items:
          description: line_items contain all the relevant line items from the Metronome
            invoice.
          items:
            $ref: '#/components/schemas/LineItem'
          type: array
        totals:
          description: totals is a list of the total amounts of line items per currency.
          items:
            $ref: '#/components/schemas/CurrencyAmount'
          type: array
      required:
      - cluster
      - line_items
      - totals
      type: object
    InvoiceStatus.Type:
      enum:
      - FINALIZED
      - DRAFT
      type: string
    JWTIssuer:
      example:
        audience: 1234567890abcd
        issuer_url: https://jwt-issuer.example.com
        jwks: "{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"alg\"\
          :\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\"\
          ,\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"
        claim: email
        identity_map:
        - token_identity: /^sso_(.*)$
          cc_identity: \1
        - token_identity: /^sso_(.*)$
          cc_identity: \1
        id: 1234abcd-1234-1234-abcd-12345678abcd
      properties:
        audience:
          example: 1234567890abcd
          title: The intended audience for consuming the JWT
          type: string
        claim:
          example: email
          title: Used to identify the user from the external Identity Provider. Defaults
            to "sub"
          type: string
        id:
          example: 1234abcd-1234-1234-abcd-12345678abcd
          format: uuid
          title: The unique identifier of the JWT Issuer resource
          type: string
        identity_map:
          items:
            $ref: '#/components/schemas/JWTIssuerIdentityMapEntry'
          title: A list of mappings to map the external token identity into CockroachDB
            Cloud
          type: array
        issuer_url:
          example: https://jwt-issuer.example.com
          title: The URL of the server issuing JWTs
          type: string
        jwks:
          example: "{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"\
            alg\":\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\"\
            ,\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"
          title: A set of public keys (JWKS) used to verify a JWT
          type: string
      required:
      - audience
      - id
      - issuer_url
      title: JWTIssuer
      type: object
    JWTIssuerIdentityMapEntry:
      example:
        token_identity: /^sso_(.*)$
        cc_identity: \1
      properties:
        cc_identity:
          description: |-
            Specifies how to map the fetched token identity to an identity in CockroachDB Cloud. In case of a regular
            expression for token_identity, this must contain a \1 placeholder for the matched content. Note that you will need
            to escape the backslash in the string as in the example usage (\\\\1).
            The mapped identity must match with either a user email address or a service account ID.
          example: \1
          type: string
        token_identity:
          description: |-
            Specifies how to fetch external identity from the token claim. A regular expression must start
            with a forward slash. The regular expression must be in RE2 compatible syntax. For further details, please see
            https://github.com/google/re2/wiki/Syntax.
          example: /^sso_(.*)$
          type: string
      required:
      - cc_identity
      - token_identity
      title: JWTIssuerIdentityMapEntry
      type: object
    KeysetPaginationResponse:
      example:
        next_page: next_page
        previous_page: previous_page
      properties:
        next_page:
          type: string
        previous_page:
          type: string
      type: object
    LineItem:
      example:
        quantity_unit: null
        total:
          amount: 0.8008281904610115
          currency: null
        quantity: 6.027456183070403
        description: description
        unit_cost: 1.4658129805029452
      properties:
        description:
          description: description contains the details of the line item (i.e t3 micro).
          type: string
        quantity:
          description: quantity is the number of the specific line items used.
          format: double
          type: number
        quantity_unit:
          $ref: '#/components/schemas/QuantityUnit.Type'
        total:
          $ref: '#/components/schemas/CurrencyAmount'
        unit_cost:
          description: unit_cost is the cost per unit of line item.
          format: double
          type: number
      required:
      - description
      - quantity
      - quantity_unit
      - total
      - unit_cost
      type: object
    ListAllowlistEntriesResponse:
      example:
        allowlist:
        - cidr_ip: 192.168.1.1
          cidr_mask: 32
          name: Example
          sql: true
          ui: true
        - cidr_ip: 192.168.1.1
          cidr_mask: 32
          name: Example
          sql: true
          ui: true
        pagination:
          next_page: next_page
          previous_page: previous_page
        propagating: true
      properties:
        allowlist:
          items:
            $ref: '#/components/schemas/AllowlistEntry'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        propagating:
          type: boolean
      required:
      - allowlist
      - propagating
      title: ListAllowlistEntriesResponse
      type: object
    ListApiKeysResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        api_keys:
        - created_at: 2022-03-22T20:23:11.285067Z
          id: CCDB1_12345abcdefGHIJKLMnopq
          name: example name
          service_account_id: 1234abcd-1234-1234-abcd-12345678abcd
        - created_at: 2022-03-22T20:23:11.285067Z
          id: CCDB1_12345abcdefGHIJKLMnopq
          name: example name
          service_account_id: 1234abcd-1234-1234-abcd-12345678abcd
      properties:
        api_keys:
          items:
            $ref: '#/components/schemas/ApiKey'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - api_keys
      type: object
    ListAuditLogsResponse:
      example:
        next_starting_from: 2000-01-23T04:56:07.000+00:00
        entries:
        - service_account_name: service_account_name
          cluster_name: cluster_name
          metadata:
            ip_address: ip_address
          trace_id: trace_id
          user_email: user_email
          created_at: 2000-01-23T04:56:07.000+00:00
          session_id: session_id
          source: null
          error: error
          cluster_id: cluster_id
          payload: payload
          action: null
          id: id
        - service_account_name: service_account_name
          cluster_name: cluster_name
          metadata:
            ip_address: ip_address
          trace_id: trace_id
          user_email: user_email
          created_at: 2000-01-23T04:56:07.000+00:00
          session_id: session_id
          source: null
          error: error
          cluster_id: cluster_id
          payload: payload
          action: null
          id: id
      properties:
        entries:
          description: |-
            entries is the contiguous list of audit log entries matching the
            pagination request, sorted in the order requested.
          items:
            $ref: '#/components/schemas/AuditLogEntry'
          type: array
        next_starting_from:
          description: |-
            next_starting_from is the timestamp the caller should use to continue
            paginating in the same direction. If the timestamp is unset, it means
            that there are no more entries in the direction of the request, and
            there never will be.
          format: date-time
          type: string
      type: object
    ListAvailableRegionsResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        regions:
        - distance: 0.8008282
          provider: null
          name: name
          serverless: true
          location: location
        - distance: 0.8008282
          provider: null
          name: name
          serverless: true
          location: location
      properties:
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        regions:
          items:
            $ref: '#/components/schemas/CloudProviderRegion'
          type: array
      required:
      - regions
      type: object
    ListBackupsResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        backups:
        - id: id
          as_of_time: 2000-01-23T04:56:07.000+00:00
        - id: id
          as_of_time: 2000-01-23T04:56:07.000+00:00
      properties:
        backups:
          items:
            $ref: '#/components/schemas/BackupSummary'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - backups
      type: object
    ListClusterNodesResponse:
      example:
        nodes:
        - name: name
          region_name: region_name
          status: null
        - name: name
          region_name: region_name
          status: null
        pagination:
          next_page: next_page
          previous_page: previous_page
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/Node'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - nodes
      type: object
    ListClustersResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        clusters:
        - account_id: ""
          cidr_range: 172.28.0.0/14
          cloud_provider: GCP
          cockroach_version: v21.2.4
          config:
            serverless:
              routing_id: example-cluster-1533
              upgrade_type: AUTOMATIC
              usage_limits:
                provisioned_virtual_cpus: "2"
          created_at: 2022-03-22T20:23:11.285067Z
          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
          id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
          labels:
            cost_center: "12345"
            env: prod
          name: example-cluster
          operation_status: UNSPECIFIED
          plan: STANDARD
          regions:
          - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
            name: us-central1
            node_count: 0
            private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
            sql_dns: free-tier7.gcp-us-central1.crdb.io
            ui_dns: ""
          state: CREATED
          updated_at: 2022-03-22T20:23:11.879593Z
          upgrade_status: UPGRADE_AVAILABLE
        - account_id: ""
          cidr_range: 172.28.0.0/14
          cloud_provider: GCP
          cockroach_version: v21.2.4
          config:
            serverless:
              routing_id: example-cluster-1533
              upgrade_type: AUTOMATIC
              usage_limits:
                provisioned_virtual_cpus: "2"
          created_at: 2022-03-22T20:23:11.285067Z
          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
          id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
          labels:
            cost_center: "12345"
            env: prod
          name: example-cluster
          operation_status: UNSPECIFIED
          plan: STANDARD
          regions:
          - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
            name: us-central1
            node_count: 0
            private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
            sql_dns: free-tier7.gcp-us-central1.crdb.io
            ui_dns: ""
          state: CREATED
          updated_at: 2022-03-22T20:23:11.879593Z
          upgrade_status: UPGRADE_AVAILABLE
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - clusters
      type: object
    ListDatabasesResponse:
      example:
        databases:
        - table_count: 0
          name: name
        - table_count: 0
          name: name
        pagination:
          next_page: next_page
          previous_page: previous_page
      properties:
        databases:
          items:
            $ref: '#/components/schemas/Database'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - databases
      title: ListDatabasesResponse
      type: object
    ListEgressPrivateEndpointsResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        egress_private_endpoints:
        - target_service_type: null
          id: id
          state: null
          region: region
          target_service_identifier: target_service_identifier
          endpoint_connection_id: endpoint_connection_id
          domain_names:
          - domain_names
          - domain_names
          endpoint_address: endpoint_address
        - target_service_type: null
          id: id
          state: null
          region: region
          target_service_identifier: target_service_identifier
          endpoint_connection_id: endpoint_connection_id
          domain_names:
          - domain_names
          - domain_names
          endpoint_address: endpoint_address
      properties:
        egress_private_endpoints:
          description: egress_private_endpoints are the egress private endpoints associated
            with the given cluster.
          items:
            $ref: '#/components/schemas/EgressPrivateEndpoint'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - egress_private_endpoints
      title: ListEgressPrivateEndpointsResponse
      type: object
    ListEgressRulesResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        rules:
        - crl_managed: true
          cluster_id: cluster_id
          paths:
          - paths
          - paths
          destination: destination
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          state: state
          ports:
          - 0
          - 0
          type: type
        - crl_managed: true
          cluster_id: cluster_id
          paths:
          - paths
          - paths
          destination: destination
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          state: state
          ports:
          - 0
          - 0
          type: type
      properties:
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        rules:
          description: rules are the egress rules associated with the given CockroachDB
            cluster.
          items:
            $ref: '#/components/schemas/EgressRule'
          type: array
      title: ListEgressRulesResponse
      type: object
    ListFoldersResponse:
      example:
        folders:
        - path:
          - name: name
            id: id
          - name: name
            id: id
          parent_id: parent_id
          organization_id: organization_id
          name: name
          resource_type: null
          resource_id: resource_id
          labels:
            key: labels
        - path:
          - name: name
            id: id
          - name: name
            id: id
          parent_id: parent_id
          organization_id: organization_id
          name: name
          resource_type: null
          resource_id: resource_id
          labels:
            key: labels
        pagination:
          next_page: next_page
          previous_page: previous_page
      properties:
        folders:
          items:
            $ref: '#/components/schemas/FolderResource'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      required:
      - folders
      type: object
    ListInvoicesResponse:
      example:
        invoices:
        - period_end: 2000-01-23T04:56:07.000+00:00
          balances:
          - amount: 0.8008281904610115
            currency: null
          - amount: 0.8008281904610115
            currency: null
          adjustments:
          - amount:
              amount: 0.8008281904610115
              currency: null
            name: name
          - amount:
              amount: 0.8008281904610115
              currency: null
            name: name
          invoice_items:
          - cluster:
              account_id: ""
              cidr_range: 172.28.0.0/14
              cloud_provider: GCP
              cockroach_version: v21.2.4
              config:
                serverless:
                  routing_id: example-cluster-1533
                  upgrade_type: AUTOMATIC
                  usage_limits:
                    provisioned_virtual_cpus: "2"
              created_at: 2022-03-22T20:23:11.285067Z
              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
              labels:
                cost_center: "12345"
                env: prod
              name: example-cluster
              operation_status: UNSPECIFIED
              plan: STANDARD
              regions:
              - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
                name: us-central1
                node_count: 0
                private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
                sql_dns: free-tier7.gcp-us-central1.crdb.io
                ui_dns: ""
              state: CREATED
              updated_at: 2022-03-22T20:23:11.879593Z
              upgrade_status: UPGRADE_AVAILABLE
            line_items:
            - quantity_unit: null
              total:
                amount: 0.8008281904610115
                currency: null
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            - quantity_unit: null
              total:
                amount: 0.8008281904610115
                currency: null
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            totals:
            - amount: 0.8008281904610115
              currency: null
            - amount: 0.8008281904610115
              currency: null
          - cluster:
              account_id: ""
              cidr_range: 172.28.0.0/14
              cloud_provider: GCP
              cockroach_version: v21.2.4
              config:
                serverless:
                  routing_id: example-cluster-1533
                  upgrade_type: AUTOMATIC
                  usage_limits:
                    provisioned_virtual_cpus: "2"
              created_at: 2022-03-22T20:23:11.285067Z
              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
              labels:
                cost_center: "12345"
                env: prod
              name: example-cluster
              operation_status: UNSPECIFIED
              plan: STANDARD
              regions:
              - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
                name: us-central1
                node_count: 0
                private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
                sql_dns: free-tier7.gcp-us-central1.crdb.io
                ui_dns: ""
              state: CREATED
              updated_at: 2022-03-22T20:23:11.879593Z
              upgrade_status: UPGRADE_AVAILABLE
            line_items:
            - quantity_unit: null
              total:
                amount: 0.8008281904610115
                currency: null
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            - quantity_unit: null
              total:
                amount: 0.8008281904610115
                currency: null
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            totals:
            - amount: 0.8008281904610115
              currency: null
            - amount: 0.8008281904610115
              currency: null
          period_start: 2000-01-23T04:56:07.000+00:00
          folder_resources:
          - path:
            - name: name
              id: id
            - name: name
              id: id
            parent_id: parent_id
            organization_id: organization_id
            name: name
            resource_type: null
            resource_id: resource_id
            labels:
              key: labels
          - path:
            - name: name
              id: id
            - name: name
              id: id
            parent_id: parent_id
            organization_id: organization_id
            name: name
            resource_type: null
            resource_id: resource_id
            labels:
              key: labels
          invoice_id: invoice_id
          totals:
          - amount: 0.8008281904610115
            currency: null
          - amount: 0.8008281904610115
            currency: null
          status: null
        - period_end: 2000-01-23T04:56:07.000+00:00
          balances:
          - amount: 0.8008281904610115
            currency: null
          - amount: 0.8008281904610115
            currency: null
          adjustments:
          - amount:
              amount: 0.8008281904610115
              currency: null
            name: name
          - amount:
              amount: 0.8008281904610115
              currency: null
            name: name
          invoice_items:
          - cluster:
              account_id: ""
              cidr_range: 172.28.0.0/14
              cloud_provider: GCP
              cockroach_version: v21.2.4
              config:
                serverless:
                  routing_id: example-cluster-1533
                  upgrade_type: AUTOMATIC
                  usage_limits:
                    provisioned_virtual_cpus: "2"
              created_at: 2022-03-22T20:23:11.285067Z
              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
              labels:
                cost_center: "12345"
                env: prod
              name: example-cluster
              operation_status: UNSPECIFIED
              plan: STANDARD
              regions:
              - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
                name: us-central1
                node_count: 0
                private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
                sql_dns: free-tier7.gcp-us-central1.crdb.io
                ui_dns: ""
              state: CREATED
              updated_at: 2022-03-22T20:23:11.879593Z
              upgrade_status: UPGRADE_AVAILABLE
            line_items:
            - quantity_unit: null
              total:
                amount: 0.8008281904610115
                currency: null
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            - quantity_unit: null
              total:
                amount: 0.8008281904610115
                currency: null
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            totals:
            - amount: 0.8008281904610115
              currency: null
            - amount: 0.8008281904610115
              currency: null
          - cluster:
              account_id: ""
              cidr_range: 172.28.0.0/14
              cloud_provider: GCP
              cockroach_version: v21.2.4
              config:
                serverless:
                  routing_id: example-cluster-1533
                  upgrade_type: AUTOMATIC
                  usage_limits:
                    provisioned_virtual_cpus: "2"
              created_at: 2022-03-22T20:23:11.285067Z
              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1
              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
              labels:
                cost_center: "12345"
                env: prod
              name: example-cluster
              operation_status: UNSPECIFIED
              plan: STANDARD
              regions:
              - internal_dns: internal-free-tier7.gcp-us-central1.crdb.io
                name: us-central1
                node_count: 0
                private_endpoint_dns: private-free-tier7.gcp-us-central1.crdb.io
                sql_dns: free-tier7.gcp-us-central1.crdb.io
                ui_dns: ""
              state: CREATED
              updated_at: 2022-03-22T20:23:11.879593Z
              upgrade_status: UPGRADE_AVAILABLE
            line_items:
            - quantity_unit: null
              total:
                amount: 0.8008281904610115
                currency: null
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            - quantity_unit: null
              total:
                amount: 0.8008281904610115
                currency: null
              quantity: 6.027456183070403
              description: description
              unit_cost: 1.4658129805029452
            totals:
            - amount: 0.8008281904610115
              currency: null
            - amount: 0.8008281904610115
              currency: null
          period_start: 2000-01-23T04:56:07.000+00:00
          folder_resources:
          - path:
            - name: name
              id: id
            - name: name
              id: id
            parent_id: parent_id
            organization_id: organization_id
            name: name
            resource_type: null
            resource_id: resource_id
            labels:
              key: labels
          - path:
            - name: name
              id: id
            - name: name
              id: id
            parent_id: parent_id
            organization_id: organization_id
            name: name
            resource_type: null
            resource_id: resource_id
            labels:
              key: labels
          invoice_id: invoice_id
          totals:
          - amount: 0.8008281904610115
            currency: null
          - amount: 0.8008281904610115
            currency: null
          status: null
      properties:
        invoices:
          description: invoices are sorted by period_start time.
          items:
            $ref: '#/components/schemas/Invoice'
          type: array
      required:
      - invoices
      type: object
    ListJWTIssuersResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        jwt_issuers:
        - audience: 1234567890abcd
          issuer_url: https://jwt-issuer.example.com
          jwks: "{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"alg\"\
            :\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\"\
            ,\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"
          claim: email
          identity_map:
          - token_identity: /^sso_(.*)$
            cc_identity: \1
          - token_identity: /^sso_(.*)$
            cc_identity: \1
          id: 1234abcd-1234-1234-abcd-12345678abcd
        - audience: 1234567890abcd
          issuer_url: https://jwt-issuer.example.com
          jwks: "{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"alg\"\
            :\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\"\
            ,\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"
          claim: email
          identity_map:
          - token_identity: /^sso_(.*)$
            cc_identity: \1
          - token_identity: /^sso_(.*)$
            cc_identity: \1
          id: 1234abcd-1234-1234-abcd-12345678abcd
      properties:
        jwt_issuers:
          items:
            $ref: '#/components/schemas/JWTIssuer'
          title: The list of JWT Issuer resources
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
      title: ListJWTIssuersResponse
      type: object
    ListMajorClusterVersionsResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        versions:
        - support_status: null
          support_end: 2000-01-23T04:56:07.000+00:00
          release_type: null
          allowed_upgrades:
          - allowed_upgrades
          - allowed_upgrades
          version: version
        - support_status: null
          support_end: 2000-01-23T04:56:07.000+00:00
          release_type: null
          allowed_upgrades:
          - allowed_upgrades
          - allowed_upgrades
          version: version
      properties:
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        versions:
          items:
            $ref: '#/components/schemas/ClusterMajorVersion'
          type: array
      required:
      - versions
      type: object
    ListPrivateEndpointTrustedOwnersResponse:
      example:
        trusted_owners:
        - cluster_id: cluster_id
          external_owner_id: external_owner_id
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          type: null
        - cluster_id: cluster_id
          external_owner_id: external_owner_id
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          type: null
      properties:
        trusted_owners:
          description: |-
            trusted_owners describes the private endpoint trusted owner entries for the
            requested cluster.
          items:
            $ref: '#/components/schemas/PrivateEndpointTrustedOwner'
          type: array
      type: object
    ListRestoresResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        restores:
        - backup_id: 1234abcd-1234-1234-abcd-12345678abcd
          completion_percent: 0
          created_at: 2025-07-09T15:04:05Z
          id: abcd1234-5678-90ab-cdef-1234567890ab
          status: PENDING
          type: TABLE
        - backup_id: 1234abcd-1234-1234-abcd-12345678abcd
          completion_percent: 0
          created_at: 2025-07-09T15:04:05Z
          id: abcd1234-5678-90ab-cdef-1234567890ab
          status: PENDING
          type: TABLE
      properties:
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        restores:
          items:
            $ref: '#/components/schemas/Restore'
          type: array
      required:
      - restores
      type: object
    ListRoleGrantsResponse:
      example:
        grants:
        - roles:
          - name: CLUSTER_ADMIN
            resource:
              id: example_cluster_id
              type: CLUSTER
          user_id: 12345678-1234-1234-1234-123456789012
        - roles:
          - name: CLUSTER_ADMIN
            resource:
              id: example_cluster_id
              type: CLUSTER
          user_id: 12345678-1234-1234-1234-123456789012
        pagination:
          next_page: next_page
          previous_page: previous_page
        user_group_grants:
        - group_roles:
          - role:
              resource:
                id: id
                type: null
              name: null
            group_names:
            - group_names
            - group_names
          - role:
              resource:
                id: id
                type: null
              name: null
            group_names:
            - group_names
            - group_names
          user_id: user_id
        - group_roles:
          - role:
              resource:
                id: id
                type: null
              name: null
            group_names:
            - group_names
            - group_names
          - role:
              resource:
                id: id
                type: null
              name: null
            group_names:
            - group_names
            - group_names
          user_id: user_id
      properties:
        grants:
          items:
            $ref: '#/components/schemas/UserRoleGrants'
          type: array
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        user_group_grants:
          items:
            $ref: '#/components/schemas/UserGroupRoleGrant'
          type: array
      type: object
    ListSQLUsersResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        users:
        - name: name
        - name: name
      properties:
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        users:
          items:
            $ref: '#/components/schemas/SQLUser'
          type: array
      required:
      - users
      type: object
    ListServiceAccountsResponse:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        service_accounts:
        - created_at: 2022-03-22T20:23:11.285067Z
          creator_name: creator
          description: ""
          group_roles: []
          id: 12345678-1234-1234-1234-123456789012
          name: SA Name
          roles:
          - name: CLUSTER_ADMIN
            resource:
              type: ORGANIZATION
        - created_at: 2022-03-22T20:23:11.285067Z
          creator_name: creator
          description: ""
          group_roles: []
          id: 12345678-1234-1234-1234-123456789012
          name: SA Name
          roles:
          - name: CLUSTER_ADMIN
            resource:
              type: ORGANIZATION
      properties:
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        service_accounts:
          items:
            $ref: '#/components/schemas/ServiceAccount'
          type: array
      required:
      - service_accounts
      type: object
    LogExportClusterInfo:
      description: |-
        LogExportClusterInfo contains a package of information that fully
        describes both the intended state of the log export configuration for
        a specific cluster but also some metadata around its deployment
        status, any error messages, and some timestamps.
      example:
        cluster_id: cluster_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        user_message: user_message
        spec:
          omitted_channels:
          - omitted_channels
          - omitted_channels
          aws_external_id: aws_external_id
          auth_principal: auth_principal
          log_name: log_name
          redact: true
          groups:
          - channels:
            - channels
            - channels
            log_name: log_name
            redact: true
            min_level: null
          - channels:
            - channels
            - channels
            log_name: log_name
            redact: true
            min_level: null
          region: region
          type: null
          azure_shared_key: azure_shared_key
        status: null
      properties:
        cluster_id:
          type: string
        created_at:
          format: date-time
          type: string
        spec:
          $ref: '#/components/schemas/LogExportClusterSpecification'
        status:
          $ref: '#/components/schemas/LogExportStatus'
        updated_at:
          format: date-time
          type: string
        user_message:
          type: string
      type: object
    LogExportClusterSpecification:
      description: |-
        LogExportClusterSpecification contains all the data necessary to
        configure log export for an individual cluster. Users would supply
        this data via the API and also receive it back when inspecting the
        state of their log export configuration.
      example:
        omitted_channels:
        - omitted_channels
        - omitted_channels
        aws_external_id: aws_external_id
        auth_principal: auth_principal
        log_name: log_name
        redact: true
        groups:
        - channels:
          - channels
          - channels
          log_name: log_name
          redact: true
          min_level: null
        - channels:
          - channels
          - channels
          log_name: log_name
          redact: true
          min_level: null
        region: region
        type: null
        azure_shared_key: azure_shared_key
      properties:
        auth_principal:
          description: |-
            auth_principal is either the AWS Role ARN that identifies a role
            that the cluster account can assume to write to CloudWatch or the
            GCP Project ID that the cluster service account has permissions to
            write to for cloud logging.
          type: string
        aws_external_id:
          description: |-
            aws_external_id, if set, is included when assuming the IAM role. Supported for
            Advanced clusters on AWS only.
          type: string
        azure_shared_key:
          description: |-
            The primary or the secondary connected sources client authentication key.
            This is used to export logs to Azure Log Analytics.
          type: string
        groups:
          description: |-
            groups is a collection of log group configurations to customize
            which CRDB channels get aggregated into different groups at the
            target sink. Unconfigured channels will be sent to the default
            locations via the settings above.
          items:
            $ref: '#/components/schemas/LogExportGroup'
          type: array
        log_name:
          description: log_name is an identifier for the logs in the customer's log
            sink.
          type: string
        omitted_channels:
          description: |-
            omitted_channels is a list of channels that the user does not want to
            export logs for.
          items:
            type: string
          type: array
        redact:
          description: |-
            redact controls whether logs are redacted before forwarding to
            customer sinks. By default they are not redacted.
          type: boolean
        region:
          description: |-
            region controls whether all logs are sent to a specific region in
            the customer sink. By default, logs will remain their region of
            origin depending on the cluster node's region.
          type: string
        type:
          $ref: '#/components/schemas/LogExportType'
      type: object
    LogExportGroup:
      description: |-
        LogExportGroup contains an export configuration for a single
        log group which can route logs for a subset of CRDB channels.
      example:
        channels:
        - channels
        - channels
        log_name: log_name
        redact: true
        min_level: null
      properties:
        channels:
          description: |-
            channels is a list of CRDB log channels to include in this
            group.
          items:
            type: string
          type: array
        log_name:
          description: "log_name is the name of the group, reflected in the log sink."
          type: string
        min_level:
          $ref: '#/components/schemas/LogLevel.Type'
        redact:
          description: |-
            redact is a boolean that governs whether this log group
            should aggregate redacted logs. Redaction settings will
            inherit from the cluster log export defaults if unset.
          type: boolean
      required:
      - channels
      - log_name
      type: object
    LogExportStatus:
      description: |-
        LogExportStatus encodes the possible states that a configuration can
        be in as it is created, deployed, and disabled.
      enum:
      - DISABLED
      - DISABLING
      - DISABLE_FAILED
      - ENABLED
      - ENABLING
      - ENABLE_FAILED
      - CREDENTIALS_ERROR
      type: string
    LogExportType:
      description: |-
        LogExportType encodes the cloud selection that we're exporting to
        along with the cloud logging platform.

        Currently, each cloud has a single logging platform.
      enum:
      - AWS_CLOUDWATCH
      - GCP_CLOUD_LOGGING
      - AZURE_LOG_ANALYTICS
      type: string
    LogLevel.Type:
      description: |2-
         - UNSPECIFIED: The unspecified log level includes all logs.
         - WARNING: The WARNING severity is used for situations which may require
        special handling, where normal operation is expected to resume
        automatically.
         - ERROR: The ERROR severity is used for situations that require special
        handling, where normal operation could not proceed as expected.
        Other operations can continue mostly unaffected.
         - FATAL: The FATAL severity is used for situations that require an
        immediate, hard server shutdown. A report is also sent to
        telemetry if telemetry is enabled.
      enum:
      - UNSPECIFIED
      - WARNING
      - ERROR
      - FATAL
      type: string
    MaintenanceWindow:
      description: |-
        MaintenanceWindowSpec specifies a weekly recurring maintenance window for an
        ADVANCED cluster.
      example:
        offset_duration: 172800s
        window_duration: 21600s
      properties:
        offset_duration:
          description: |-
            OffsetDuration is the duration from the start of a week (Monday 00:00 UTC)
            that this maintenance window will start after.

            Must be less than 1 week.
          type: string
        window_duration:
          description: |-
            WindowDuration is the duration of the maintenance window.

            Must be at least 6 hours and less than 1 week.
          type: string
      required:
      - offset_duration
      - window_duration
      title: MaintenanceWindow
      type: object
    MetricExportStatus.Type:
      enum:
      - NOT_DEPLOYED
      - DISABLING
      - ENABLING
      - ENABLED
      - ERROR
      type: string
    NetworkVisibility.Type:
      enum:
      - PUBLIC
      - PRIVATE
      type: string
    Node:
      example:
        name: name
        region_name: region_name
        status: null
      properties:
        name:
          type: string
        region_name:
          type: string
        status:
          $ref: '#/components/schemas/NodeStatus.Type'
      required:
      - name
      - region_name
      - status
      type: object
    NodeStatus.Type:
      enum:
      - LIVE
      - NOT_READY
      type: string
    OperatingSystemType:
      enum:
      - MAC
      - LINUX
      - WINDOWS
      type: string
    Organization:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        label: label
      properties:
        created_at:
          format: date-time
          type: string
        id:
          type: string
        label:
          type: string
        name:
          type: string
      required:
      - created_at
      - id
      - label
      - name
      type: object
    OrganizationUserRole.Type:
      description: |2-
         - FOLDER_ADMIN: Preview: A folder admin role.
         - FOLDER_MOVER: Preview: A folder mover role.
      enum:
      - BILLING_COORDINATOR
      - ORG_ADMIN
      - ORG_MEMBER
      - CLUSTER_ADMIN
      - CLUSTER_OPERATOR_WRITER
      - CLUSTER_DEVELOPER
      - CLUSTER_CREATOR
      - FOLDER_ADMIN
      - FOLDER_MOVER
      type: string
    PathSegment:
      example:
        name: name
        id: id
      properties:
        id:
          description: id is a folder id.
          type: string
        name:
          description: name is a folder name.
          type: string
      type: object
    PersonUserInfo:
      example:
        id: id
        email: email
      properties:
        email:
          description: email is an email address.
          type: string
        id:
          description: id is the user id.
          type: string
      required:
      - id
      title: person_user_info contains information about a person
      type: object
    PhysicalReplicationStream:
      example:
        activation_at: 2006-01-03T15:04:15Z
        created_at: 2006-01-02T15:04:05Z
        failover_at: 2006-01-03T15:04:05Z
        id: 00000000-0000-0000-0000-000000000001
        primary_cluster_id: 00000000-0000-0000-0000-000000000002
        replicated_time: 2006-01-03T15:04:04Z
        retained_time: 2006-01-02T15:04:06Z
        standby_cluster_id: 00000000-0000-0000-0000-000000000003
        status: COMPLETED
      properties:
        activated_at:
          description: |-
            activated_at is the crdb system time at which failover is
            finalized. This may differ from the time for which failover was
            requested. This field will be present when a replication stream is
            in the COMPLETED state.
          format: date-time
          type: string
        canceled_at:
          description: canceled_at is the timestamp at which the replication stream
            was canceled.
          format: date-time
          type: string
        created_at:
          description: |-
            created_at is the timestamp at which the replication stream was
            created.
          format: date-time
          type: string
        failover_at:
          description: |-
            failover_at is the time for which failover is requested. If the user
            sets the status to 'FAILING_OVER' but omits failover_at, the failover
            time will default to the latest consistent replicated time.
            Otherwise, the user can pick a time up to one hour in the future to
            schedule a failover, or a time in the past to restore the cluster to
            a recent state. This field will be present if the user has
            requested failover at a future time.
          format: date-time
          type: string
        id:
          description: id is the UUID of the replication stream.
          type: string
        primary_cluster_id:
          description: primary_cluster_id is the ID of the cluster that is being replicated.
          type: string
        replicated_time:
          description: |-
            replicated_time is the timestamp indicating the point up to which
            data has been replicated. The window between replicated_time and
            the actual time is known as replication lag. This field will be
            present when a replication stream is in the REPLICATING state.
          format: date-time
          type: string
        replication_lag_seconds:
          description: |-
            replication_lag_seconds is the replication lag (current time minus
            replicated time) in seconds. This field will be present when a
            replication stream is in the REPLICATING state.
          format: int32
          type: integer
        retained_time:
          description: |-
            retained_time is the timestamp indicating the lower bound that the
            replication stream can failover to. This field will be present
            when a replication stream is in the REPLICATING state.
          format: date-time
          type: string
        standby_cluster_id:
          description: |-
            standby_cluster_id is the ID of the standby cluster that data is being
            replicated to.
          type: string
        status:
          $ref: '#/components/schemas/ReplicationStreamStatus.Type'
      required:
      - created_at
      - id
      - primary_cluster_id
      - standby_cluster_id
      - status
      type: object
    PhysicalReplicationStreamList:
      example:
        pagination:
          next_page: next_page
          previous_page: previous_page
        physical_replication_streams:
        - activation_at: 2006-01-03T15:04:15Z
          created_at: 2006-01-02T15:04:05Z
          failover_at: 2006-01-03T15:04:05Z
          id: 00000000-0000-0000-0000-000000000001
          primary_cluster_id: 00000000-0000-0000-0000-000000000002
          replicated_time: 2006-01-03T15:04:04Z
          retained_time: 2006-01-02T15:04:06Z
          standby_cluster_id: 00000000-0000-0000-0000-000000000003
          status: COMPLETED
        - activation_at: 2006-01-03T15:04:15Z
          created_at: 2006-01-02T15:04:05Z
          failover_at: 2006-01-03T15:04:05Z
          id: 00000000-0000-0000-0000-000000000001
          primary_cluster_id: 00000000-0000-0000-0000-000000000002
          replicated_time: 2006-01-03T15:04:04Z
          retained_time: 2006-01-02T15:04:06Z
          standby_cluster_id: 00000000-0000-0000-0000-000000000003
          status: COMPLETED
      properties:
        pagination:
          $ref: '#/components/schemas/KeysetPaginationResponse'
        physical_replication_streams:
          description: physical_replication_streams is a list of PhysicalReplicationStreams.
          items:
            $ref: '#/components/schemas/PhysicalReplicationStream'
          type: array
      required:
      - physical_replication_streams
      type: object
    Plan.Type:
      description: |2-
         - BASIC: The Basic plan includes essential operational features, is available in
        select regions, and offers on-demand capacity, making it ideal for small
        teams with unpredictable workloads.
         - STANDARD: The Standard plan includes standard enterprise security and monitoring
        features, is available in all supported regions, and offers provisioned
        pricing, making it the default choice for most CockroachDB production
        workloads.
         - ADVANCED: The Advanced plan is ideal for workloads with stringent isolation,
        compliance, and security requirements such as CMEK, PCI and HIPAA-readiness,
        and support for dedicated hardware. Customers are advised to have their
        account team and/or Cockroach Labs Support <support@cockroachlabs.com>
        involved when provisioning Advanced clusters.
      enum:
      - BASIC
      - STANDARD
      - ADVANCED
      type: string
    PrivateEndpointConnection:
      example:
        cloud: AWS
        cloud_provider: AWS
        endpoint_id: 2w543-45643-323fd
        endpoint_service_id: 34t-4t446-876bm
        region: us-east-1
        service_name: com.vpc-serv1
        status: STATUS_AVAILABLE
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProvider.Type'
        endpoint_id:
          description: |-
            endpoint_id is the id of the private endpoint associated with this
            connection. The private endpoint is customer-created and its id is
            generated by the cloud provider at endpoint creation time.
          type: string
        endpoint_service_id:
          description: |-
            endpoint_service_id is the id of the private endpoint service associated
            with this connection.
          type: string
        external_owner_id:
          description: |-
            external_owner_id uniquely identifies the owner of the private endpoint
            connection cloud resource. This idenfier is the AWS account id
            owning the PrivateLink connection. This field is only valid on AWS clusters.
          type: string
        region_name:
          description: region_name is the cloud provider region name (e.g. us-east-1).
          type: string
        service_name:
          description: |-
            service_name is the name of the private endpoints service that this connection
            corresponds to.
          type: string
        status:
          $ref: '#/components/schemas/PrivateEndpointConnectionStatus'
      required:
      - cloud_provider
      - endpoint_id
      - endpoint_service_id
      - region
      - service_name
      - status
      type: object
    PrivateEndpointConnectionStatus:
      description: |-
        PrivateEndpointConnectionStatus enumerates the possible statuses
        for the private endpoints connection.
      enum:
      - STATUS_PENDING
      - STATUS_PENDING_ACCEPTANCE
      - STATUS_AVAILABLE
      - STATUS_DELETING
      - STATUS_DELETED
      - STATUS_REJECTED
      - STATUS_FAILED
      - STATUS_EXPIRED
      type: string
    PrivateEndpointConnections:
      example:
        connections:
        - cloud: AWS
          cloud_provider: AWS
          endpoint_id: 2w543-45643-323fd
          endpoint_service_id: 34t-4t446-876bm
          region: us-east-1
          service_name: com.vpc-serv1
          status: STATUS_AVAILABLE
        - cloud: AWS
          cloud_provider: AWS
          endpoint_id: 2w543-45643-323fd
          endpoint_service_id: 34t-4t446-876bm
          region: us-east-1
          service_name: com.vpc-serv1
          status: STATUS_AVAILABLE
      properties:
        connections:
          description: Connections is a list of private endpoints.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          type: array
      required:
      - connections
      type: object
    PrivateEndpointService:
      example:
        availability_zone_ids:
        - availability_zone_ids
        - availability_zone_ids
        endpoint_service_id: endpoint_service_id
        name: name
        cloud_provider: null
        region_name: region_name
        aws:
          availability_zone_ids:
          - availability_zone_ids
          - availability_zone_ids
          service_name: service_name
          service_id: service_id
        status: null
      properties:
        availability_zone_ids:
          description: |-
            availability_zone_ids are the unique identifiers for the availability
            zones in which this service is available. Note these identifiers
            are unique even across typical cloud provider boundaries, for example
            AWS accounts or organizations. In AWS, availability zone ids for us-east-1
            are use1-az1, use1-az2, use1-az3.
          items:
            type: string
          type: array
        aws:
          $ref: '#/components/schemas/AWSPrivateLinkServiceDetail'
        cloud_provider:
          $ref: '#/components/schemas/CloudProvider.Type'
        endpoint_service_id:
          description: |-
            endpoint_service_id uniquely identifies this private endpoint service. This
            is the cloud provider generated id for the service.
          type: string
        name:
          description: name is the name of the private endpoints service.
          type: string
        region_name:
          description: region_name is the cloud provider region name (e.g. us-east-1).
          type: string
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceStatus.Type'
      required:
      - availability_zone_ids
      - cloud_provider
      - endpoint_service_id
      - name
      - region_name
      - status
      type: object
    PrivateEndpointServiceStatus.Type:
      enum:
      - CREATING
      - AVAILABLE
      - CREATE_FAILED
      - DELETING
      - DELETE_FAILED
      type: string
    PrivateEndpointServices:
      example:
        services:
        - availability_zone_ids:
          - availability_zone_ids
          - availability_zone_ids
          endpoint_service_id: endpoint_service_id
          name: name
          cloud_provider: null
          region_name: region_name
          aws:
            availability_zone_ids:
            - availability_zone_ids
            - availability_zone_ids
            service_name: service_name
            service_id: service_id
          status: null
        - availability_zone_ids:
          - availability_zone_ids
          - availability_zone_ids
          endpoint_service_id: endpoint_service_id
          name: name
          cloud_provider: null
          region_name: region_name
          aws:
            availability_zone_ids:
            - availability_zone_ids
            - availability_zone_ids
            service_name: service_name
            service_id: service_id
          status: null
      properties:
        services:
          description: services contains a list of all cluster related services.
          items:
            $ref: '#/components/schemas/PrivateEndpointService'
          type: array
      required:
      - services
      type: object
    PrivateEndpointTrustedOwner:
      description: |-
        PrivateEndpointTrustedOwner represents a trusted owner entry for private
        endpoint connections.
      example:
        cluster_id: cluster_id
        external_owner_id: external_owner_id
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        type: null
      properties:
        cluster_id:
          description: cluster_id identifies the cluster to which this trusted owner
            entry applies.
          type: string
        created_at:
          description: created_at is the time at which the entry was created.
          format: date-time
          type: string
        external_owner_id:
          description: |-
            external_owner_id is the identifier of the owner within the cloud provider
            for private endpoint connections. A wildcard character ("*") can be used to
            denote all owners.
          type: string
        id:
          description: id is a UUID that uniquely identifies this trusted owner entry.
          type: string
        type:
          $ref: '#/components/schemas/PrivateEndpointTrustedOwnerType.Type'
      required:
      - cluster_id
      - created_at
      - external_owner_id
      - id
      - type
      title: PrivateEndpointTrustedOwner
      type: object
    PrivateEndpointTrustedOwnerType.Type:
      description: " - AWS_ACCOUNT_ID: AWS_ACCOUNT_ID represents the 12-digit AWS\
        \ account number."
      enum:
      - AWS_ACCOUNT_ID
      type: string
    PrometheusMetricExportInfo:
      example:
        cluster_id: cluster_id
        user_message: user_message
        targets:
          key: targets
        status: null
      properties:
        cluster_id:
          type: string
        status:
          $ref: '#/components/schemas/MetricExportStatus.Type'
        targets:
          additionalProperties:
            type: string
          description: targets is a map of ports exposing metrics to regions.
          type: object
        user_message:
          type: string
      required:
      - cluster_id
      title: PrometheusMetricExportInfo
      type: object
    QuantityUnit.Type:
      enum:
      - HOURS
      - REQUEST_UNITS
      - GIB
      - GIB_HOURS
      - VCPU_HOURS
      type: string
    Region:
      properties:
        internal_dns:
          description: |-
            internal_dns is the internal DNS name of the cluster within the cloud
            provider's network. It is used to connect to the cluster with AWS
            PrivateLink, Azure Private Link, and GCP VPC Peering, but not GCP Private
            Service Connect.
          type: string
        name:
          type: string
        node_count:
          description: node_count will be 0 for Serverless clusters.
          format: int32
          type: integer
        primary:
          description: primary is true only for the primary region in a Multi Region
            Serverless cluster.
          type: boolean
        private_endpoint_dns:
          description: |-
            private_endpoint_dns is the DNS name of the cluster which is used to
            connect to the cluster with GCP Private Service Connect.
          type: string
        sql_dns:
          description: sql_dns is the DNS name of SQL interface of the cluster. It
            is used to connect to the cluster with IP allowlisting.
          type: string
        ui_dns:
          description: ui_dns is the DNS name used when connecting to the DB Console
            for the cluster.
          type: string
      required:
      - internal_dns
      - name
      - node_count
      - private_endpoint_dns
      - sql_dns
      - ui_dns
      type: object
    RegionalDisruptorSpecification:
      description: |-
        RegionalDisruptorSpecification represents how a region is disrupted. To
        reduce ambiguity, a RegionalDisruptorSpecification should not represent a
        healthy cluster - there should be at least some disrupted pods.
      example:
        is_whole_region: true
        pods:
        - pods
        - pods
        azs:
        - azs
        - azs
        region_code: region_code
      properties:
        azs:
          items:
            type: string
          title: |-
            azs represents each availability zone that should be disrupted. The AZs for
            a cluster can be found in the db-console under the Advanced Debug -
            Localities section. The AZ should not include the cloud provider name
            prefix.  (i.e. us-east1-a)
          type: array
        is_whole_region:
          description: |-
            is_whole_region denotes whether the whole region should be disrupted.  If a
            specific pod or az is passed, this value should be false.
          type: boolean
        pods:
          description: |-
            pods represents each individual CRDB pod name that should be disrupted.
            Pod names can be found using the
            [ListClusterNodes api](https://www.cockroachlabs.com/docs/api/cloud/v1#get-/api/v1/clusters/-cluster_id-/nodes).
          items:
            type: string
          type: array
        region_code:
          description: |-
            region_code is the cloud provider specific region code of the region. (i.e
            us-east1 for gcp, us-east-1 for aws, eastus for azure). Region names for
            each node the cluster can be found using the
            [ListClusterNodes api](https://www.cockroachlabs.com/docs/api/cloud/v1#get-/api/v1/clusters/-cluster_id-/nodes).
          type: string
      required:
      - is_whole_region
      - region_code
      type: object
    ReleaseType.Type:
      enum:
      - REGULAR
      - INNOVATION
      type: string
    RemovePrivateEndpointTrustedOwnerResponse:
      example:
        trusted_owner:
          cluster_id: cluster_id
          external_owner_id: external_owner_id
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          type: null
      properties:
        trusted_owner:
          $ref: '#/components/schemas/PrivateEndpointTrustedOwner'
      required:
      - trusted_owner
      type: object
    ReplicationStreamStatus.Type:
      description: |-
        status describes the desired status of the replication stream.

         - STARTING: signifies that a stream is starting
         - REPLICATING: during an update request, status 'REPLICATING' is allowed to transition to 'FAILING_OVER' or 'CANCELED'.
        Other status transitions are not supported.
         - FAILING_OVER: used to trigger a failover, or to signify that a failover is occurring.
         - COMPLETED: signifies that a failover is complete.
         - CANCELED: signifies that a stream is canceled.
      enum:
      - STARTING
      - REPLICATING
      - FAILING_OVER
      - COMPLETED
      - CANCELED
      type: string
    Resource:
      example:
        id: id
        type: null
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ResourceType.Type'
      required:
      - type
      type: object
    ResourceType.Type:
      description: |2-
         - ORGANIZATION: An organization.
         - CLUSTER: A cluster resource.
         - FOLDER: Preview: A folder resource.
      enum:
      - ORGANIZATION
      - CLUSTER
      - FOLDER
      type: string
    Restore:
      example:
        backup_id: 1234abcd-1234-1234-abcd-12345678abcd
        completion_percent: 0
        created_at: 2025-07-09T15:04:05Z
        id: abcd1234-5678-90ab-cdef-1234567890ab
        status: PENDING
        type: TABLE
      properties:
        backup_id:
          description: The ID of the backup used for this restore operation.
          type: string
        completion_percent:
          description: |-
            The percentage of the restore operation that has been completed.
            The value ranges from 0 to 1.
          format: float
          type: number
        created_at:
          description: The time at which the restore operation was initiated.
          format: date-time
          type: string
        id:
          description: The unique identifier associated with the restore.
          type: string
        status:
          $ref: '#/components/schemas/RestoreStatus.Type'
        type:
          $ref: '#/components/schemas/RestoreType.Type'
      required:
      - backup_id
      - completion_percent
      - created_at
      - id
      - status
      - type
      type: object
    RestoreItem:
      properties:
        Database:
          type: string
        Schema:
          type: string
        Table:
          type: string
      required:
      - database
      type: object
    RestoreOpts:
      properties:
        into_db:
          description: |-
            Specifies the target database to restore the table into during a
            table restore operation. If not set, the table will be restored
            into the database it belonged to in the source backup.
          type: string
        new_db_name:
          description: |-
            Specifies the name of the database to create during a
            database restore operation. If not set, the name defaults to
            the original database name from the source cluster.
          type: string
        schema_only:
          description: |-
            If set, only the schema will be restored and no user data will
            be included.
          type: boolean
        skip_localities_check:
          description: |-
            Allows the restore operation to continue in the event that there
            are mismatched localities between the backup and target cluster.
            Useful when restoring multi-region tables to a cluster missing
            some localities.
          type: boolean
        skip_missing_foreign_keys:
          description: |-
            Allows a table to be restored even if it has foreign key
            constraints referencing rows that no longer exist in the target
            cluster.
          type: boolean
        skip_missing_sequences:
          title: |-
            Allows a table to be restored even if it contains a column whose
            `DEFAULT` value depends on a sequence.
            (See https://www.cockroachlabs.com/docs/stable/show-sequences)
          type: boolean
      type: object
    RestoreStatus.Type:
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      type: string
    RestoreType.Type:
      enum:
      - CLUSTER
      - DATABASE
      - TABLE
      type: string
    SQLUser:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    ScimAuthenticationScheme:
      example:
        documentationUri: documentationUri
        name: name
        description: description
        specUri: specUri
        type: type
        primary: true
      properties:
        description:
          type: string
        documentationUri:
          type: string
        name:
          type: string
        primary:
          type: boolean
        specUri:
          type: string
        type:
          type: string
      required:
      - description
      - name
      - type
      title: ScimAuthenticationScheme
      type: object
    ScimBulkSupport:
      example:
        maxPayloadSize: 6
        maxOperations: 0
        supported: true
      properties:
        maxOperations:
          format: int32
          type: integer
        maxPayloadSize:
          format: int32
          type: integer
        supported:
          type: boolean
      required:
      - maxOperations
      - maxPayloadSize
      - supported
      title: ScimBulkSupport
      type: object
    ScimChangePasswordSupport:
      example:
        supported: true
      properties:
        supported:
          type: boolean
      required:
      - supported
      title: ScimChangePasswordSupport
      type: object
    ScimEmail:
      example:
        display: display
        type: type
        value: value
        primary: true
      properties:
        display:
          type: string
        primary:
          type: boolean
        type:
          type: string
        value:
          type: string
      required:
      - value
      type: object
    ScimEtagSupport:
      example:
        maxResults: 1
        supported: true
      properties:
        maxResults:
          format: int32
          type: integer
        supported:
          type: boolean
      required:
      - supported
      title: ScimEtagSupport
      type: object
    ScimFilterSupport:
      example:
        maxResults: 5
        supported: true
      properties:
        maxResults:
          format: int32
          type: integer
        supported:
          type: boolean
      required:
      - maxResults
      - supported
      title: ScimFilterSupport
      type: object
    ScimGroup:
      description: SCIM 2.0 Group Resource
      example:
        displayName: displayName
        meta:
          created: created
          location: location
          lastModified: lastModified
          resourceType: resourceType
        members:
        - ref: ref
          display: display
          type: type
          value: value
        - ref: ref
          display: display
          type: type
          value: value
        schemas:
        - schemas
        - schemas
        externalId: externalId
        id: id
      properties:
        displayName:
          type: string
        externalId:
          type: string
        id:
          type: string
        members:
          items:
            $ref: '#/components/schemas/ScimResource'
          type: array
        meta:
          $ref: '#/components/schemas/ScimMetadata'
        schemas:
          items:
            type: string
          type: array
      required:
      - displayName
      - id
      - schemas
      title: ScimGroup
      type: object
    ScimMetadata:
      example:
        created: created
        location: location
        lastModified: lastModified
        resourceType: resourceType
      properties:
        created:
          type: string
        lastModified:
          type: string
        location:
          type: string
        resourceType:
          type: string
      title: meta
      type: object
    ScimName:
      example:
        familyName: familyName
        givenName: givenName
      properties:
        familyName:
          type: string
        givenName:
          type: string
      title: name
      type: object
    ScimOperations:
      properties:
        op:
          type: string
        path:
          type: string
        value: {}
      required:
      - op
      type: object
    ScimResource:
      example:
        ref: ref
        display: display
        type: type
        value: value
      properties:
        display:
          type: string
        ref:
          type: string
        type:
          type: string
        value:
          type: string
      title: SCIM
      type: object
    ScimResourceType:
      example:
        schema: schema
        endpoint: endpoint
        meta:
          created: created
          location: location
          lastModified: lastModified
          resourceType: resourceType
        schemas:
        - schemas
        - schemas
        name: name
        description: description
        id: id
      properties:
        description:
          type: string
        endpoint:
          type: string
        id:
          type: string
        meta:
          $ref: '#/components/schemas/ScimMetadata'
        name:
          type: string
        schema:
          type: string
        schemas:
          items:
            type: string
          type: array
      required:
      - endpoint
      - name
      - schema
      title: ScimResourceType
      type: object
    ScimSchema:
      example:
        meta:
          created: created
          location: location
          lastModified: lastModified
          resourceType: resourceType
        name: name
        description: description
        attributes:
        - uniqueness: uniqueness
          name: name
          canonicalValues:
          - canonicalValues
          - canonicalValues
          description: description
          referenceTypes:
          - referenceTypes
          - referenceTypes
          mutability: mutability
          caseExact: true
          multiValued: true
          returned: returned
          type: type
          required: true
          subAttributes:
          - null
          - null
        - uniqueness: uniqueness
          name: name
          canonicalValues:
          - canonicalValues
          - canonicalValues
          description: description
          referenceTypes:
          - referenceTypes
          - referenceTypes
          mutability: mutability
          caseExact: true
          multiValued: true
          returned: returned
          type: type
          required: true
          subAttributes:
          - null
          - null
        id: id
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/ScimSchemaAttribute'
          type: array
        description:
          type: string
        id:
          type: string
        meta:
          $ref: '#/components/schemas/ScimMetadata'
        name:
          type: string
      required:
      - id
      title: ScimSchema
      type: object
    ScimSchemaAttribute:
      example:
        uniqueness: uniqueness
        name: name
        canonicalValues:
        - canonicalValues
        - canonicalValues
        description: description
        referenceTypes:
        - referenceTypes
        - referenceTypes
        mutability: mutability
        caseExact: true
        multiValued: true
        returned: returned
        type: type
        required: true
        subAttributes:
        - null
        - null
      properties:
        canonicalValues:
          items:
            type: string
          type: array
        caseExact:
          type: boolean
        description:
          type: string
        multiValued:
          type: boolean
        mutability:
          type: string
        name:
          type: string
        referenceTypes:
          items:
            type: string
          type: array
        required:
          type: boolean
        returned:
          type: string
        subAttributes:
          items:
            $ref: '#/components/schemas/ScimSchemaAttribute'
          type: array
        type:
          type: string
        uniqueness:
          type: string
      type: object
    ScimSortSupport:
      example:
        supported: true
      properties:
        supported:
          type: boolean
      required:
      - supported
      title: ScimSortSupport
      type: object
    ScimUser:
      description: SCIM 2.0 User Resource
      example:
        emails:
        - display: display
          type: type
          value: value
          primary: true
        - display: display
          type: type
          value: value
          primary: true
        displayName: displayName
        meta:
          created: created
          location: location
          lastModified: lastModified
          resourceType: resourceType
        schemas:
        - schemas
        - schemas
        name:
          familyName: familyName
          givenName: givenName
        active: true
        externalId: externalId
        groups:
        - ref: ref
          display: display
          type: type
          value: value
        - ref: ref
          display: display
          type: type
          value: value
        id: id
        userName: userName
      properties:
        active:
          type: boolean
        displayName:
          type: string
        emails:
          items:
            $ref: '#/components/schemas/ScimEmail'
          type: array
        externalId:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/ScimResource'
          type: array
        id:
          type: string
        meta:
          $ref: '#/components/schemas/ScimMetadata'
        name:
          $ref: '#/components/schemas/ScimName'
        schemas:
          items:
            type: string
          type: array
        userName:
          type: string
      required:
      - id
      - schemas
      title: ScimUser
      type: object
    ServerlessClusterConfig:
      properties:
        routing_id:
          description: routing_id is used to identify the cluster in a connection
            string.
          type: string
        upgrade_type:
          $ref: '#/components/schemas/UpgradeType.Type'
        usage_limits:
          $ref: '#/components/schemas/UsageLimits'
      required:
      - routing_id
      - upgrade_type
      type: object
    ServerlessClusterCreateSpecification:
      properties:
        primary_region:
          description: |-
            Preview: Specify which region should be made the primary region.
            This is only applicable to multi-region Serverless clusters.
            This field is required if you create the cluster in more than
            one region.
          type: string
        regions:
          description: |-
            Region values should match the cloud provider's zone code.
            For example, for Oregon, set region_name to "us-west2" for
            GCP and "us-west-2" for AWS.
          items:
            type: string
          type: array
        upgrade_type:
          $ref: '#/components/schemas/UpgradeType.Type'
        usage_limits:
          $ref: '#/components/schemas/UsageLimits'
        with_empty_ip_allowlist:
          description: |-
            WithEmptyIPAllowlist creates a cluster with no entries in the IP Allowlist.
            By default, Serverless clusters have one IP allowlist entry that opens the cluster to any IP.
            Set this property to true to ensure the cluster is closed to public traffic by default.
          type: boolean
      required:
      - regions
      type: object
    ServerlessClusterUpdateSpecification:
      properties:
        primary_region:
          description: |-
            Specify which region should be made the primary region.
            This is only applicable to multi-region Serverless clusters.
            This field is required if the regions field contains more than one region.
          type: string
        regions:
          description: |-
            Region values should match the cloud provider's zone code.
            For example, for Oregon, set region_name to "us-west2" for
            GCP and "us-west-2" for AWS. If this field is provided, the cluster's
            regions will be changed to match this list.
            Regions cannot currently be removed.
          items:
            type: string
          type: array
        upgrade_type:
          $ref: '#/components/schemas/UpgradeType.Type'
        usage_limits:
          $ref: '#/components/schemas/UsageLimits'
      type: object
    ServiceAccount:
      description: |-
        A service account is an identity scoped to an organization that
        represents a non-human user.
      example:
        created_at: 2022-03-22T20:23:11.285067Z
        creator_name: creator
        description: ""
        group_roles: []
        id: 12345678-1234-1234-1234-123456789012
        name: SA Name
        roles:
        - name: CLUSTER_ADMIN
          resource:
            type: ORGANIZATION
      properties:
        created_at:
          description: created_at represents the creation time of the service account.
          format: date-time
          type: string
        creator_name:
          description: creator_name is the name of user that created the service account.
          type: string
        description:
          description: description of the service account.
          type: string
        group_roles:
          description: roles that the service account has inherited via a group.
          items:
            $ref: '#/components/schemas/BuiltInFromGroups'
          type: array
        id:
          description: The ID of the service account.
          type: string
        name:
          description: name of the service account.
          type: string
        roles:
          description: roles that are assigned to the service account.
          items:
            $ref: '#/components/schemas/BuiltInRole'
          type: array
      required:
      - created_at
      - creator_name
      - description
      - group_roles
      - id
      - name
      - roles
      title: ServiceAccount
      type: object
    SetAWSEndpointConnectionStatus.Type:
      description: |2-
         - AVAILABLE: accept/verify the connection on the service side.
         - REJECTED: reject the connection on the service side.
      enum:
      - AVAILABLE
      - REJECTED
      type: string
    Status:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/Any'
          type: array
        message:
          type: string
      type: object
    UpdateApiKeySpecification:
      example:
        name: new name
      properties:
        name:
          description: name of the api key.
          example: new name
          type: string
      type: object
    UpdateBackupConfigurationSpec:
      example:
        enabled: true
        frequency_minutes: 60
        retention_days: 7
      properties:
        enabled:
          description: Indicates whether backups are enabled.
          type: boolean
        frequency_minutes:
          description: |-
            How frequently in minutes that backups are taken, which will determine the
            [RPO](https://www.cockroachlabs.com/docs/stable/disaster-recovery-overview#resilience-strategy)
            of the cluster.  Valid values are [5, 10, 15, 30, 60, 240, 1440].
          format: int32
          type: integer
        retention_days:
          description: |-
            The number of days to retain backups for. Can only be set once, further
            changes require opening a support ticket. Valid values are [2, 7, 30, 90,
            365].
          format: int32
          type: integer
      type: object
    UpdateClusterSpecification:
      example:
        dedicated:
          hardware:
            machine_spec:
              num_virtual_cpus: 8
          region_nodes:
            us-central1: 5
            us-west1: 3
      properties:
        cockroach_version:
          description: |-
            The desired CockroachDB major version for the cluster.  It can be used to
            orchestrate version changes.  Setting the version to a later version will
            initiate an upgrade to that version.  After an upgrade is initiated but
            before it's finalized, setting the version back to the previous version
            will initiate a rollback.
          type: string
        dedicated:
          $ref: '#/components/schemas/DedicatedClusterUpdateSpecification'
        delete_protection:
          $ref: '#/components/schemas/DeleteProtectionState.Type'
        labels:
          additionalProperties:
            type: string
          description: |-
            labels are key-value pairs used to organize and categorize resources.
            If the labels field is included in the request: Any existing labels on the cluster
            that are not included will be removed, and any new labels specified will be added.
            If the labels field is omitted from the request entirely, all existing labels will
            remain unchanged.
          type: object
        parent_id:
          description: |-
            Preview: The parent ID is a folder ID. An empty string or "root"
            represents the root level.
          type: string
        plan:
          $ref: '#/components/schemas/Plan.Type'
        serverless:
          $ref: '#/components/schemas/ServerlessClusterUpdateSpecification'
        upgrade_status:
          $ref: '#/components/schemas/ClusterUpgradeStatus.Type'
      type: object
    UpdateFolderSpecification:
      description: Set `parent_id` to empty string '' or 'root' to move a folder to
        the root level.
      example:
        name: folder_name
        parent_id: 12345678-1234-1234-1234-123456789012
      properties:
        labels:
          additionalProperties:
            type: string
          description: |-
            labels are key-value pairs used to organize and categorize resources.
            If the labels field is included in the request: Any existing labels on the folder
            that are not included will be removed, and any new labels specified will be added.
            If the labels field is omitted from the request entirely, all existing labels will
            remain unchanged.
          type: object
        name:
          type: string
        parent_id:
          type: string
      type: object
    UpdatePhysicalReplicationStreamSpec:
      example:
        failover_at: 2006-01-03T15:04:05Z
        status: FAILING_OVER
      properties:
        failover_at:
          description: |-
            failover_at is the crdb system time at which failover occurs. If the user
            sets the status to 'FAILING_OVER' but omits failover_at, the failover time
            will default to the latest consistent replicated time. Otherwise, the user
            can pick a time up to one hour in the future to schedule a failover, or a
            time in the past to restore the cluster to a recent state. If the
            time is in the past, the API will make a best-effort attempt to
            validate that the time is not earlier than the retained time. In
            this case, if the retained time is updated in between validation
            and failover execution and the failover time becomes invalid, the
            stream will failover to the retained time. failover_at is not required
            when updating the status to 'CANCELED'.
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ReplicationStreamStatus.Type'
      type: object
    UpdateServiceAccountSpecification:
      example:
        description: new description
        name: new name
      properties:
        description:
          description: description of the service account.
          type: string
        name:
          description: name of the service account.
          type: string
      type: object
    UpgradeType.Type:
      enum:
      - MANUAL
      - AUTOMATIC
      type: string
    UsageLimits:
      properties:
        provisioned_virtual_cpus:
          description: |-
            provisioned_virtual_cpus is the maximum number of vCPUs that the cluster
            can use. Once this limit is reached, operation latency may increase due to
            throttling. It is an error for this to be zero.
          format: int64
          type: integer
        request_unit_limit:
          description: |-
            request_unit_limit is the maximum number of request units that the cluster
            can consume during the month. If this limit is exceeded, then the cluster
            is disabled until the limit is increased, or until the beginning of the
            next month when more free request units are granted. It is an error for
            this to be zero.
          format: int64
          type: integer
        storage_mib_limit:
          description: |-
            storage_mib_limit is the maximum number of Mebibytes of storage that the
            cluster can have at any time during the month. If this limit is exceeded,
            then the cluster is throttled; only one SQL connection is allowed at a
            time, with the expectation that it is used to delete data to reduce storage
            usage. It is an error for this to be zero.
          format: int64
          type: integer
      type: object
    UserGroupRoleGrant:
      example:
        group_roles:
        - role:
            resource:
              id: id
              type: null
            name: null
          group_names:
          - group_names
          - group_names
        - role:
            resource:
              id: id
              type: null
            name: null
          group_names:
          - group_names
          - group_names
        user_id: user_id
      properties:
        group_roles:
          items:
            $ref: '#/components/schemas/BuiltInFromGroups'
          type: array
        user_id:
          type: string
      type: object
    UserRoleGrants:
      example:
        roles:
        - name: CLUSTER_ADMIN
          resource:
            id: example_cluster_id
            type: CLUSTER
        user_id: 12345678-1234-1234-1234-123456789012
      properties:
        roles:
          items:
            $ref: '#/components/schemas/BuiltInRole'
          type: array
        user_id:
          type: string
      required:
      - roles
      - user_id
      type: object
    UpdateGroupRequest:
      example:
        displayName: Test SCIM
        id: 23a35c27-23d3-4c03-b4c5-6443c09e7173
        members:
        - display: croach@example.com
          value: 45a35c27-23d3-4d03-c4c5-9043c09e7175
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:Group
      properties:
        displayName:
          type: string
        externalId:
          type: string
        members:
          items:
            $ref: '#/components/schemas/ScimResource'
          type: array
        schemas:
          items:
            type: string
          type: array
      required:
      - displayName
      - schemas
      title: UpdateGroupRequest
      type: object
    PatchGroupRequest:
      example:
        Operations:
        - op: replace
          path: displayName
          value: Updated Group Name
        - op: replace
          path: externalId
          value: ext-123
        - op: remove
          path: members
        - op: add
          path: externalId
          value: new-external-id
        - op: add
          path: members
          value:
          - value: 45a35c27-23d3-4d03-c4c5-9043c09e7175
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:PatchOp
      properties:
        Operations:
          items:
            $ref: '#/components/schemas/ScimOperations'
          type: array
        schemas:
          description: |-
            A list of one or more URIs identifying SCIM schemas that define the structure
            of the attributes in the request. The only supported schema at this time is
            "urn:ietf:params:scim:api:messages:2.0:PatchOp".
          items:
            type: string
          type: array
      required:
      - Operations
      - schemas
      title: PatchGroupRequest
      type: object
    GetGroupRequest:
      example:
        attributes: attributes
        excludedAttributes: excludedAttributes
      properties:
        attributes:
          type: string
        excludedAttributes:
          type: string
      title: GetGroupRequest
      type: object
    UpdateUserRequest:
      example:
        active: true
        emails:
        - display: croach@example.com
          primary: true
          type: work
          value: croach@example.com
        name:
          familyName: Roach
          givenName: Carl
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
      properties:
        active:
          type: boolean
        displayName:
          type: string
        emails:
          items:
            $ref: '#/components/schemas/ScimEmail'
          type: array
        externalId:
          type: string
        name:
          $ref: '#/components/schemas/ScimName'
        schemas:
          items:
            type: string
          type: array
        userName:
          type: string
      title: UpdateUserRequest
      type: object
    PatchUserRequest:
      example:
        Operations:
        - op: replace
          path: userName
          value: newUserName
        - op: replace
          value:
            displayName: New Name
            emails:
            - primary: true
              value: new@example.com
        - op: remove
          path: externalId
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:PatchOp
      properties:
        Operations:
          items:
            $ref: '#/components/schemas/ScimOperations'
          type: array
        schemas:
          description: |-
            A list of one or more URIs identifying SCIM schemas that define the structure
            of the attributes in the request. The only supported schema at this time is
            "urn:ietf:params:scim:api:messages:2.0:PatchOp".
          items:
            type: string
          type: array
      required:
      - Operations
      - schemas
      title: PatchUserRequest
      type: object
    GetUserRequest:
      example:
        attributes: attributes
        excludedAttributes: excludedAttributes
      properties:
        attributes:
          type: string
        excludedAttributes:
          type: string
      title: GetUserRequest
      type: object
    SetClientCACertRequest:
      example:
        x509_pem_cert: '-----BEGIN CERTIFICATE-----...'
      properties:
        x509_pem_cert:
          type: string
      required:
      - x509_pem_cert
      title: SetClientCACertRequest
      type: object
    UpdateClientCACertRequest:
      example:
        x509_pem_cert: '-----BEGIN CERTIFICATE-----...'
      properties:
        x509_pem_cert:
          type: string
      title: UpdateClientCACertRequest
      type: object
    CMEKClusterSpecification:
      example:
        region_specs:
        - key_spec:
            auth_principal: arn:aws:iam::account:role/role-name-with-path
            type: AWS_KMS
            uri: arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key
          region: us-central1
      properties:
        region_specs:
          items:
            $ref: '#/components/schemas/CMEKRegionSpecification'
          type: array
      required:
      - region_specs
      title: CMEKClusterSpecification
      type: object
    UpdateCMEKStatusRequest:
      example:
        action: REVOKE
      properties:
        action:
          $ref: '#/components/schemas/CMEKCustomerAction'
      required:
      - action
      title: UpdateCMEKStatusRequest
      type: object
    CreateDatabaseRequest:
      example:
        name: example_database_name
      properties:
        name:
          type: string
      required:
      - name
      title: CreateDatabaseRequest
      type: object
    UpdateDatabaseRequest:
      example:
        name: example_database_name
        new_name: example_new_database_name
      properties:
        name:
          type: string
        new_name:
          type: string
      required:
      - name
      - new_name
      title: UpdateDatabaseRequest
      type: object
    UpdateDatabaseRequest_1:
      example:
        name: example_database_name
        new_name: example_new_database_name
      properties:
        new_name:
          type: string
      required:
      - new_name
      title: UpdateDatabaseRequest
      type: object
    CockroachCloud_UpdateClusterDisruption_request:
      properties:
        regional_disruptor_specifications:
          description: |-
            regional_disruptor_specifications specify how regions are to be
            disrupted. Any Cluster region that is not specified here will not be
            disrupted. A cluster region that was previously disrupted but is not listed
            here will be removed from disruption. To stop all disruptions, set this
            to an empty list or omit it from the request.
          items:
            $ref: '#/components/schemas/RegionalDisruptorSpecification'
          type: array
      type: object
    EnableLogExportRequest:
      example:
        auth_principal: my-gcp-project-id
        groups:
        - channels:
          - OPS
          - HEALTH
          log_name: devops
          min_level: WARNING
        log_name: default
        omitted_channels:
        - SESSIONS
        - SQL_PERF
        redact: true
        shared_key: shared-key
        type: GCP_CLOUD_LOGGING
      properties:
        auth_principal:
          title: |-
            auth_principal is used in different contexts based on integration.
            CloudWatch: AWS Role ARN that identifies a role
            that the cluster account can assume to write to CloudWatch
            GCP Cloud Logging: GCP Project ID that the cluster service account
            has permissions to write to for cloud logging.
            Azure Log Analytics: CustomerID or WorkspaceID
          type: string
        aws_external_id:
          description: |-
            aws_external_id to include when assuming the IAM role specified by role_arn.
            Optional. A specific value may be required by the role's trust policy.
            Only supported for Advanced clusters on AWS. If provided for a Standard cluster,
            the request is rejected.
          type: string
        azure_shared_key:
          description: |-
            The primary or the secondary connected sources client authentication key.
            This is used to export logs to Azure Log Analytics.
          type: string
        groups:
          description: |-
            groups is a collection of log group configurations that allows the
            customer to define collections of CRDB log channels that are aggregated
            separately at the target sink.
          items:
            $ref: '#/components/schemas/LogExportGroup'
          type: array
        log_name:
          description: log_name is an identifier for the logs in the customer's log
            sink.
          type: string
        omitted_channels:
          description: |-
            omitted_channels is a list of channels that the user does not want to
            export logs for.
          items:
            type: string
          type: array
        redact:
          description: |-
            redact allows the customer to set a default redaction policy for
            logs before they are exported to the target sink. If a group config
            omits a redact flag and this one is set to `true`, then that group
            will receive redacted logs.
          type: boolean
        region:
          description: |-
            region allows the customer to override the destination region for
            all logs for a cluster.
          type: string
        type:
          $ref: '#/components/schemas/LogExportType'
      required:
      - auth_principal
      - log_name
      - type
      title: EnableLogExportRequest
      type: object
    EnableCloudWatchMetricExportRequest:
      example:
        external_id: example_external_id
        log_group_name: example
        role_arn: arn:aws:iam::account:role/ExampleRole
        target_region: us-east-1
      properties:
        external_id:
          description: |-
            external_id to include when assuming the IAM role specified by role_arn.
            Optional. A specific value may be required by the role's trust policy.
            Only supported for Advanced clusters. If provided for a Standard cluster,
            the request is rejected.
          type: string
        log_group_name:
          description: log_group_name is the customized log group name.
          type: string
        role_arn:
          description: |-
            role_arn is the IAM role used to upload metric segments to the
            target AWS account.
          type: string
        target_region:
          description: |-
            target_region specifies the specific AWS region that the metrics will
            be exported to.
          type: string
      required:
      - role_arn
      title: EnableCloudWatchMetricExportRequest
      type: object
    EnableDatadogMetricExportRequest:
      example:
        api_key: datadog_api_key
        site: US1
      properties:
        api_key:
          description: api_key is a Datadog API key.
          type: string
        site:
          $ref: '#/components/schemas/DatadogSite.Type'
      required:
      - api_key
      - site
      title: EnableDatadogMetricExportRequest
      type: object
    AllowlistEntry_1:
      example:
        cidr_ip: 192.168.1.1
        cidr_mask: 32
        name: Example
        sql: true
        ui: true
      properties:
        name:
          type: string
        sql:
          type: boolean
        ui:
          type: boolean
      required:
      - sql
      - ui
      title: AllowlistEntry
      type: object
    SetAwsEndpointConnectionStateRequest:
      example:
        status: AVAILABLE
      properties:
        status:
          $ref: '#/components/schemas/SetAWSEndpointConnectionStatus.Type'
      required:
      - status
      title: SetAwsEndpointConnectionStateRequest
      type: object
    CreateEgressPrivateEndpointRequest:
      example:
        cluster_id: example_cluster_id
        region: us-east-1
        target_service_identifier: arn:aws:s3:::example-bucket
        target_service_type: MSK_SASL_IAM
      properties:
        region:
          description: region represents the region that the endpoint will be created
            in.
          type: string
        target_service_identifier:
          description: |-
            target_service_identifier represents the identifier of the target service.
            User-visible in CRL and CSP consoles as the "thing" the user is telling us to connect to,
            i.e. Service Name for AWS, Service Attachment for GCP, or ARN for AWS MSK.
          type: string
        target_service_type:
          $ref: '#/components/schemas/EgressPrivateEndpointTargetServiceType.Type'
      required:
      - region
      - target_service_identifier
      - target_service_type
      title: CreateEgressPrivateEndpointRequest
      type: object
    UpdateEgressPrivateEndpointDomainNamesRequest:
      example:
        cluster_id: example_cluster_id
        domain_names:
        - example.com
        - api.example.com
        id: example_id
      properties:
        domain_names:
          description: domain_names are the domain names to associate with the egress
            private endpoint.
          items:
            type: string
          type: array
      required:
      - domain_names
      title: UpdateEgressPrivateEndpointDomainNamesRequest
      type: object
    AddEgressRuleRequest:
      example:
        cluster_id: 35c4abb2-bb66-46d7-afed-25ebef5ed100
        description: egress for GCP storage buckets
        destination: storage.googleapis.com
        name: roach-buckets
        ports:
        - 443
        - 80
        type: FQDN
      properties:
        description:
          description: description is text that serves to document the rules purpose.
          type: string
        destination:
          description: |-
            destination is the endpoint (or subnetwork if CIDR) to which traffic is
            allowed.
          type: string
        idempotency_key:
          description: |-
            idempotency_key uniquely identifies this request. If not set, it will be
            set by the server.
          type: string
        name:
          description: name is the name of the egress rule.
          type: string
        paths:
          description: |-
            Deprecated: This field is ignored and will be removed in the next version.
            paths are the allowed URL paths. If empty, all paths are allowed. Only
            valid if Type="FQDN".
          items:
            type: string
          type: array
        ports:
          description: |-
            ports are the allowed ports for TCP protocol. If Empty, all ports are
            allowed.
          items:
            format: int32
            type: integer
          type: array
        type:
          description: |-
            type classifies the Destination field. Valid types include: "FQDN",
            "CIDR".
          type: string
      required:
      - description
      - destination
      - name
      - type
      title: AddEgressRuleRequest
      type: object
    SetEgressTrafficPolicyRequest:
      example:
        idempotency_key: idempotency_key
        allow_all: true
      properties:
        allow_all:
          description: |-
            allow_all, if true results in unrestricted egress traffic. If false, egress
            traffic is set to default-deny and is managed via the Egress Rule
            Management API.
          type: boolean
        idempotency_key:
          description: |-
            idempotency_key uniquely identifies this request. If not set, it will be
            set by the server.
          type: string
      required:
      - allow_all
      title: SetEgressTrafficPolicyRequest
      type: object
    EditEgressRuleRequest:
      example:
        cluster_id: 35c4abb2-bb66-46d7-afed-25ebef5ed100
        ports:
        - 443
        - 80
        rule_id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
      properties:
        description:
          description: description is text that serves to document the rules purpose.
          type: string
        destination:
          description: |-
            destination is a CIDR range or fully-qualified domain name to which
            outgoing traffic should be allowed. This field is required.
          type: string
        idempotency_key:
          description: |-
            idempotency_key uniquely identifies this request. If not set, it will be
            set by the server.
          type: string
        paths:
          description: |-
            Deprecated: This field is ignored and will be removed in the next version.
            paths are the allowed URL paths. If empty, all paths are allowed. Only
            valid if Type="FQDN".
          items:
            type: string
          type: array
        ports:
          description: |-
            ports are the allowed ports for TCP protocol. If empty, all ports are
            allowed.
          items:
            format: int32
            type: integer
          type: array
        type:
          description: |-
            type is the destination type of this rule. Example values are
            FQDN or CIDR. This field is required.
          type: string
      title: EditEgressRuleRequest
      type: object
    AddPrivateEndpointConnectionRequest:
      example:
        cluster_id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa
        endpoint_id: e-65de2gf3
      properties:
        endpoint_id:
          description: |-
            endpoint_id is the id of the private endpoint associated with a cluster's
            private endpoint service. The private endpoint is customer-created and
            its id is generated by the cloud provider at endpoint creation time.
          type: string
      required:
      - endpoint_id
      title: AddPrivateEndpointConnectionRequest
      type: object
    AddPrivateEndpointTrustedOwnerRequest:
      example:
        external_owner_id: "012345678901"
        type: AWS_ACCOUNT_ID
      properties:
        external_owner_id:
          description: |-
            external_owner_id is the identifier of the owner within the cloud provider
            for private endpoint connections. A wildcard character ("*") can be used to
            denote all owners.
          type: string
        type:
          $ref: '#/components/schemas/PrivateEndpointTrustedOwnerType.Type'
      required:
      - external_owner_id
      - type
      title: AddPrivateEndpointTrustedOwnerRequest
      type: object
    CreateSQLUserRequest:
      example:
        name: example_username
        password: example_password
      properties:
        name:
          type: string
        password:
          type: string
      required:
      - name
      - password
      title: CreateSQLUserRequest
      type: object
    UpdateSQLUserPasswordRequest:
      example:
        password: example_new_password
      properties:
        password:
          type: string
      required:
      - password
      title: UpdateSQLUserPasswordRequest
      type: object
    CockroachCloud_CreateRestore_request:
      example:
        backup_id: 1234abcd-1234-1234-abcd-12345678abcd
        destination_cluster_id: 12345678-1234-1234-1234-123456789012
        objects:
        - database: database1
          schema: schema1
          table: table1
        - database: database1
          schema: schema1
          table: table2
        restore_opts:
          into_db: database2
          schema_only: true
        type: TABLE
      properties:
        backup_id:
          description: |-
            The ID of the backup from which data will be restored.
            If backup_id is not set, the restore will use the latest
            available backup from source_cluster_id.
          type: string
        objects:
          description: |-
            The list of objects to restore. Required when type is DATABASE
            or TABLE.
          items:
            $ref: '#/components/schemas/RestoreItem'
          type: array
        restore_opts:
          $ref: '#/components/schemas/RestoreOpts'
        source_cluster_id:
          description: The ID of the cluster containing the backup to be restored.
          type: string
        type:
          $ref: '#/components/schemas/RestoreType.Type'
      required:
      - type
      type: object
    UpdateJWTIssuerRequest:
      example:
        audience: 1234567890abcd
        issuer_url: https://jwt-issuer.example.com
        jwks: "{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"alg\"\
          :\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\"\
          ,\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"
        claim: email
        identity_map:
        - token_identity: /^sso_(.*)$
          cc_identity: \1
        - token_identity: /^sso_(.*)$
          cc_identity: \1
      properties:
        audience:
          example: 1234567890abcd
          title: The intended audience for consuming the JWT
          type: string
        claim:
          example: email
          title: Used to identify the user from the external Identity Provider. Defaults
            to "sub"
          type: string
        identity_map:
          items:
            $ref: '#/components/schemas/JWTIssuerIdentityMapEntry'
          title: A list of mappings to map the external token identity into CockroachDB
            Cloud
          type: array
        issuer_url:
          example: https://jwt-issuer.example.com
          title: The URL of the server issuing JWTs
          type: string
        jwks:
          example: "{\"keys\":[{\"e\":\"AQAB\",\"use\":\"sig\",\"kty\":\"RSA\",\"\
            alg\":\"RS256\",\"n\":\"tid8bJCI5FxtvMiVHq8pRZBGIPaG9mEa1akpIC9munzxA3mWoc-KoR1TGkocu76WFthaZnPS31WJbRVChU6g4EMIg7E8Ltpxifk1PQu0qqbLcpnoI62ojsB7l_Z_lkls0NUzTuKGMMtNoJsDrL1BT0UzcnWerh2PwzDAMpfPgafWdT2IYGTx1gNLcNOWpPhDgMSQqUmIPwCmxdan4i4OMd7lJYQ1WQlN8VnQgbRgHrm1zImY6MPqho9jW3Ub5FwGbunwCDrP9a2dD_5Iwm7_lR82iB4BGlu28WxFn0fm5DgZAeAFSGKE1xblC97WrjnPh2XYTx6pxsea_Hn71VcNSQ\"\
            ,\"kid\":\"9341dedeee2d1869b657fa930300082fe26b3d92\"}]}"
          title: A set of public keys (JWKS) used to verify a JWT
          type: string
      title: UpdateJWTIssuerRequest
      type: object
    CockroachCloud_SetRolesForUser_request:
      example:
        roles:
        - name: CLUSTER_ADMIN
          resource:
            id: example_cluster_id
            type: CLUSTER
        user_id: 12345678-1234-1234-1234-123456789012
      properties:
        roles:
          items:
            $ref: '#/components/schemas/BuiltInRole'
          type: array
      required:
      - roles
      type: object
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http
