{"openapi":"3.0.0","info":{"title":"CockroachDB Cloud API","description":"This is an early access, experimental version of the Cloud API. The interface and output is subject to change, and there may be bugs.","version":"2022-09-20","contact":{"name":"Cockroach Labs Support","url":"https://support.cockroachlabs.com","email":"support@cockroachlabs.com"}},"tags":[{"name":"CockroachCloud"}],"paths":{"/api/v1/clusters":{"get":{"summary":"List clusters owned by an organization.","description":"Sort order: Cluster name","operationId":"CockroachCloud_ListClusters","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListClustersResponse"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"show_inactive","description":"If `true`, show clusters that have been deleted or failed to initialize.","in":"query","required":false,"schema":{"type":"boolean","default":"false"}},{"name":"pagination.page","in":"query","required":false,"schema":{"type":"string"}},{"name":"pagination.limit","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.as_of_time","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pagination.sort_order","description":" - DESC: Sort in descending order. The default order is ascending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters?show_inactive=SOME_BOOLEAN_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"post":{"summary":"Create and initialize a new cluster.","operationId":"CockroachCloud_CreateCluster","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Cluster"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateClusterRequest"}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://cockroachlabs.cloud/api/v1/clusters \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"test-cluster\",\"provider\":\"GCP\",\"spec\":{\"serverless\":{\"regions\":[\"us-central1\"],\"spend_limit\":0}}}'"}]}},"/api/v1/clusters/available-regions":{"get":{"summary":"List the regions available for new clusters and nodes.","description":"Sort order: Distance (based on client IP address)","operationId":"CockroachCloud_ListAvailableRegions","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListAvailableRegionsResponse"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"provider","description":"Optional CloudProvider for filtering.\n\n - GCP: The Google Cloud Platform cloud provider.\n - AWS: The Amazon Web Services cloud provider.","in":"query","required":false,"schema":{"type":"string","enum":["GCP","AWS"]}},{"name":"serverless","description":"Optional filter to only show regions available for serverless clusters.","in":"query","required":false,"schema":{"type":"boolean","default":"false"}},{"name":"pagination.page","in":"query","required":false,"schema":{"type":"string"}},{"name":"pagination.limit","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.as_of_time","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pagination.sort_order","description":" - DESC: Sort in descending order. The default order is ascending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/available-regions?provider=SOME_STRING_VALUE&serverless=SOME_BOOLEAN_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]}},"/api/v1/clusters/{cluster_id}":{"get":{"summary":"Get extended information about a cluster.","operationId":"CockroachCloud_GetCluster","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Cluster"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"delete":{"summary":"Delete a cluster and all of its data.","operationId":"CockroachCloud_DeleteCluster","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Cluster"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"patch":{"summary":"Scale or edit a cluster.","operationId":"CockroachCloud_UpdateCluster","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Cluster"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"field_mask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateClusterSpecification"}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PATCH \\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}?field_mask=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"dedicated\":{\"region_nodes\":{\"us-west1\":3,\"us-central1\":5},\"hardware\":{\"machine_type\":\"n2-standard-8\"}}}'"}]}},"/api/v1/clusters/{cluster_id}/cmek":{"get":{"summary":"Get CMEK-related information for a cluster.","operationId":"CockroachCloud_GetCMEKClusterInfo","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CMEKClusterInfo"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"post":{"summary":"Enable CMEK for a cluster.","operationId":"CockroachCloud_EnableCMEKSpec","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CMEKClusterInfo"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"region_specs":[{"region":"us-central1","key_spec":{"type":"AWS_KMS","uri":"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key","auth_principal":"arn:aws:iam::account:role/role-name-with-path"}}]},"properties":{"region_specs":{"type":"array","items":{"$ref":"#/components/schemas/CMEKRegionSpecification"}}},"title":"CMEKClusterSpecification","required":["region_specs"]}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --data '{\"region_specs\":[{\"region\":\"us-central1\",\"key_spec\":{\"type\":\"AWS_KMS\",\"uri\":\"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\",\"auth_principal\":\"arn:aws:iam::account:role/role-name-with-path\"}}]}'"}]},"put":{"summary":"Enable or update the CMEK spec for a cluster.","operationId":"CockroachCloud_UpdateCMEKSpec","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CMEKClusterInfo"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"region_specs":[{"region":"us-central1","key_spec":{"type":"AWS_KMS","uri":"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key","auth_principal":"arn:aws:iam::account:role/role-name-with-path"}}]},"properties":{"region_specs":{"type":"array","items":{"$ref":"#/components/schemas/CMEKRegionSpecification"}}},"title":"CMEKClusterSpecification","required":["region_specs"]}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --data '{\"region_specs\":[{\"region\":\"us-central1\",\"key_spec\":{\"type\":\"AWS_KMS\",\"uri\":\"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\",\"auth_principal\":\"arn:aws:iam::account:role/role-name-with-path\"}}]}'"}]},"patch":{"summary":"Update the CMEK-related status for a cluster.","operationId":"CockroachCloud_UpdateCMEKStatus","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CMEKClusterInfo"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"action":"REVOKE"},"properties":{"action":{"$ref":"#/components/schemas/CMEKCustomerAction"}},"title":"UpdateCMEKStatusRequest","required":["action"]}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PATCH \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"action\":\"REVOKE\"}'"}]}},"/api/v1/clusters/{cluster_id}/databases":{"get":{"summary":"List databases for a cluster.","description":"Sort order: Database name ascending","operationId":"CockroachCloud_ListDatabases","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ListDatabasesResponse"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"pagination.page","in":"query","required":false,"schema":{"type":"string"}},{"name":"pagination.limit","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.as_of_time","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pagination.sort_order","description":" - DESC: Sort in descending order. The default order is ascending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"post":{"summary":"Create a new database.","operationId":"CockroachCloud_CreateDatabase","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Database"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"name":"example_database_name"},"properties":{"name":{"type":"string"}},"title":"CreateDatabaseRequest","required":["name"]}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"example_database_name\"}'"}]},"patch":{"summary":"Update a database.","operationId":"CockroachCloud_EditDatabase","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Database"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"new_name":"example_new_database_name"},"properties":{"name":{"type":"string"},"new_name":{"type":"string"}},"title":"UpdateDatabaseRequest","required":["new_name","name"]}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PATCH \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"new_name\":\"example_new_database_name\"}'"}]}},"/api/v1/clusters/{cluster_id}/databases/{name}":{"delete":{"summary":"Delete a database.","operationId":"CockroachCloud_DeleteDatabase","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Database"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases/{name} \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]}},"/api/v1/clusters/{cluster_id}/logexport":{"get":{"operationId":"CockroachCloud_GetLogExportInfo","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogExportClusterInfo"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"delete":{"operationId":"CockroachCloud_DeleteLogExport","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogExportClusterInfo"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"post":{"operationId":"CockroachCloud_EnableLogExport","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogExportClusterInfo"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"$ref":"#/components/schemas/LogExportType"},"log_name":{"type":"string","description":"log_name is an identifier for the logs in the customer's log sink."},"auth_principal":{"type":"string","description":"auth_principal is either the AWS Role ARN that identifies a role\nthat the cluster account can assume to write to CloudWatch or the\nGCP Project ID that the cluster service account has permissions to\nwrite to for cloud logging."}},"title":"EnableLogExportRequest"}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"type\":\"AWS_CLOUDWATCH\",\"log_name\":\"string\",\"auth_principal\":\"string\"}'"}]}},"/api/v1/clusters/{cluster_id}/networking/allowlist":{"get":{"summary":"Get the IP allowlist and propagation status for a cluster.","description":"Sort order: CIDR address","operationId":"CockroachCloud_ListAllowlistEntries","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListAllowlistEntriesResponse"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"pagination.page","in":"query","required":false,"schema":{"type":"string"}},{"name":"pagination.limit","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.as_of_time","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pagination.sort_order","description":" - DESC: Sort in descending order. The default order is ascending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"post":{"summary":"Add a new CIDR address to the IP allowlist.","operationId":"CockroachCloud_AddAllowlistEntry","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllowlistEntry"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllowlistEntry"}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"cidr_ip\":\"192.168.1.1\",\"cidr_mask\":32,\"ui\":true,\"sql\":true,\"name\":\"Example\"}'"}]}},"/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask}":{"delete":{"summary":"Delete an IP allowlist entry.","operationId":"CockroachCloud_DeleteAllowlistEntry","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllowlistEntry"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"cidr_ip","in":"path","required":true,"schema":{"type":"string"}},{"name":"cidr_mask","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask} \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]}},"/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}":{"put":{"summary":"Add a new CIDR address to the IP allowlist.","operationId":"CockroachCloud_AddAllowlistEntry2","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllowlistEntry"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"entry.cidr_ip","in":"path","required":true,"schema":{"type":"string"}},{"name":"entry.cidr_mask","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"cidr_ip":"192.168.1.1","cidr_mask":32,"ui":true,"sql":true,"name":"Example"},"properties":{"ui":{"type":"boolean"},"sql":{"type":"boolean"},"name":{"type":"string"}},"title":"AllowlistEntry","required":["ui","sql"]}}},"description":"AllowlistEntry","required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask} \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --data '{\"cidr_ip\":\"192.168.1.1\",\"cidr_mask\":32,\"ui\":true,\"sql\":true,\"name\":\"Example\"}'"}]},"patch":{"summary":"Update an IP allowlist entry.","operationId":"CockroachCloud_UpdateAllowlistEntry","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllowlistEntry"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"entry.cidr_ip","in":"path","required":true,"schema":{"type":"string"}},{"name":"entry.cidr_mask","in":"path","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"field_mask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"cidr_ip":"192.168.1.1","cidr_mask":32,"ui":true,"sql":true,"name":"Example"},"properties":{"ui":{"type":"boolean"},"sql":{"type":"boolean"},"name":{"type":"string"}},"title":"AllowlistEntry","required":["ui","sql"]}}},"description":"AllowlistEntry","required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PATCH \\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}?field_mask=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --data '{\"cidr_ip\":\"192.168.1.1\",\"cidr_mask\":32,\"ui\":true,\"sql\":true,\"name\":\"Example\"}'"}]}},"/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections":{"get":{"summary":"Lists all AwsEndpointConnections for a given cluster.","operationId":"CockroachCloud_ListAwsEndpointConnections","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AwsEndpointConnections"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","description":"ClusterID is the ID for the cluster.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]}},"/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections/{endpoint_id}":{"patch":{"summary":"Sets the AWS Endpoint Connection state based on what is passed in the body: accepted or rejected.\nThe \"status\" in the returned proto does not reflect the latest post-update status, but rather\nthe status before the state is transitioned.","operationId":"CockroachCloud_SetAwsEndpointConnectionState","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AwsEndpointConnection"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","description":"ClusterID is the ID for the cluster.","in":"path","required":true,"schema":{"type":"string"}},{"name":"endpoint_id","description":"EndpointID is the ID for the VPC endpoint on the customer's side.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"status":{"$ref":"#/components/schemas/AWSEndpointConnectionStatus"}}}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PATCH \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections/{endpoint_id} \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"status\":\"ENDPOINT_PENDING\"}'"}]}},"/api/v1/clusters/{cluster_id}/networking/private-endpoint-services":{"get":{"summary":"Lists all PrivateEndpointServices for a given cluster.","operationId":"CockroachCloud_ListPrivateEndpointServices","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PrivateEndpointServices"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","description":"ClusterID is the ID for the cluster.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-services \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"post":{"summary":"Creates all PrivateEndpointServices for a given cluster.","operationId":"CockroachCloud_CreatePrivateEndpointServices","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PrivateEndpointServices"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","description":"ClusterID is the ID for the cluster.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object"}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-services \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{}'"}]}},"/api/v1/clusters/{cluster_id}/nodes":{"get":{"summary":"List nodes for a cluster.","description":"Sort order: Region name, node name","operationId":"CockroachCloud_ListClusterNodes","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListClusterNodesResponse"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"region_name","description":"Optional filter to limit response to a single region.","in":"query","required":false,"schema":{"type":"string"}},{"name":"pagination.page","in":"query","required":false,"schema":{"type":"string"}},{"name":"pagination.limit","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.as_of_time","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pagination.sort_order","description":" - DESC: Sort in descending order. The default order is ascending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/nodes?region_name=SOME_STRING_VALUE&pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]}},"/api/v1/clusters/{cluster_id}/sql-users":{"get":{"summary":"List SQL users for a cluster.","description":"Sort order: Username","operationId":"CockroachCloud_ListSQLUsers","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListSQLUsersResponse"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"pagination.page","in":"query","required":false,"schema":{"type":"string"}},{"name":"pagination.limit","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.as_of_time","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pagination.sort_order","description":" - DESC: Sort in descending order. The default order is ascending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users?pagination.page=SOME_STRING_VALUE&pagination.limit=SOME_INTEGER_VALUE&pagination.as_of_time=SOME_STRING_VALUE&pagination.sort_order=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]},"post":{"summary":"Create a new SQL user.","operationId":"CockroachCloud_CreateSQLUser","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SQLUser"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"name":"example_username","password":"example_password"},"properties":{"name":{"type":"string"},"password":{"type":"string"}},"title":"CreateSQLUserRequest","required":["name","password"]}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"example_username\",\"password\":\"example_password\"}'"}]}},"/api/v1/clusters/{cluster_id}/sql-users/{name}":{"delete":{"summary":"Delete a SQL user.","operationId":"CockroachCloud_DeleteSQLUser","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SQLUser"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users/{name} \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]}},"/api/v1/clusters/{cluster_id}/sql-users/{name}/password":{"put":{"summary":"Update a SQL user's password.","operationId":"CockroachCloud_UpdateSQLUserPassword","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SQLUser"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"cluster_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"password":"example_new_password"},"properties":{"password":{"type":"string"}},"title":"UpdateSQLUserPasswordRequest","required":["password"]}}},"required":true},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users/{name}/password \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"password\":\"example_new_password\"}'"}]}},"/api/v1/invoices":{"get":{"summary":"Billing\nList invoices for a given organization.","description":"Sort order: invoice start date ascending","operationId":"CockroachCloud_ListInvoices","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListInvoicesResponse"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://cockroachlabs.cloud/api/v1/invoices \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]}},"/api/v1/invoices/{invoice_id}":{"get":{"summary":"Gets a specific invoice for an organization.","operationId":"CockroachCloud_GetInvoice","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Invoice"}}}},"400":{"description":"Returned when a request field is invalid.","content":{"application/json":{"schema":{}}}},"401":{"description":"Returned when the token bearer cannot be authenticated.","content":{"application/json":{"schema":{}}}},"403":{"description":"Returned when the user does not have permission to access the resource.","content":{"application/json":{"schema":{}}}},"404":{"description":"Returned when the resource does not exist.","content":{"application/json":{"schema":{}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}}},"parameters":[{"name":"invoice_id","description":"InvoiceID is the unique ID representing the invoice.\nInvoiceID is used to retrieve a specific\nbilling period's invoice.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["CockroachCloud"],"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://cockroachlabs.cloud/api/v1/invoices/{invoice_id} \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"}]}}},"security":[{"Bearer":[]}],"externalDocs":{"description":"Use the CockroachDB Cloud API","url":"https://www.cockroachlabs.com/docs/cockroachcloud/cloud-api.html"},"servers":[{"url":"https://cockroachlabs.cloud"}],"components":{"requestBodies":{"CockroachCloud_EnableCMEKSpecBody":{"content":{"application/json":{"schema":{"type":"object","example":{"region_specs":[{"region":"us-central1","key_spec":{"type":"AWS_KMS","uri":"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key","auth_principal":"arn:aws:iam::account:role/role-name-with-path"}}]},"properties":{"region_specs":{"type":"array","items":{"$ref":"#/components/schemas/CMEKRegionSpecification"}}},"title":"CMEKClusterSpecification","required":["region_specs"]}}},"required":true},"CockroachCloud_AddAllowlistEntry2Entry":{"content":{"application/json":{"schema":{"type":"object","example":{"cidr_ip":"192.168.1.1","cidr_mask":32,"ui":true,"sql":true,"name":"Example"},"properties":{"ui":{"type":"boolean"},"sql":{"type":"boolean"},"name":{"type":"string"}},"title":"AllowlistEntry","required":["ui","sql"]}}},"description":"AllowlistEntry","required":true}},"securitySchemes":{"Bearer":{"type":"http","scheme":"bearer"}},"schemas":{"AWSEndpointConnectionStatus":{"type":"string","enum":["ENDPOINT_PENDING","ENDPOINT_PENDING_ACCEPTANCE","ENDPOINT_AVAILABLE","ENDPOINT_DELETING","ENDPOINT_DELETED","ENDPOINT_REJECTED","ENDPOINT_FAILED","ENDPOINT_EXPIRED"],"description":"The statuses map to the statuses returned by the AWS API."},"AWSPrivateLinkServiceDetail":{"type":"object","properties":{"service_name":{"type":"string","description":"ServiceName is the AWS service name customers use to create endpoints on their end."},"service_id":{"type":"string","description":"ServiceID is the server side of the PrivateLink\nconnection. This is the same as AWSPrivateLinkEndpoint.service_id."},"availability_zone_ids":{"type":"array","items":{"type":"string"},"description":"AvailabilityZoneIDs are the identifiers for the availability zones that the service\nis available in."}},"required":["service_name","service_id","availability_zone_ids"]},"AllowlistEntry":{"type":"object","example":{"cidr_ip":"192.168.1.1","cidr_mask":32,"ui":true,"sql":true,"name":"Example"},"properties":{"cidr_ip":{"type":"string"},"cidr_mask":{"type":"integer","format":"int32"},"ui":{"type":"boolean"},"sql":{"type":"boolean"},"name":{"type":"string"}},"title":"AllowlistEntry","required":["cidr_ip","cidr_mask","ui","sql"]},"Any":{"type":"object","properties":{"@type":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."}},"additionalProperties":{},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"},"AwsEndpointConnection":{"type":"object","properties":{"region_name":{"type":"string","description":"RegionName is the cloud provider region name (i.e. us-east-1)."},"cloud_provider":{"$ref":"#/components/schemas/api.CloudProvider"},"status":{"$ref":"#/components/schemas/AWSEndpointConnectionStatus"},"endpoint_id":{"type":"string","description":"EndpointID is the client side of the PrivateLink connection."},"service_id":{"type":"string","description":"ServiceID is the server side of the PrivateLink\nconnection. This is the same as AWSPrivateLinkEndpoint.service_id."}},"required":["region_name","cloud_provider","status","endpoint_id","service_id"]},"AwsEndpointConnections":{"type":"object","properties":{"connections":{"type":"array","items":{"$ref":"#/components/schemas/AwsEndpointConnection"},"description":"Connections is a list of private endpoints."}},"required":["connections"]},"CMEKClusterInfo":{"type":"object","properties":{"status":{"$ref":"#/components/schemas/CMEKStatus"},"region_infos":{"type":"array","items":{"$ref":"#/components/schemas/CMEKRegionInfo"}}},"description":"CMEKClusterInfo contains the status of CMEK across an entire cluster,\nincluding within each one its regions."},"CMEKCustomerAction":{"type":"string","enum":["REVOKE"],"description":"CMEKCustomerAction enumerates the actions a customer can take on a cluster\nthat has been enabled for CMEK."},"CMEKKeyInfo":{"type":"object","properties":{"status":{"$ref":"#/components/schemas/CMEKStatus"},"user_message":{"type":"string"},"spec":{"$ref":"#/components/schemas/CMEKKeySpecification"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}},"description":"CMEKKeyInfo contains the status of a customer-provided key alongside the\nspecification."},"CMEKKeySpecification":{"type":"object","properties":{"type":{"$ref":"#/components/schemas/CMEKKeyType"},"uri":{"type":"string"},"auth_principal":{"type":"string"}},"description":"CMEKKeySpecification contains all the details necessary to use a customer-provided\nencryption key. This involves the type/location of the key and the principal\nto authenticate as when accessing it."},"CMEKKeyType":{"type":"string","enum":["AWS_KMS","GCP_CLOUD_KMS"],"description":"CMEKKeyType enumerates types of customer-managed keys.\n\n - UNKNOWN_KEY_TYPE: UNKNOWN should never be used; if it is used, it indicates a bug."},"CMEKRegionInfo":{"type":"object","properties":{"region":{"type":"string"},"status":{"$ref":"#/components/schemas/CMEKStatus"},"key_infos":{"type":"array","items":{"$ref":"#/components/schemas/CMEKKeyInfo"}}},"description":"CMEKRegionInfo contains the status of CMEK within a region. This includes\ncurrent and past key specifications used within the region, as well as the\nstatus of those specifications."},"CMEKRegionSpecification":{"type":"object","properties":{"region":{"type":"string"},"key_spec":{"$ref":"#/components/schemas/CMEKKeySpecification"}},"description":"CMEKRegionSpecification declares the customer-provided key specification that\nshould be used in a given region."},"CMEKStatus":{"type":"string","enum":["DISABLED","DISABLING","DISABLE_FAILED","ENABLED","ENABLING","ENABLE_FAILED","ROTATING","ROTATE_FAILED","REVOKED","REVOKING","REVOKE_FAILED"],"description":"CMEKStatus describes the current status of CMEK for an entire CRDB cluster\nor a CMEK key within a region.\n\n - UNKNOWN_STATUS: UNKNOWN should never be used; if it is used, it indicates a bug.\n - DISABLED: DISABLED corresponds to the state of a cluster or region-level key when\nCMEK has finished being disabled. By default, CMEK will be disabled for\nnew clusters.\n - DISABLING: DISABLING corresponds to the state of a cluster or region-level key when\nCMEK is in the process of being disabled.\n - DISABLE_FAILED: DISABLE_FAILED corresponds to the state of a cluster or region-level key\nwhen CMEK has failed to be disabled.\n - ENABLED: ENABLED corresponds to the state of a cluster or region-level key when\nCMEK is enabled.\n - ENABLING: ENABLING corresponds to the state of a cluster or region-level key when\nCMEK is in the process of being enabled.\n - ENABLE_FAILED: ENABLE_FAILED corresponds to the state of a cluster or region-level key\nwhen CMEK has failed to be enabled.\n - ROTATING: ROTATING corresponds to the state of a cluster or region when the a new\nspec is in the process of being enabled while an existing spec is being\ndisabled.\n - ROTATE_FAILED: ROTATE_FAILED corresponds to the state of a cluster or region if there was\na failure to update from one CMEK spec to another.\n - REVOKED: REVOKED corresponds to the state of a cluster or region-level key when the\ncustomer has revoked CockroachLab's permissions for their key.\n - REVOKING: REVOKING corresponds to the state of a cluster or region-level key when\nCMEK is in the process of being revoked.\n - REVOKE_FAILED: REVOKE_FAILED corresponds to the state of a cluster or region-level key\nwhen CMEK has failed to be revoked."},"CloudProviderRegion":{"type":"object","properties":{"name":{"type":"string"},"location":{"type":"string"},"provider":{"$ref":"#/components/schemas/api.CloudProvider"},"serverless":{"type":"boolean"},"distance":{"type":"number","format":"float","title":"Distance in miles, based on client IP address"}},"required":["name","location","provider","serverless","distance"]},"Cluster":{"type":"object","example":{"id":"35c4abb2-bb66-46d7-afed-25ebef5ed2aa","name":"example-cluster","cockroach_version":"v21.2.4","plan":"SERVERLESS","cloud_provider":"GCP","account_id":"","state":"CREATED","creator_id":"7cde0cd9-0d8a-4008-8f90-45092ce8afc1","operation_status":"CLUSTER_STATUS_UNSPECIFIED","config":{"serverless":{"spend_limit":0,"routing_id":"example-cluster-1533"}},"regions":[{"name":"us-central1","sql_dns":"free-tier7.gcp-us-central1.crdb.io","ui_dns":"","node_count":0}],"created_at":"2022-03-22T20:23:11.285067Z","updated_at":"2022-03-22T20:23:11.879593Z","deleted_at":null},"properties":{"id":{"type":"string"},"name":{"type":"string"},"cockroach_version":{"type":"string"},"plan":{"$ref":"#/components/schemas/Plan"},"cloud_provider":{"$ref":"#/components/schemas/api.CloudProvider"},"account_id":{"type":"string"},"state":{"$ref":"#/components/schemas/ClusterStateType"},"creator_id":{"type":"string"},"operation_status":{"$ref":"#/components/schemas/ClusterStatusType"},"config":{"$ref":"#/components/schemas/ClusterConfig"},"regions":{"type":"array","items":{"$ref":"#/components/schemas/Region"}},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"},"deleted_at":{"type":"string","format":"date-time"}},"required":["id","name","cockroach_version","plan","cloud_provider","state","creator_id","operation_status","config","regions"]},"ClusterConfig":{"type":"object","properties":{"dedicated":{"$ref":"#/components/schemas/DedicatedHardwareConfig"},"serverless":{"$ref":"#/components/schemas/ServerlessClusterConfig"}}},"ClusterStateType":{"type":"string","enum":["CREATING","CREATED","CREATION_FAILED","DELETED","LOCKED"],"description":" - LOCKED: An exclusive operation is being performed on this cluster.\nOther operations should not proceed if they did not set a cluster into the LOCKED state."},"ClusterStatusType":{"type":"string","enum":["CLUSTER_STATUS_UNSPECIFIED","CRDB_MAJOR_UPGRADE_RUNNING","CRDB_MAJOR_UPGRADE_FAILED","CRDB_MAJOR_ROLLBACK_RUNNING","CRDB_MAJOR_ROLLBACK_FAILED","CRDB_PATCH_RUNNING","CRDB_PATCH_FAILED","CRDB_SCALE_RUNNING","CRDB_SCALE_FAILED","MAINTENANCE_RUNNING","CRDB_INSTANCE_UPDATE_RUNNING","CRDB_INSTANCE_UPDATE_FAILED","CRDB_EDIT_CLUSTER_RUNNING","CRDB_EDIT_CLUSTER_FAILED","CRDB_CMEK_OPERATION_RUNNING","CRDB_CMEK_OPERATION_FAILED","TENANT_RESTORE_RUNNING","TENANT_RESTORE_FAILED","CRDB_LOG_EXPORT_OPERATION_RUNNING","CRDB_LOG_EXPORT_OPERATION_FAILED"]},"CreateClusterRequest":{"type":"object","example":{"name":"test-cluster","provider":"GCP","spec":{"serverless":{"regions":["us-central1"],"spend_limit":0}}},"properties":{"name":{"type":"string","description":"Name must be 6-20 characters in length and can include numbers,\nlowercase letters, and dashes (but no leading or trailing dashes)."},"provider":{"$ref":"#/components/schemas/api.CloudProvider"},"spec":{"$ref":"#/components/schemas/CreateClusterSpecification"}},"title":"CreateClusterRequest","required":["name","provider","spec"]},"CreateClusterSpecification":{"type":"object","properties":{"dedicated":{"$ref":"#/components/schemas/DedicatedClusterCreateSpecification"},"serverless":{"$ref":"#/components/schemas/ServerlessClusterCreateSpecification"}}},"Currency":{"type":"string","enum":["USD","CRDB_CLOUD_CREDITS"],"description":"Currency is the set of currencies supported in CockroachCloud."},"CurrencyAmount":{"type":"object","properties":{"amount":{"type":"number","format":"double","description":"Amount is the quantity of currency."},"currency":{"$ref":"#/components/schemas/Currency"}}},"DedicatedClusterCreateSpecification":{"type":"object","properties":{"region_nodes":{"type":"object","additionalProperties":{"type":"integer","format":"int32"},"description":"Region keys should match the cloud provider's zone code.\nFor example, for Oregon, set region_name to \"us-west2\" for\nGCP and \"us-west-2\" for AWS. Values represent the node count."},"hardware":{"$ref":"#/components/schemas/DedicatedHardwareCreateSpecification"},"cockroach_version":{"type":"string","description":"The CockroachDB version for the cluster. The current version\nis used if omitted."}},"required":["region_nodes","hardware"]},"DedicatedClusterUpdateSpecification":{"type":"object","properties":{"region_nodes":{"type":"object","additionalProperties":{"type":"integer","format":"int32"},"description":"Region keys should match the cloud provider's zone code.\nFor example, for Oregon, set region_name to \"us-west2\" for\nGCP and \"us-west-2\" for AWS. Values represent the node count."},"hardware":{"$ref":"#/components/schemas/DedicatedHardwareUpdateSpecification"},"cmek_region_specs":{"type":"array","items":{"$ref":"#/components/schemas/CMEKRegionSpecification"},"description":"This field should contain the CMEK specs for newly added regions. If a\nCMEK spec is provided for an existing region, the request is invalid and\nwill fail."}}},"DedicatedHardwareConfig":{"type":"object","properties":{"machine_type":{"type":"string","description":"MachineType is the machine type identifier within the given cloud\nprovider, ex. m5.xlarge, n2-standard-4."},"num_virtual_cpus":{"type":"integer","format":"int32","description":"NumVirtualCPUs is the number of virtual CPUs per node in the cluster."},"storage_gib":{"type":"integer","format":"int32","description":"StorageGiB is the number of storage GiB per node in the cluster."},"memory_gib":{"type":"number","format":"float","description":"MemoryGiB is the memory GiB per node in the cluster."},"disk_iops":{"type":"integer","format":"int32","description":"DiskIOPs is the number of disk I/O operations per second that are\npermitted on each node in the cluster. Zero indicates the cloud\nprovider-specific default."}},"required":["machine_type","num_virtual_cpus","storage_gib","memory_gib","disk_iops"]},"DedicatedHardwareCreateSpecification":{"type":"object","properties":{"machine_spec":{"$ref":"#/components/schemas/DedicatedMachineTypeSpecification"},"storage_gib":{"type":"integer","format":"int32","description":"StorageGiB is the number of storage GiB per node in the cluster.\nZero indicates default to the lowest storage GiB available given machine specs."},"disk_iops":{"type":"integer","format":"int32","description":"DiskIOPs is the number of disk I/O operations per second that are\npermitted on each node in the cluster. Zero indicates the cloud\nprovider-specific default. Only available for AWS clusters."}},"required":["machine_spec","storage_gib"]},"DedicatedHardwareUpdateSpecification":{"type":"object","properties":{"machine_spec":{"$ref":"#/components/schemas/DedicatedMachineTypeSpecification"},"storage_gib":{"type":"integer","format":"int32","description":"StorageGiB is the number of storage GiB per node in the cluster."},"disk_iops":{"type":"integer","format":"int32","description":"DiskIOPs is the number of disk I/O operations per second that are\npermitted on each node in the cluster. Zero indicates the cloud\nprovider-specific default. Only available for AWS clusters."}}},"DedicatedMachineTypeSpecification":{"type":"object","properties":{"machine_type":{"type":"string","description":"MachineType is the machine type identifier within the given cloud\nprovider, ex. m5.xlarge, n2-standard-4."},"num_virtual_cpus":{"type":"integer","format":"int32","description":"NumVirtualCPUs may be used to automatically select a machine type\naccording to the desired number of vCPUs."}}},"Invoice":{"type":"object","properties":{"invoice_id":{"type":"string","description":"InvoiceID is the unique ID representing the invoice."},"totals":{"type":"array","items":{"$ref":"#/components/schemas/CurrencyAmount"},"description":"Totals is a list of the total amounts per currency."},"period_start":{"type":"string","format":"date-time","description":"PeriodStart is the start of the billing period (inclusive)."},"period_end":{"type":"string","format":"date-time","description":"PeriodEnd is the end of the billing period (exclusive)."},"invoice_items":{"type":"array","items":{"$ref":"#/components/schemas/InvoiceItem"},"description":"InvoiceItems are sorted by the cluster name."},"balances":{"type":"array","items":{"$ref":"#/components/schemas/CurrencyAmount"},"description":"Balances are the amounts of currency left at the time of the invoice."}},"description":"Invoice message represents the details and the total charges associated with\none billing period, which starts at the beginning of the month and ends at\nthe beginning of the next month. The message also includes details about each\ninvoice item.","required":["invoice_id","totals","period_start","period_end","invoice_items","balances"]},"InvoiceItem":{"type":"object","properties":{"cluster":{"$ref":"#/components/schemas/Cluster"},"totals":{"type":"array","items":{"$ref":"#/components/schemas/CurrencyAmount"},"description":"Totals is a list of the total amounts of line items per currency."},"line_items":{"type":"array","items":{"$ref":"#/components/schemas/LineItem"},"description":"LineItems contain all the relevant line items from the Metronome invoice."}},"required":["cluster","totals","line_items"]},"KeysetPaginationRequest":{"type":"object","properties":{"page":{"type":"string"},"limit":{"type":"integer","format":"int32"},"as_of_time":{"type":"string","format":"date-time"},"sort_order":{"$ref":"#/components/schemas/SortOrder"}}},"KeysetPaginationResponse":{"type":"object","properties":{"next_page":{"type":"string"},"previous_page":{"type":"string"}}},"LineItem":{"type":"object","properties":{"description":{"type":"string","description":"Description contains the details of the line item (i.e t3 micro)."},"quantity":{"type":"number","format":"double","description":"Quantity is the number of the specific line items used."},"unit_cost":{"type":"number","format":"double","description":"UnitCost is the cost per unit of line item."},"total":{"$ref":"#/components/schemas/CurrencyAmount"},"quantity_unit":{"$ref":"#/components/schemas/QuantityUnitType"}},"required":["description","quantity","unit_cost","total","quantity_unit"]},"ListAllowlistEntriesResponse":{"type":"object","properties":{"allowlist":{"type":"array","items":{"$ref":"#/components/schemas/AllowlistEntry"}},"propagating":{"type":"boolean"},"pagination":{"$ref":"#/components/schemas/KeysetPaginationResponse"}},"title":"ListAllowlistEntriesResponse","required":["allowlist","propagating"]},"ListAvailableRegionsResponse":{"type":"object","properties":{"regions":{"type":"array","items":{"$ref":"#/components/schemas/CloudProviderRegion"}},"pagination":{"$ref":"#/components/schemas/KeysetPaginationResponse"}},"required":["regions"]},"ListClusterNodesResponse":{"type":"object","properties":{"nodes":{"type":"array","items":{"$ref":"#/components/schemas/Node"}},"pagination":{"$ref":"#/components/schemas/KeysetPaginationResponse"}},"required":["nodes"]},"ListClustersResponse":{"type":"object","properties":{"clusters":{"type":"array","items":{"$ref":"#/components/schemas/Cluster"}},"pagination":{"$ref":"#/components/schemas/KeysetPaginationResponse"}},"required":["clusters"]},"ListInvoicesResponse":{"type":"object","properties":{"invoices":{"type":"array","items":{"$ref":"#/components/schemas/Invoice"},"description":"Invoices are sorted by PeriodStart time."}},"required":["invoices"]},"ListSQLUsersResponse":{"type":"object","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/SQLUser"}},"pagination":{"$ref":"#/components/schemas/KeysetPaginationResponse"}},"required":["users"]},"LogExportClusterInfo":{"type":"object","properties":{"cluster_id":{"type":"string"},"status":{"$ref":"#/components/schemas/LogExportStatus"},"user_message":{"type":"string"},"spec":{"$ref":"#/components/schemas/LogExportClusterSpecification"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}},"description":"LogExportClusterInfo contains a package of information that fully\ndescribes both the intended state of the log export configuration for\na specific cluster but also some metadata around its deployment\nstatus, any error messages, and some timestamps."},"LogExportClusterSpecification":{"type":"object","properties":{"type":{"$ref":"#/components/schemas/LogExportType"},"log_name":{"type":"string","description":"log_name is an identifier for the logs in the customer's log sink."},"auth_principal":{"type":"string","description":"auth_principal is either the AWS Role ARN that identifies a role\nthat the cluster account can assume to write to CloudWatch or the\nGCP Project ID that the cluster service account has permissions to\nwrite to for cloud logging."}},"description":"LogExportClusterSpecification contains all the data necessary to\nconfigure log export for an individual cluster. Users would supply\nthis data via the API and also receive it back when inspecting the\nstate of their log export configuration."},"LogExportStatus":{"type":"string","enum":["DISABLED","DISABLING","DISABLE_FAILED","ENABLED","ENABLING","ENABLE_FAILED"],"description":"LogExportStatus encodes the possible states that a configuration can\nbe in as it is created, deployed, and disabled."},"LogExportType":{"type":"string","enum":["AWS_CLOUDWATCH","GCP_CLOUD_LOGGING"],"description":"LogExportType encodes the cloud selection that we're exporting to\nalong with the cloud logging platform. Currently, each cloud has a\nsingle logging platform."},"Node":{"type":"object","properties":{"name":{"type":"string"},"region_name":{"type":"string"},"status":{"$ref":"#/components/schemas/NodeStatus"}},"required":["name","region_name","status"]},"NodeStatus":{"type":"string","enum":["LIVE","NOT_READY"]},"Plan":{"type":"string","enum":["DEDICATED","CUSTOM","SERVERLESS"],"description":" - DEDICATED: A paid plan that offers dedicated hardware in any location.\n - CUSTOM: A plan option that is used for clusters whose machine configs are not \nsupported in self-service. All INVOICE clusters are under this plan option.\n - SERVERLESS: A paid plan that runs on shared hardware and caps the users'\nmaximum monthly spending to a user-specified (possibly 0) amount."},"PrivateEndpointService":{"type":"object","properties":{"region_name":{"type":"string","description":"RegionName is the cloud provider region name (i.e. us-east-1)."},"cloud_provider":{"$ref":"#/components/schemas/api.CloudProvider"},"status":{"$ref":"#/components/schemas/PrivateEndpointServiceStatus"},"aws":{"$ref":"#/components/schemas/AWSPrivateLinkServiceDetail"}},"required":["region_name","cloud_provider","status","aws"]},"PrivateEndpointServiceStatus":{"type":"string","enum":["ENDPOINT_SERVICE_STATUS_CREATING","ENDPOINT_SERVICE_STATUS_AVAILABLE","ENDPOINT_SERVICE_STATUS_CREATE_FAILED","ENDPOINT_SERVICE_STATUS_DELETING","ENDPOINT_SERVICE_STATUS_DELETE_FAILED"],"description":"- ENDPOINT_SERVICE_STATUS_DELETE_FAILED: One note is that if the service is deleted, there is no longer\na record, hence there is no \"DELETED\" status.","title":"Private Endpoints"},"PrivateEndpointServices":{"type":"object","properties":{"services":{"type":"array","items":{"$ref":"#/components/schemas/PrivateEndpointService"},"description":"Services contains a list of all cluster related services."}},"required":["services"]},"QuantityUnitType":{"type":"string","enum":["HOURS","REQUEST_UNITS"],"description":"Billing\nQuantityUnitType is the unit type for a quantity of billing line item."},"Region":{"type":"object","properties":{"name":{"type":"string"},"sql_dns":{"type":"string"},"ui_dns":{"type":"string"},"node_count":{"type":"integer","format":"int32","description":"NodeCount will be 0 for serverless clusters."}},"required":["name","sql_dns","ui_dns","node_count"]},"SQLUser":{"type":"object","properties":{"name":{"type":"string"}},"required":["name"]},"ServerlessClusterConfig":{"type":"object","properties":{"spend_limit":{"type":"integer","format":"int32","description":"Spend limit in US cents."},"routing_id":{"type":"string","description":"Used to build a connection string."}},"required":["spend_limit","routing_id"]},"ServerlessClusterCreateSpecification":{"type":"object","properties":{"regions":{"type":"array","items":{"type":"string"},"description":"Region values should match the cloud provider's zone code.\nFor example, for Oregon, set region_name to \"us-west2\" for\nGCP and \"us-west-2\" for AWS."},"spend_limit":{"type":"integer","format":"int32","title":"Spend limit in US cents"}},"required":["regions","spend_limit"]},"ServerlessClusterUpdateSpecification":{"type":"object","properties":{"spend_limit":{"type":"integer","format":"int32","title":"Spend limit in US cents"}},"required":["spend_limit"]},"SortOrder":{"type":"string","enum":["ASC","DESC"],"description":" - DESC: Sort in descending order. The default order is ascending."},"Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"$ref":"#/components/schemas/Any"}}}},"UpdateClusterSpecification":{"type":"object","example":{"dedicated":{"region_nodes":{"us-west1":3,"us-central1":5},"hardware":{"machine_type":"n2-standard-8"}}},"properties":{"dedicated":{"$ref":"#/components/schemas/DedicatedClusterUpdateSpecification"},"serverless":{"$ref":"#/components/schemas/ServerlessClusterUpdateSpecification"}}},"api.CloudProvider":{"type":"string","enum":["GCP","AWS"],"description":" - GCP: The Google Cloud Platform cloud provider.\n - AWS: The Amazon Web Services cloud provider."},"api.Database":{"type":"object","properties":{"name":{"type":"string"},"table_count":{"type":"string","format":"int64"}},"title":"Database","required":["name"]},"api.ListDatabasesResponse":{"type":"object","properties":{"databases":{"type":"array","items":{"$ref":"#/components/schemas/api.Database"}},"pagination":{"$ref":"#/components/schemas/KeysetPaginationResponse"}},"title":"ListDatabasesResponse","required":["databases"]}}}}
