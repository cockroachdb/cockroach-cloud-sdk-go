{
  "openapi": "3.0.1",
  "info": {
    "title": "CockroachDB Cloud API",
    "description": "This is an early access, experimental version of the Cloud API. The interface and output is subject to change, and there may be bugs.",
    "contact": {
      "name": "Cockroach Labs Support",
      "url": "https://support.cockroachlabs.com",
      "email": "support@cockroachlabs.com"
    },
    "version": "2022-07-12T00:00:00.000Z"
  },
  "externalDocs": {
    "description": "Use the CockroachDB Cloud API",
    "url": "https://www.cockroachlabs.com/docs/cockroachcloud/cloud-api.html"
  },
  "servers": [
    {
      "url": "https://cockroachlabs.cloud/"
    }
  ],
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "CockroachCloud"
    }
  ],
  "paths": {
    "/api/v1/clusters": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "List clusters owned by an organization.",
        "description": "Sort order: Cluster name",
        "operationId": "CockroachCloud_ListClusters",
        "parameters": [
          {
            "name": "show_inactive",
            "in": "query",
            "description": "If `true`, show clusters that have been deleted or failed to initialize.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pagination.page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagination.as_of_time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pagination.sort_order",
            "in": "query",
            "description": " - DESC: Sort in descending order. The default order is ascending.",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListClustersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Create and initialize a new cluster.",
        "operationId": "CockroachCloud_CreateCluster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/clusters/available-regions": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "List the regions available for new clusters and nodes.",
        "description": "Sort order: Distance (based on client IP address)",
        "operationId": "CockroachCloud_ListAvailableRegions",
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "description": "Optional CloudProvider for filtering.\n\n - GCP: The Google Cloud Platform cloud provider.\n - AWS: The Amazon Web Services cloud provider.",
            "schema": {
              "type": "string",
              "enum": [
                "GCP",
                "AWS"
              ]
            }
          },
          {
            "name": "serverless",
            "in": "query",
            "description": "Optional filter to only show regions available for serverless clusters.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pagination.page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagination.as_of_time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pagination.sort_order",
            "in": "query",
            "description": " - DESC: Sort in descending order. The default order is ascending.",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAvailableRegionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Get extended information about a cluster.",
        "operationId": "CockroachCloud_GetCluster",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Delete a cluster and all of its data.",
        "operationId": "CockroachCloud_DeleteCluster",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Scale or edit a cluster.",
        "operationId": "CockroachCloud_UpdateCluster",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_mask",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClusterSpecification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/clusters/{cluster_id}/cmek": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Get CMEK-related information for a cluster.",
        "operationId": "CockroachCloud_GetCMEKClusterInfo",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMEKClusterInfo"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Enable or update the CMEK spec for a cluster.",
        "operationId": "CockroachCloud_UpdateCMEKSpec",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CMEKClusterSpecification",
                "required": [
                  "region_specs"
                ],
                "type": "object",
                "properties": {
                  "region_specs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CMEKRegionSpecification"
                    }
                  }
                },
                "example": {
                  "region_specs": [
                    {
                      "region": "us-central1",
                      "key_spec": {
                        "type": "AWS_KMS",
                        "uri": "arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key",
                        "auth_principal": "arn:aws:iam::account:role/role-name-with-path"
                      }
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMEKClusterInfo"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Enable CMEK for a cluster.",
        "operationId": "CockroachCloud_EnableCMEKSpec",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CMEKClusterSpecification",
                "required": [
                  "region_specs"
                ],
                "type": "object",
                "properties": {
                  "region_specs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CMEKRegionSpecification"
                    }
                  }
                },
                "example": {
                  "region_specs": [
                    {
                      "region": "us-central1",
                      "key_spec": {
                        "type": "AWS_KMS",
                        "uri": "arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key",
                        "auth_principal": "arn:aws:iam::account:role/role-name-with-path"
                      }
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMEKClusterInfo"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "patch": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Update the CMEK-related status for a cluster.",
        "operationId": "CockroachCloud_UpdateCMEKStatus",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "UpdateCMEKStatusRequest",
                "required": [
                  "action"
                ],
                "type": "object",
                "properties": {
                  "action": {
                    "$ref": "#/components/schemas/CMEKCustomerAction"
                  }
                },
                "example": {
                  "action": "REVOKE"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMEKClusterInfo"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/clusters/{cluster_id}/logexport": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "operationId": "CockroachCloud_GetLogExportInfo",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogExportClusterInfo"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CockroachCloud"
        ],
        "operationId": "CockroachCloud_EnableLogExport",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "EnableLogExportRequest",
                "type": "object",
                "properties": {
                  "cluster_spec": {
                    "$ref": "#/components/schemas/LogExportClusterSpecification"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogExportClusterInfo"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "CockroachCloud"
        ],
        "operationId": "CockroachCloud_DeleteLogExport",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogExportClusterInfo"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clusters/{cluster_id}/networking/allowlist": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Get the IP allowlist and propagation status for a cluster.",
        "description": "Sort order: CIDR address",
        "operationId": "CockroachCloud_ListAllowlistEntries",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination.page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagination.as_of_time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pagination.sort_order",
            "in": "query",
            "description": " - DESC: Sort in descending order. The default order is ascending.",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllowlistEntriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Add a new CIDR address to the IP allowlist.",
        "operationId": "CockroachCloud_AddAllowlistEntry",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowlistEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowlistEntry"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask}": {
      "delete": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Delete an IP allowlist entry.",
        "operationId": "CockroachCloud_DeleteAllowlistEntry",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cidr_ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cidr_mask",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowlistEntry"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}": {
      "put": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Add a new CIDR address to the IP allowlist.",
        "operationId": "CockroachCloud_AddAllowlistEntry2",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entry.cidr_ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entry.cidr_mask",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowlistEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowlistEntry"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "patch": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Update an IP allowlist entry.",
        "operationId": "CockroachCloud_UpdateAllowlistEntry",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entry.cidr_ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entry.cidr_mask",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "field_mask",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowlistEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowlistEntry"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/clusters/{cluster_id}/nodes": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "List nodes for a cluster.",
        "description": "Sort order: Region name, node name",
        "operationId": "CockroachCloud_ListClusterNodes",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region_name",
            "in": "query",
            "description": "Optional filter to limit response to a single region.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination.page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagination.as_of_time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pagination.sort_order",
            "in": "query",
            "description": " - DESC: Sort in descending order. The default order is ascending.",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListClusterNodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clusters/{cluster_id}/sql-users": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "List SQL users for a cluster.",
        "description": "Sort order: Username",
        "operationId": "CockroachCloud_ListSQLUsers",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination.page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination.limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagination.as_of_time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pagination.sort_order",
            "in": "query",
            "description": " - DESC: Sort in descending order. The default order is ascending.",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSQLUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Create a new SQL user.",
        "operationId": "CockroachCloud_CreateSQLUser",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateSQLUserRequest",
                "required": [
                  "name",
                  "password"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "example_username",
                  "password": "example_password"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SQLUser"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/clusters/{cluster_id}/sql-users/{name}": {
      "delete": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Delete a SQL user.",
        "operationId": "CockroachCloud_DeleteSQLUser",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SQLUser"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clusters/{cluster_id}/sql-users/{name}/password": {
      "put": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Update a SQL user's password.",
        "operationId": "CockroachCloud_UpdateSQLUserPassword",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "UpdateSQLUserPasswordRequest",
                "required": [
                  "password"
                ],
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "password": "example_new_password"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SQLUser"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/invoices": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Billing\nList invoices for a given organization.",
        "description": "Sort order: invoice start date ascending",
        "operationId": "CockroachCloud_ListInvoices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoicesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "CockroachCloud"
        ],
        "summary": "Gets a specific invoice for an organization.",
        "operationId": "CockroachCloud_GetInvoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "InvoiceID is the unique ID representing the invoice.\nInvoiceID is used to retrieve a specific\nbilling period's invoice.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "Returned when a request field is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the token bearer cannot be authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AllowlistEntry": {
        "title": "AllowlistEntry",
        "required": [
          "cidr_ip",
          "cidr_mask",
          "sql",
          "ui"
        ],
        "type": "object",
        "properties": {
          "cidr_ip": {
            "type": "string"
          },
          "cidr_mask": {
            "type": "integer",
            "format": "int32"
          },
          "ui": {
            "type": "boolean"
          },
          "sql": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "cidr_ip": "192.168.1.1",
          "cidr_mask": 32,
          "ui": true,
          "sql": true,
          "name": "Example"
        }
      },
      "Any": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CMEKClusterInfo": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/CMEKStatus"
          },
          "region_infos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CMEKRegionInfo"
            }
          }
        },
        "description": "CMEKClusterInfo contains the status of CMEK across an entire cluster,\nincluding within each one its regions."
      },
      "CMEKCustomerAction": {
        "type": "string",
        "description": "CMEKCustomerAction enumerates the actions a customer can take on a cluster\nthat has been enabled for CMEK.",
        "enum": [
          "REVOKE"
        ]
      },
      "CMEKKeyInfo": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/CMEKStatus"
          },
          "user_message": {
            "type": "string"
          },
          "spec": {
            "$ref": "#/components/schemas/CMEKKeySpecification"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "CMEKKeyInfo contains the status of a customer-provided key alongside the\nspecification."
      },
      "CMEKKeySpecification": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CMEKKeyType"
          },
          "uri": {
            "type": "string"
          },
          "auth_principal": {
            "type": "string"
          }
        },
        "description": "CMEKKeySpecification contains all the details necessary to use a customer-provided\nencryption key. This involves the type/location of the key and the principal\nto authenticate as when accessing it."
      },
      "CMEKKeyType": {
        "type": "string",
        "description": "CMEKKeyType enumerates types of customer-managed keys.\n\n - UNKNOWN_KEY_TYPE: UNKNOWN should never be used; if it is used, it indicates a bug.",
        "enum": [
          "AWS_KMS",
          "GCP_CLOUD_KMS"
        ]
      },
      "CMEKRegionInfo": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CMEKStatus"
          },
          "key_infos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CMEKKeyInfo"
            }
          }
        },
        "description": "CMEKRegionInfo contains the status of CMEK within a region. This includes\ncurrent and past key specifications used within the region, as well as the\nstatus of those specifications."
      },
      "CMEKRegionSpecification": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          },
          "key_spec": {
            "$ref": "#/components/schemas/CMEKKeySpecification"
          }
        },
        "description": "CMEKRegionSpecification declares the customer-provided key specification that\nshould be used in a given region."
      },
      "CMEKStatus": {
        "type": "string",
        "description": "CMEKStatus describes the current status of CMEK for an entire CRDB cluster\nor a CMEK key within a region.\n\n - UNKNOWN_STATUS: UNKNOWN should never be used; if it is used, it indicates a bug.\n - DISABLED: DISABLED corresponds to the state of a cluster or region-level key when\nCMEK has finished being disabled. By default, CMEK will be disabled for\nnew clusters.\n - DISABLING: DISABLING corresponds to the state of a cluster or region-level key when\nCMEK is in the process of being disabled.\n - DISABLE_FAILED: DISABLE_FAILED corresponds to the state of a cluster or region-level key\nwhen CMEK has failed to be disabled.\n - ENABLED: ENABLED corresponds to the state of a cluster or region-level key when\nCMEK is enabled.\n - ENABLING: ENABLING corresponds to the state of a cluster or region-level key when\nCMEK is in the process of being enabled.\n - ENABLE_FAILED: ENABLE_FAILED corresponds to the state of a cluster or region-level key\nwhen CMEK has failed to be enabled.\n - ROTATING: ROTATING corresponds to the state of a cluster or region when the a new\nspec is in the process of being enabled while an existing spec is being\ndisabled.\n - ROTATE_FAILED: ROTATE_FAILED corresponds to the state of a cluster or region if there was\na failure to update from one CMEK spec to another.\n - REVOKED: REVOKED corresponds to the state of a cluster or region-level key when the\ncustomer has revoked CockroachLab's permissions for their key.\n - REVOKING: REVOKING corresponds to the state of a cluster or region-level key when\nCMEK is in the process of being revoked.\n - REVOKE_FAILED: REVOKE_FAILED corresponds to the state of a cluster or region-level key\nwhen CMEK has failed to be revoked.",
        "enum": [
          "DISABLED",
          "DISABLING",
          "DISABLE_FAILED",
          "ENABLED",
          "ENABLING",
          "ENABLE_FAILED",
          "ROTATING",
          "ROTATE_FAILED",
          "REVOKED",
          "REVOKING",
          "REVOKE_FAILED"
        ]
      },
      "CloudProviderRegion": {
        "required": [
          "distance",
          "location",
          "name",
          "provider",
          "serverless"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/api.CloudProvider"
          },
          "serverless": {
            "type": "boolean"
          },
          "distance": {
            "title": "Distance in miles, based on client IP address",
            "type": "number",
            "format": "float"
          }
        }
      },
      "Cluster": {
        "required": [
          "cloud_provider",
          "cockroach_version",
          "config",
          "creator_id",
          "id",
          "name",
          "operation_status",
          "plan",
          "regions",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cockroach_version": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "cloud_provider": {
            "$ref": "#/components/schemas/api.CloudProvider"
          },
          "account_id": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/ClusterStateType"
          },
          "creator_id": {
            "type": "string"
          },
          "operation_status": {
            "$ref": "#/components/schemas/ClusterStatusType"
          },
          "config": {
            "$ref": "#/components/schemas/ClusterConfig"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Region"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": "35c4abb2-bb66-46d7-afed-25ebef5ed2aa",
          "name": "example-cluster",
          "cockroach_version": "v21.2.4",
          "plan": "SERVERLESS",
          "cloud_provider": "GCP",
          "account_id": "",
          "state": "CREATED",
          "creator_id": "7cde0cd9-0d8a-4008-8f90-45092ce8afc1",
          "operation_status": "CLUSTER_STATUS_UNSPECIFIED",
          "config": {
            "serverless": {
              "spend_limit": 0,
              "routing_id": "example-cluster-1533"
            }
          },
          "regions": [
            {
              "name": "us-central1",
              "sql_dns": "free-tier7.gcp-us-central1.crdb.io",
              "ui_dns": "",
              "node_count": 0
            }
          ],
          "created_at": "2022-03-22T20:23:11.285Z",
          "updated_at": "2022-03-22T20:23:11.879Z"
        }
      },
      "ClusterConfig": {
        "type": "object",
        "properties": {
          "dedicated": {
            "$ref": "#/components/schemas/DedicatedHardwareConfig"
          },
          "serverless": {
            "$ref": "#/components/schemas/ServerlessClusterConfig"
          }
        }
      },
      "ClusterStateType": {
        "type": "string",
        "description": " - LOCKED: An exclusive operation is being performed on this cluster.\nOther operations should not proceed if they did not set a cluster into the LOCKED state.",
        "enum": [
          "CREATING",
          "CREATED",
          "CREATION_FAILED",
          "DELETED",
          "LOCKED"
        ]
      },
      "ClusterStatusType": {
        "type": "string",
        "enum": [
          "CLUSTER_STATUS_UNSPECIFIED",
          "CRDB_MAJOR_UPGRADE_RUNNING",
          "CRDB_MAJOR_UPGRADE_FAILED",
          "CRDB_MAJOR_ROLLBACK_RUNNING",
          "CRDB_MAJOR_ROLLBACK_FAILED",
          "CRDB_PATCH_RUNNING",
          "CRDB_PATCH_FAILED",
          "CRDB_SCALE_RUNNING",
          "CRDB_SCALE_FAILED",
          "MAINTENANCE_RUNNING",
          "CRDB_INSTANCE_UPDATE_RUNNING",
          "CRDB_INSTANCE_UPDATE_FAILED",
          "CRDB_EDIT_CLUSTER_RUNNING",
          "CRDB_EDIT_CLUSTER_FAILED",
          "CRDB_CMEK_OPERATION_RUNNING",
          "CRDB_CMEK_OPERATION_FAILED",
          "TENANT_RESTORE_RUNNING",
          "TENANT_RESTORE_FAILED"
        ]
      },
      "CreateClusterRequest": {
        "title": "CreateClusterRequest",
        "required": [
          "name",
          "provider",
          "spec"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name must be 6-20 characters in length and can include numbers,\nlowercase letters, and dashes (but no leading or trailing dashes)."
          },
          "provider": {
            "$ref": "#/components/schemas/api.CloudProvider"
          },
          "spec": {
            "$ref": "#/components/schemas/CreateClusterSpecification"
          }
        },
        "example": {
          "name": "test-cluster",
          "provider": "GCP",
          "spec": {
            "serverless": {
              "regions": [
                "us-central1"
              ],
              "spend_limit": 0
            }
          }
        }
      },
      "CreateClusterSpecification": {
        "type": "object",
        "properties": {
          "dedicated": {
            "$ref": "#/components/schemas/DedicatedClusterCreateSpecification"
          },
          "serverless": {
            "$ref": "#/components/schemas/ServerlessClusterCreateSpecification"
          }
        }
      },
      "Currency": {
        "type": "string",
        "description": "Currency is the set of currencies supported in CockroachCloud.",
        "enum": [
          "USD",
          "CRDB_CLOUD_CREDITS"
        ]
      },
      "CurrencyAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount is the quantity of currency.",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        }
      },
      "DedicatedClusterCreateSpecification": {
        "required": [
          "hardware",
          "region_nodes"
        ],
        "type": "object",
        "properties": {
          "region_nodes": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Region keys should match the cloud provider's zone code.\nFor example, for Oregon, set region_name to \"us-west2\" for\nGCP and \"us-west-2\" for AWS. Values represent the node count."
          },
          "hardware": {
            "$ref": "#/components/schemas/DedicatedHardwareCreateSpecification"
          },
          "cockroach_version": {
            "type": "string",
            "description": "The CockroachDB version for the cluster. The current version\nis used if omitted."
          }
        }
      },
      "DedicatedClusterUpdateSpecification": {
        "type": "object",
        "properties": {
          "region_nodes": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Region keys should match the cloud provider's zone code.\nFor example, for Oregon, set region_name to \"us-west2\" for\nGCP and \"us-west-2\" for AWS. Values represent the node count."
          },
          "hardware": {
            "$ref": "#/components/schemas/DedicatedHardwareUpdateSpecification"
          }
        }
      },
      "DedicatedHardwareConfig": {
        "required": [
          "disk_iops",
          "machine_type",
          "memory_gib",
          "num_virtual_cpus",
          "storage_gib"
        ],
        "type": "object",
        "properties": {
          "machine_type": {
            "type": "string",
            "description": "MachineType is the machine type identifier within the given cloud\nprovider, ex. m5.xlarge, n2-standard-4."
          },
          "num_virtual_cpus": {
            "type": "integer",
            "description": "NumVirtualCPUs is the number of virtual CPUs per node in the cluster.",
            "format": "int32"
          },
          "storage_gib": {
            "type": "integer",
            "description": "StorageGiB is the number of storage GiB per node in the cluster.",
            "format": "int32"
          },
          "memory_gib": {
            "type": "number",
            "description": "MemoryGiB is the memory GiB per node in the cluster.",
            "format": "float"
          },
          "disk_iops": {
            "type": "integer",
            "description": "DiskIOPs is the number of disk I/O operations per second that are\npermitted on each node in the cluster. Zero indicates the cloud\nprovider-specific default.",
            "format": "int32"
          }
        }
      },
      "DedicatedHardwareCreateSpecification": {
        "required": [
          "machine_spec",
          "storage_gib"
        ],
        "type": "object",
        "properties": {
          "machine_spec": {
            "$ref": "#/components/schemas/DedicatedMachineTypeSpecification"
          },
          "storage_gib": {
            "type": "integer",
            "description": "StorageGiB is the number of storage GiB per node in the cluster.\nZero indicates default to the lowest storage GiB available given machine specs.",
            "format": "int32"
          },
          "disk_iops": {
            "type": "integer",
            "description": "DiskIOPs is the number of disk I/O operations per second that are\npermitted on each node in the cluster. Zero indicates the cloud\nprovider-specific default. Only available for AWS clusters.",
            "format": "int32"
          }
        }
      },
      "DedicatedHardwareUpdateSpecification": {
        "type": "object",
        "properties": {
          "machine_spec": {
            "$ref": "#/components/schemas/DedicatedMachineTypeSpecification"
          },
          "storage_gib": {
            "type": "integer",
            "description": "StorageGiB is the number of storage GiB per node in the cluster.",
            "format": "int32"
          },
          "disk_iops": {
            "type": "integer",
            "description": "DiskIOPs is the number of disk I/O operations per second that are\npermitted on each node in the cluster. Zero indicates the cloud\nprovider-specific default. Only available for AWS clusters.",
            "format": "int32"
          }
        }
      },
      "DedicatedMachineTypeSpecification": {
        "type": "object",
        "properties": {
          "machine_type": {
            "type": "string",
            "description": "MachineType is the machine type identifier within the given cloud\nprovider, ex. m5.xlarge, n2-standard-4."
          },
          "num_virtual_cpus": {
            "type": "integer",
            "description": "NumVirtualCPUs may be used to automatically select a machine type\naccording to the desired number of vCPUs.",
            "format": "int32"
          }
        }
      },
      "Invoice": {
        "required": [
          "balances",
          "invoice_id",
          "invoice_items",
          "period_end",
          "period_start",
          "totals"
        ],
        "type": "object",
        "properties": {
          "invoice_id": {
            "type": "string",
            "description": "InvoiceID is the unique ID representing the invoice."
          },
          "totals": {
            "type": "array",
            "description": "Totals is a list of the total amounts per currency.",
            "items": {
              "$ref": "#/components/schemas/CurrencyAmount"
            }
          },
          "period_start": {
            "type": "string",
            "description": "PeriodStart is the start of the billing period (inclusive).",
            "format": "date-time"
          },
          "period_end": {
            "type": "string",
            "description": "PeriodEnd is the end of the billing period (exclusive).",
            "format": "date-time"
          },
          "invoice_items": {
            "type": "array",
            "description": "InvoiceItems are sorted by the cluster name.",
            "items": {
              "$ref": "#/components/schemas/InvoiceItem"
            }
          },
          "balances": {
            "type": "array",
            "description": "Balances are the amounts of currency left at the time of the invoice.",
            "items": {
              "$ref": "#/components/schemas/CurrencyAmount"
            }
          }
        },
        "description": "Invoice message represents the details and the total charges associated with\none billing period, which starts at the beginning of the month and ends at\nthe beginning of the next month. The message also includes details about each\ninvoice item."
      },
      "InvoiceItem": {
        "required": [
          "cluster",
          "line_items",
          "totals"
        ],
        "type": "object",
        "properties": {
          "cluster": {
            "$ref": "#/components/schemas/Cluster"
          },
          "totals": {
            "type": "array",
            "description": "Totals is a list of the total amounts of line items per currency.",
            "items": {
              "$ref": "#/components/schemas/CurrencyAmount"
            }
          },
          "line_items": {
            "type": "array",
            "description": "LineItems contain all the relevant line items from the Metronome invoice.",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          }
        }
      },
      "KeysetPaginationRequest": {
        "type": "object",
        "properties": {
          "page": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "as_of_time": {
            "type": "string",
            "format": "date-time"
          },
          "sort_order": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "KeysetPaginationResponse": {
        "type": "object",
        "properties": {
          "next_page": {
            "type": "string"
          },
          "previous_page": {
            "type": "string"
          }
        }
      },
      "LineItem": {
        "required": [
          "description",
          "quantity",
          "quantity_unit",
          "total",
          "unit_cost"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description contains the details of the line item (i.e t3 micro)."
          },
          "quantity": {
            "type": "number",
            "description": "Quantity is the number of the specific line items used.",
            "format": "double"
          },
          "unit_cost": {
            "type": "number",
            "description": "UnitCost is the cost per unit of line item.",
            "format": "double"
          },
          "total": {
            "$ref": "#/components/schemas/CurrencyAmount"
          },
          "quantity_unit": {
            "$ref": "#/components/schemas/QuantityUnitType"
          }
        }
      },
      "ListAllowlistEntriesResponse": {
        "title": "ListAllowlistEntriesResponse",
        "required": [
          "allowlist",
          "propagating"
        ],
        "type": "object",
        "properties": {
          "allowlist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowlistEntry"
            }
          },
          "propagating": {
            "type": "boolean"
          },
          "pagination": {
            "$ref": "#/components/schemas/KeysetPaginationResponse"
          }
        }
      },
      "ListAvailableRegionsResponse": {
        "required": [
          "regions"
        ],
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudProviderRegion"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/KeysetPaginationResponse"
          }
        }
      },
      "ListClusterNodesResponse": {
        "required": [
          "nodes"
        ],
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/KeysetPaginationResponse"
          }
        }
      },
      "ListClustersResponse": {
        "required": [
          "clusters"
        ],
        "type": "object",
        "properties": {
          "clusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cluster"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/KeysetPaginationResponse"
          }
        }
      },
      "ListInvoicesResponse": {
        "required": [
          "invoices"
        ],
        "type": "object",
        "properties": {
          "invoices": {
            "type": "array",
            "description": "Invoices are sorted by PeriodStart time.",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          }
        }
      },
      "ListSQLUsersResponse": {
        "required": [
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SQLUser"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/KeysetPaginationResponse"
          }
        }
      },
      "LogExportClusterInfo": {
        "type": "object",
        "properties": {
          "cluster_id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/LogExportStatus"
          },
          "user_message": {
            "type": "string"
          },
          "spec": {
            "$ref": "#/components/schemas/LogExportClusterSpecification"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "LogExportClusterInfo contains a package of information that fully\ndescribes both the intended state of the log export configuration for\na specific cluster but also some metadata around its deployment\nstatus, any error messages, and some timestamps."
      },
      "LogExportClusterSpecification": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LogExportType"
          },
          "log_name": {
            "type": "string",
            "description": "log_name is an identifier for the logs in the customer's log sink."
          },
          "auth_principal": {
            "type": "string",
            "description": "auth_principal is either the AWS Role ARN that identifies a role\nthat the cluster account can assume to write to CloudWatch or the\nGCP Project ID that the cluster service account has permissions to\nwrite to for cloud logging."
          }
        },
        "description": "LogExportClusterSpecification contains all the data necessary to\nconfigure log export for an individual cluster. Users would supply\nthis data via the API and also receive it back when inspecting the\nstate of their log export configuration."
      },
      "LogExportStatus": {
        "type": "string",
        "description": "LogExportStatus encodes the possible states that a configuration can\nbe in as it is created, deployed, and disabled.",
        "enum": [
          "DISABLED",
          "DISABLING",
          "DISABLE_FAILED",
          "ENABLED",
          "ENABLING",
          "ENABLE_FAILED"
        ]
      },
      "LogExportType": {
        "type": "string",
        "description": "LogExportType encodes the cloud selection that we're exporting to\nalong with the cloud logging platform. Currently, each cloud has a\nsingle logging platform.",
        "enum": [
          "AWS_CLOUDWATCH",
          "GCP_CLOUD_LOGGING"
        ]
      },
      "Node": {
        "required": [
          "name",
          "region_name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "region_name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/NodeStatus"
          }
        }
      },
      "NodeStatus": {
        "type": "string",
        "enum": [
          "LIVE",
          "NOT_READY"
        ]
      },
      "Plan": {
        "type": "string",
        "description": " - DEDICATED: A paid plan that offers dedicated hardware in any location.\n - CUSTOM: A plan option that is used for clusters whose machine configs are not \nsupported in self-service. All INVOICE clusters are under this plan option.\n - SERVERLESS: A paid plan that runs on shared hardware and caps the users'\nmaximum monthly spending to a user-specified (possibly 0) amount.",
        "enum": [
          "DEDICATED",
          "CUSTOM",
          "SERVERLESS"
        ]
      },
      "QuantityUnitType": {
        "type": "string",
        "description": "Billing\nQuantityUnitType is the unit type for a quantity of billing line item.",
        "enum": [
          "HOURS",
          "REQUEST_UNITS"
        ]
      },
      "Region": {
        "required": [
          "name",
          "node_count",
          "sql_dns",
          "ui_dns"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "sql_dns": {
            "type": "string"
          },
          "ui_dns": {
            "type": "string"
          },
          "node_count": {
            "type": "integer",
            "description": "NodeCount will be 0 for serverless clusters.",
            "format": "int32"
          }
        }
      },
      "SQLUser": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ServerlessClusterConfig": {
        "required": [
          "routing_id",
          "spend_limit"
        ],
        "type": "object",
        "properties": {
          "spend_limit": {
            "type": "integer",
            "description": "Spend limit in US cents.",
            "format": "int32"
          },
          "routing_id": {
            "type": "string",
            "description": "Used to build a connection string."
          }
        }
      },
      "ServerlessClusterCreateSpecification": {
        "required": [
          "regions",
          "spend_limit"
        ],
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "description": "Region values should match the cloud provider's zone code.\nFor example, for Oregon, set region_name to \"us-west2\" for\nGCP and \"us-west-2\" for AWS.",
            "items": {
              "type": "string"
            }
          },
          "spend_limit": {
            "title": "Spend limit in US cents",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ServerlessClusterUpdateSpecification": {
        "required": [
          "spend_limit"
        ],
        "type": "object",
        "properties": {
          "spend_limit": {
            "title": "Spend limit in US cents",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SortOrder": {
        "type": "string",
        "description": " - DESC: Sort in descending order. The default order is ascending.",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "Status": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Any"
            }
          }
        }
      },
      "UpdateClusterSpecification": {
        "type": "object",
        "properties": {
          "dedicated": {
            "$ref": "#/components/schemas/DedicatedClusterUpdateSpecification"
          },
          "serverless": {
            "$ref": "#/components/schemas/ServerlessClusterUpdateSpecification"
          }
        },
        "example": {
          "dedicated": {
            "region_nodes": {
              "us-west1": 3,
              "us-central1": 5
            },
            "hardware": {
              "machine_type": "n2-standard-8"
            }
          }
        }
      },
      "api.CloudProvider": {
        "type": "string",
        "description": " - GCP: The Google Cloud Platform cloud provider.\n - AWS: The Amazon Web Services cloud provider.",
        "enum": [
          "GCP",
          "AWS"
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}