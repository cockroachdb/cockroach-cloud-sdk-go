/*
CockroachDB Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2021-12-28
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CloudProviderRegion struct for CloudProviderRegion
type CloudProviderRegion struct {
	Name string `json:"name"`
	Location string `json:"location"`
	Provider CloudProvider `json:"provider"`
	Serverless bool `json:"serverless"`
	Distance float32 `json:"distance"`
}

// NewCloudProviderRegion instantiates a new CloudProviderRegion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudProviderRegion(name string, location string, provider CloudProvider, serverless bool, distance float32) *CloudProviderRegion {
	this := CloudProviderRegion{}
	this.Name = name
	this.Location = location
	this.Provider = provider
	this.Serverless = serverless
	this.Distance = distance
	return &this
}

// NewCloudProviderRegionWithDefaults instantiates a new CloudProviderRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudProviderRegionWithDefaults() *CloudProviderRegion {
	this := CloudProviderRegion{}
	var provider CloudProvider = UNSPECIFIED
	this.Provider = provider
	return &this
}

// GetName returns the Name field value
func (o *CloudProviderRegion) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegion) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CloudProviderRegion) SetName(v string) {
	o.Name = v
}

// GetLocation returns the Location field value
func (o *CloudProviderRegion) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegion) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *CloudProviderRegion) SetLocation(v string) {
	o.Location = v
}

// GetProvider returns the Provider field value
func (o *CloudProviderRegion) GetProvider() CloudProvider {
	if o == nil {
		var ret CloudProvider
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegion) GetProviderOk() (*CloudProvider, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *CloudProviderRegion) SetProvider(v CloudProvider) {
	o.Provider = v
}

// GetServerless returns the Serverless field value
func (o *CloudProviderRegion) GetServerless() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Serverless
}

// GetServerlessOk returns a tuple with the Serverless field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegion) GetServerlessOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Serverless, true
}

// SetServerless sets field value
func (o *CloudProviderRegion) SetServerless(v bool) {
	o.Serverless = v
}

// GetDistance returns the Distance field value
func (o *CloudProviderRegion) GetDistance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Distance
}

// GetDistanceOk returns a tuple with the Distance field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegion) GetDistanceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Distance, true
}

// SetDistance sets field value
func (o *CloudProviderRegion) SetDistance(v float32) {
	o.Distance = v
}

func (o CloudProviderRegion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["serverless"] = o.Serverless
	}
	if true {
		toSerialize["distance"] = o.Distance
	}
	return json.Marshal(toSerialize)
}

type NullableCloudProviderRegion struct {
	value *CloudProviderRegion
	isSet bool
}

func (v NullableCloudProviderRegion) Get() *CloudProviderRegion {
	return v.value
}

func (v *NullableCloudProviderRegion) Set(val *CloudProviderRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudProviderRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudProviderRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudProviderRegion(val *CloudProviderRegion) *NullableCloudProviderRegion {
	return &NullableCloudProviderRegion{value: val, isSet: true}
}

func (v NullableCloudProviderRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudProviderRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


